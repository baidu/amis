{
    "version": 3,
    "file": "SwitchAction.js",
    "sourceRoot": "",
    "sources": [
        "/src/actions/SwitchAction.ts"
    ],
    "names": [],
    "mappings": ";;;;AACA,oCAA8C;AAC9C,mCAMkB;AAMlB;;GAEG;AACH;IAAA;IAmBA,CAAC;IAlBO,0BAAG,GAAT,UACE,MAAqB,EACrB,QAAyB,EACzB,KAAyB,EACzB,SAAc;;;;;;8BAE4B,EAArB,KAAA,MAAM,CAAC,QAAQ,IAAI,EAAE;;;6BAArB,CAAA,cAAqB,CAAA;wBAA/B,MAAM;wBACf,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;4BACtB,wBAAS;yBACV;6BAEG,IAAA,oBAAc,EAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,EAA5C,wBAA4C;wBAC9C,qBAAM,IAAA,mBAAU,EAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAA;;wBAAzC,SAAyC,CAAC;wBAC1C,0CAA0C;wBAC1C,wBAAM;;wBARW,IAAqB,CAAA;;;;;;KAW3C;IACH,mBAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,oCAAY;AAqBzB,IAAA,uBAAc,EAAC,QAAQ,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC",
    "sourcesContent": [
        "import { RendererEvent } from '../utils/renderer-event';\nimport { evalExpression } from '../utils/tpl';\nimport {\n  RendererAction,\n  ListenerContext,\n  registerAction,\n  runActions,\n  ILogicAction\n} from './Action';\n\nexport interface ISwitchAction extends ILogicAction {\n  actionType: 'switch';\n}\n\n/**\n * 排他动作\n */\nexport class SwitchAction implements RendererAction {\n  async run(\n    action: ISwitchAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>,\n    mergeData: any\n  ) {\n    for (const branch of action.children || []) {\n      if (!branch.expression) {\n        continue;\n      }\n\n      if (evalExpression(branch.expression, mergeData)) {\n        await runActions(branch, renderer, event);\n        // 去掉runAllMatch，这里只做排他，多个可以直接通过expression\n        break;\n      }\n    }\n  }\n}\n\nregisterAction('switch', new SwitchAction());\n"
    ]
}