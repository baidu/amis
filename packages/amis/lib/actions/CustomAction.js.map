{
    "version": 3,
    "file": "CustomAction.js",
    "sourceRoot": "",
    "sources": [
        "/src/actions/CustomAction.ts"
    ],
    "names": [],
    "mappings": ";;;;AAEA,mCAKkB;AAclB;;;;;;GAMG;AACH;IAAA;IA6BA,CAAC;IA5BO,0BAAG,GAAT,UACE,MAAqB,EACrB,QAAyB,EACzB,KAAyB;;;;;;;wBAGrB,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;wBAE/B,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;4BAClC,UAAU,GAAG,IAAI,QAAQ,CACvB,SAAS,EACT,UAAU,EACV,OAAO,EACP,UAAU,CACJ,CAAC;yBACV;wBAED,0BAA0B;wBAC1B,iCAAiC;wBACjC,qBAAM,CAAA,MAAC,UAAkB,0CAAE,IAAI,CAC7B,IAAI,EACJ,QAAQ,EACR,CAAA,MAAA,QAAQ,CAAC,KAAK,CAAC,QAAQ,0CAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC;iCAChE,MAAA,QAAQ,CAAC,QAAQ,0CAAE,IAAI,CAAC,QAAQ,CAAC,CAAA,EACnC,KAAK,EACL,MAAM,CACP,CAAA,EAAA;;wBATD,0BAA0B;wBAC1B,iCAAiC;wBACjC,SAOC,CAAC;;;;;KACH;IACH,mBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,oCAAY;AA+BzB,IAAA,uBAAc,EAAC,QAAQ,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC",
    "sourcesContent": [
        "import {Action} from '../types';\nimport {RendererEvent} from '../utils/renderer-event';\nimport {\n  RendererAction,\n  ListenerAction,\n  ListenerContext,\n  registerAction\n} from './Action';\n\nexport interface ICustomAction extends ListenerAction {\n  actionType: 'custom';\n  script:\n    | string\n    | ((\n        renderer: any,\n        doAction: (action: Action, data: Record<string, any>) => void,\n        event: RendererEvent<any>,\n        action: ListenerAction\n      ) => void); // 自定义JS，actionType: custom\n}\n\n/**\n * 自定义动作，JS脚本\n *\n * @export\n * @class CustomAction\n * @implements {Action}\n */\nexport class CustomAction implements RendererAction {\n  async run(\n    action: ICustomAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    // 执行自定义编排脚本\n    let scriptFunc = action.script;\n\n    if (typeof scriptFunc === 'string') {\n      scriptFunc = new Function(\n        'context',\n        'doAction',\n        'event',\n        scriptFunc\n      ) as any;\n    }\n\n    // 外部可以直接调用doAction来完成动作调用\n    // 可以通过上下文直接编排动作调用，通过event来进行动作干预\n    await (scriptFunc as any)?.call(\n      null,\n      renderer,\n      renderer.props.onAction?.bind(renderer, event.context.nativeEvent) ||\n        renderer.doAction?.bind(renderer),\n      event,\n      action\n    );\n  }\n}\n\nregisterAction('custom', new CustomAction());\n"
    ]
}