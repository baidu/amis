{
    "version": 3,
    "file": "AjaxAction.js",
    "sourceRoot": "",
    "sources": [
        "/src/actions/AjaxAction.ts"
    ],
    "names": [],
    "mappings": ";;;;AAAA,kEAA+B;AAE/B,oCAAsD;AACtD,0CAA4C;AAC5C,0CAAsD;AAEtD,mCAKkB;AAelB;;;;;;GAMG;AACH;IAAA;IA2EA,CAAC;IA1EO,wBAAG,GAAT,UACE,MAAmB,EACnB,QAAyB,EACzB,KAAyB;;;;;;;;wBAEzB,IAAI,CAAC,CAAA,MAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,0CAAE,OAAO,CAAA,EAAE;4BAChC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;yBAC7C;wBAEK,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;;;;wBAEb,qBAAM,GAAG,CAAC,OAAO,CAC9B,MAAA,MAAM,CAAC,IAAI,0CAAE,GAAa,EAC1B,IAAA,cAAI,EAAC,MAAA,MAAM,CAAC,IAAI,mCAAI,EAAE,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,EACvD,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,OAAO,mCAAI,EAAE,CAC3B,EAAA;;wBAJK,MAAM,GAAG,SAId;wBAED,IAAI,CAAC,IAAA,gBAAO,EAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,EAAE;4BAChC,YAAY,GAAG,IAAA,8BAAwB,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;4BAC3D,YAAY;4BACZ,KAAK,CAAC,OAAO,CACX,IAAA,qBAAY,EACV,KAAK,CAAC,IAAI,EACV,MAAM,CAAC,SAAS;gCACd,CAAC;oCACG,GAAC,UAAG,MAAM,CAAC,SAAS,CAAE,IAAG,YAAY;wCAEzC,CAAC,CAAC,YAAY,CACjB,CACF,CAAC;yBACH;wBAED,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;4BACd,MAAM,IAAI,oBAAW,CACnB,MAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,QAAQ,0CAAE,MAAM,mCAAI,MAAM,CAAC,GAAG,EAC3C,MAAM,CACP,CAAC;yBACH;6BAAM;4BACC,GAAG,GAAG,MAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,QAAQ,0CAAE,OAAO,mCAAI,MAAM,CAAC,GAAG,CAAC;4BACzD,GAAG;gCACD,GAAG,CAAC,MAAM,CACR,SAAS,EACT,GAAG,EACH,MAAM,CAAC,UAAU,KAAK,SAAS;oCAC7B,CAAC,CAAC;wCACE,WAAW,EAAE,IAAI;wCACjB,OAAO,EAAE,MAAM,CAAC,UAAU;qCAC3B;oCACH,CAAC,CAAC,SAAS,CACd,CAAC;yBACL;wBAED,sBAAO,MAAM,CAAC,IAAI,EAAC;;;wBAEnB,IAAI,GAAC,CAAC,IAAI,KAAK,aAAa,EAAE;4BACtB,MAAM,GAAI,GAAiB,CAAC,QAAQ,CAAC;4BAC3C,GAAG,CAAC,MAAM,CACR,OAAO,EACP,GAAC,CAAC,OAAO,EACT,MAAM,CAAC,UAAU,KAAK,SAAS;gCAC7B,CAAC,CAAC;oCACE,WAAW,EAAE,IAAI;oCACjB,OAAO,EAAE,MAAM,CAAC,UAAU;iCAC3B;gCACH,CAAC,CAAC,SAAS,CACd,CAAC;yBACH;6BAAM;4BACL,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,GAAC,CAAC,OAAO,CAAC,CAAC;yBAChC;;;;;;KAKJ;IACH,iBAAC;AAAD,CAAC,AA3ED,IA2EC;AA3EY,gCAAU;AA6EvB,IAAA,uBAAc,EAAC,MAAM,EAAE,IAAI,UAAU,EAAE,CAAC,CAAC",
    "sourcesContent": [
        "import omit from 'lodash/omit';\nimport {Api} from '../types';\nimport {normalizeApiResponseData} from '../utils/api';\nimport {ServerError} from '../utils/errors';\nimport {createObject, isEmpty} from '../utils/helper';\nimport {RendererEvent} from '../utils/renderer-event';\nimport {\n  RendererAction,\n  ListenerAction,\n  ListenerContext,\n  registerAction\n} from './Action';\n\nexport interface IAjaxAction extends ListenerAction {\n  action: 'ajax';\n  args: {\n    api: Api;\n    messages?: {\n      success: string;\n      failed: string;\n    };\n    options?: Record<string, any>;\n    [propName: string]: any;\n  };\n}\n\n/**\n * 发送请求动作\n *\n * @export\n * @class AjaxAction\n * @implements {Action}\n */\nexport class AjaxAction implements RendererAction {\n  async run(\n    action: IAjaxAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    if (!renderer.props.env?.fetcher) {\n      throw new Error('env.fetcher is required!');\n    }\n\n    const env = event.context.env;\n    try {\n      const result = await env.fetcher(\n        action.args?.api as string,\n        omit(action.args ?? {}, ['api', 'options', 'messages']),\n        action.args?.options ?? {}\n      );\n\n      if (!isEmpty(result.data) || result.ok) {\n        const responseData = normalizeApiResponseData(result.data);\n        // 记录请求返回的数据\n        event.setData(\n          createObject(\n            event.data,\n            action.outputVar\n              ? {\n                  [`${action.outputVar}`]: responseData\n                }\n              : responseData\n          )\n        );\n      }\n\n      if (!result.ok) {\n        throw new ServerError(\n          action.args?.messages?.failed ?? result.msg,\n          result\n        );\n      } else {\n        const msg = action.args?.messages?.success ?? result.msg;\n        msg &&\n          env.notify(\n            'success',\n            msg,\n            result.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: result.msgTimeout\n                }\n              : undefined\n          );\n      }\n\n      return result.data;\n    } catch (e) {\n      if (e.type === 'ServerError') {\n        const result = (e as ServerError).response;\n        env.notify(\n          'error',\n          e.message,\n          result.msgTimeout !== undefined\n            ? {\n                closeButton: true,\n                timeout: result.msgTimeout\n              }\n            : undefined\n        );\n      } else {\n        env.notify('error', e.message);\n      }\n\n      // 不阻塞后面执行\n      // throw e;\n    }\n  }\n}\n\nregisterAction('ajax', new AjaxAction());\n"
    ]
}