{
    "version": 3,
    "file": "DialogAction.js",
    "sourceRoot": "",
    "sources": [
        "/src/actions/DialogAction.ts"
    ],
    "names": [],
    "mappings": ";;;;AAEA,mCAKkB;AAwBlB;;;;;;GAMG;AACH;IAAA;IAQA,CAAC;IAPO,0BAAG,GAAT,UACE,MAAqB,EACrB,QAAyB,EACzB,KAAyB;;;;gBAEzB,MAAA,MAAA,QAAQ,CAAC,KAAK,EAAC,QAAQ,mDAAG,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;;;;KACvD;IACH,mBAAC;AAAD,CAAC,AARD,IAQC;AARY,oCAAY;AAczB;;;;;;GAMG;AACH;IAAA;IAqBA,CAAC;IApBO,+BAAG,GAAT,UACE,MAAsB,EACtB,QAAyB,EACzB,KAAyB;;;;gBAEzB,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,SAAS;oBACT,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBACpD;qBAAM;oBACL,SAAS;oBACT,MAAA,MAAA,QAAQ,CAAC,KAAK,EAAC,QAAQ,mDACrB,KAAK,kDAEA,MAAM,KACT,UAAU,EAAE,OAAO,KAErB,MAAM,CAAC,IAAI,CACZ,CAAC;iBACH;;;;KACF;IACH,wBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,8CAAiB;AAuB9B;;GAEG;AACH;IAAA;IAQA,CAAC;IAPO,yBAAG,GAAT,UACE,MAAoB,EACpB,QAAyB,EACzB,KAAyB;;;;gBAEzB,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,GAAG,EAAC,KAAK,mDAAG,MAAA,MAAM,CAAC,IAAI,0CAAE,GAAG,CAAC,CAAC;;;;KAC7C;IACH,kBAAC;AAAD,CAAC,AARD,IAQC;AARY,kCAAW;AAUxB;;GAEG;AACH;IAAA;IAQA,CAAC;IAPO,2BAAG,GAAT,UACE,MAAsB,EACtB,QAAyB,EACzB,KAAyB;;;;gBAEzB,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,GAAG,EAAC,OAAO,mDAAG,MAAA,MAAM,CAAC,IAAI,0CAAE,GAAG,EAAE,MAAA,MAAM,CAAC,IAAI,0CAAE,KAAK,CAAC,CAAC;;;;KACnE;IACH,oBAAC;AAAD,CAAC,AARD,IAQC;AARY,sCAAa;AAU1B,IAAA,uBAAc,EAAC,QAAQ,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC;AAC7C,IAAA,uBAAc,EAAC,aAAa,EAAE,IAAI,iBAAiB,EAAE,CAAC,CAAC;AACvD,IAAA,uBAAc,EAAC,OAAO,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;AAC3C,IAAA,uBAAc,EAAC,eAAe,EAAE,IAAI,aAAa,EAAE,CAAC,CAAC",
    "sourcesContent": [
        "import {SchemaNode} from '../types';\nimport {RendererEvent} from '../utils/renderer-event';\nimport {\n  RendererAction,\n  ListenerAction,\n  ListenerContext,\n  registerAction\n} from './Action';\n\nexport interface IAlertAction extends ListenerAction {\n  actionType: 'alert';\n  args: {\n    msg: string;\n    [propName: string]: any;\n  };\n}\n\nexport interface IConfirmAction extends ListenerAction {\n  actionType: 'confirm';\n  args: {\n    title: string;\n    msg: string;\n    [propName: string]: any;\n  };\n}\n\nexport interface IDialogAction extends ListenerAction {\n  actionType: 'dialog';\n  dialog: SchemaNode;\n}\n\n/**\n * 打开弹窗动作\n *\n * @export\n * @class DialogAction\n * @implements {Action}\n */\nexport class DialogAction implements RendererAction {\n  async run(\n    action: IDialogAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    renderer.props.onAction?.(event, action, action.args);\n  }\n}\n\nexport interface ICloseDialogAction extends ListenerAction {\n  actionType: 'closeDialog';\n}\n\n/**\n * 关闭弹窗动作\n *\n * @export\n * @class CloseDialogAction\n * @implements {Action}\n */\nexport class CloseDialogAction implements RendererAction {\n  async run(\n    action: ListenerAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    if (action.componentId) {\n      // 关闭指定弹窗\n      event.context.scoped.closeById(action.componentId);\n    } else {\n      // 关闭当前弹窗\n      renderer.props.onAction?.(\n        event,\n        {\n          ...action,\n          actionType: 'close'\n        },\n        action.args\n      );\n    }\n  }\n}\n\n/**\n * alert提示动作\n */\nexport class AlertAction implements RendererAction {\n  async run(\n    action: IAlertAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    event.context.env.alert?.(action.args?.msg);\n  }\n}\n\n/**\n * confirm确认提示动作\n */\nexport class ConfirmAction implements RendererAction {\n  async run(\n    action: IConfirmAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>\n  ) {\n    event.context.env.confirm?.(action.args?.msg, action.args?.title);\n  }\n}\n\nregisterAction('dialog', new DialogAction());\nregisterAction('closeDialog', new CloseDialogAction());\nregisterAction('alert', new AlertAction());\nregisterAction('confirmDialog', new ConfirmAction());\n"
    ]
}