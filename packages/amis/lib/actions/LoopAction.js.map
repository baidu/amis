{
    "version": 3,
    "file": "LoopAction.js",
    "sourceRoot": "",
    "sources": [
        "/src/actions/LoopAction.ts"
    ],
    "names": [],
    "mappings": ";;;;AACA,0CAA+C;AAC/C,mCAOkB;AAClB,oDAAuD;AAUvD;;;;;;GAMG;AACH;IAAA;IAwDA,CAAC;IAvDO,wBAAG,GAAT,UACE,MAAmB,EACnB,QAAyB,EACzB,KAAyB,EACzB,SAAc;;;;;;;wBAER,QAAQ,GAAG,MAAA,MAAM,CAAC,IAAI,0CAAE,QAAQ,CAAC;wBACvC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;4BAChC,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;4BACnC,sBAAO;yBACR;wBAEK,QAAQ,GAAG,IAAA,6BAAe,EAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;6BAGxD,CAAC,QAAQ,EAAT,wBAAS;wBACX,OAAO,CAAC,KAAK,CAAC,+CAAU,QAAQ,CAAE,CAAC,CAAC;;;6BAC3B,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAxB,wBAAwB;wBACjC,OAAO,CAAC,KAAK,CAAC,UAAG,QAAQ,0CAAS,CAAC,CAAC;;;6BAC3B,CAAA,MAAA,MAAM,CAAC,QAAQ,0CAAE,MAAM,CAAA,EAAvB,yBAAuB;wBAE1B,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;8BAEF,EAAR,qBAAQ;;;6BAAR,CAAA,sBAAQ,CAAA;wBAAhB,IAAI;wBACb,QAAQ,CAAC,UAAU,GAAG,mBAAU,CAAC,MAAM,CAAC;wBACxC,2BAA2B;wBAC3B,KAAK,CAAC,OAAO,CAAC,IAAA,qBAAY,EAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;8BAEP,EAAf,KAAA,MAAM,CAAC,QAAQ;;;6BAAf,CAAA,cAAe,CAAA;wBAA5B,SAAS;wBAClB,aAAa;wBACb,IAAI,QAAQ,CAAC,UAAU,KAAK,mBAAU,CAAC,QAAQ,EAAE;4BAC/C,wBAAS;yBACV;wBACD,qBAAM,IAAA,mBAAU,EAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAA;;wBAA5C,SAA4C,CAAC;wBAE7C,aAAa;wBACb,IAAI,QAAQ,CAAC,UAAU,KAAK,mBAAU,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;4BAC5D,SAAS;4BACT,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;4BACzB,KAAK,CAAC,eAAe,EAAE,CAAC;4BACxB,wBAAM;yBACP;;;wBAbqB,IAAe,CAAA;;;wBAgBvC,IAAI,KAAK,CAAC,MAAM,EAAE;4BAChB,SAAS;4BACT,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;4BACzB,wBAAM;yBACP;;;wBAzBgB,IAAQ,CAAA;;;wBA4B3B,QAAQ,CAAC,UAAU,GAAG,mBAAU,CAAC,MAAM,CAAC;wBACxC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;KAE5B;IACH,iBAAC;AAAD,CAAC,AAxDD,IAwDC;AAxDY,gCAAU;AA0DvB,IAAA,uBAAc,EAAC,MAAM,EAAE,IAAI,UAAU,EAAE,CAAC,CAAC",
    "sourcesContent": [
        "import { RendererEvent } from '../utils/renderer-event';\nimport { createObject } from '../utils/helper';\nimport {\n  RendererAction,\n  ListenerContext,\n  LoopStatus,\n  registerAction,\n  runActions,\n  ILogicAction\n} from './Action';\nimport { resolveVariable } from '../utils/tpl-builtin';\n\nexport interface ILoopAction extends ILogicAction {\n  actionType: 'loop';\n  args: {\n    loopName: string;\n    [propName: string]: any;\n  };\n}\n\n/**\n * 循环动作\n *\n * @export\n * @class LoopAction\n * @implements {Action}\n */\nexport class LoopAction implements RendererAction {\n  async run(\n    action: ILoopAction,\n    renderer: ListenerContext,\n    event: RendererEvent<any>,\n    mergeData: any\n  ) {\n    const loopName = action.args?.loopName;\n    if (typeof loopName !== 'string') {\n      console.error('loopName 必须是字符串类型');\n      return;\n    }\n\n    const loopData = resolveVariable(loopName, mergeData) || [];\n\n    // 必须是数组\n    if (!loopData) {\n      console.error(`没有找到数据 ${loopName}`);\n    } else if (!Array.isArray(loopData)) {\n      console.error(`${loopName} 数据不是数组`);\n    } else if (action.children?.length) {\n      // 暂存一下\n      const protoData = event.data;\n\n      for (const data of loopData) {\n        renderer.loopStatus = LoopStatus.NORMAL;\n        // 追加逻辑处理中的数据，事件数据优先，用完还要还原\n        event.setData(createObject(event.data, data));\n\n        for (const subAction of action.children) {\n          // @ts-ignore\n          if (renderer.loopStatus === LoopStatus.CONTINUE) {\n            continue;\n          }\n          await runActions(subAction, renderer, event);\n\n          // @ts-ignore\n          if (renderer.loopStatus === LoopStatus.BREAK || event.stoped) {\n            // 还原事件数据\n            event.setData(protoData);\n            event.stopPropagation();\n            break;\n          }\n        }\n\n        if (event.stoped) {\n          // 还原事件数据\n          event.setData(protoData);\n          break;\n        }\n      }\n\n      renderer.loopStatus = LoopStatus.NORMAL;\n      event.setData(protoData);\n    }\n  }\n}\n\nregisterAction('loop', new LoopAction());\n"
    ]
}