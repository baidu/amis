{
    "version": 3,
    "file": "Plain.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Plain.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AACnD,oCAAoC;AAGpC,0CAA6C;AAkC7C;IAA2B,sCAAmC;IAA9D;;IAkCA,CAAC;IA3BC,sBAAM,GAAN;QACQ,IAAA,KASF,IAAI,CAAC,KAAK,EARZ,SAAS,eAAA,EACT,gBAAgB,sBAAA,EAChB,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,GAAG,SAAA,EACH,MAAM,YAAA,EACN,WAAW,iBAAA,EACC,EAAE,gBACF,CAAC;QAEf,IAAM,KAAK,GAAG,IAAA,qBAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAM,SAAS,GAAG,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAEhE,OAAO,CACL,8BAAC,SAAS,IAAC,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,IAC9C,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CACb,IAAA,YAAM,EAAC,GAAG,IAAK,IAAe,EAAE,IAAI,CAAC,CACtC,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CACnE,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CAAC,CAAC,CAAC,CACF,MAAM,CAAC,KAAK,CAAC,CACd,CACS,CACb,CAAC;IACJ,CAAC;IAhCM,kBAAY,GAAwB;QACzC,gBAAgB,EAAE,EAAE;QACpB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,GAAG;KACjB,CAAC;IA6BJ,YAAC;CAAA,AAlCD,CAA2B,eAAK,CAAC,SAAS,GAkCzC;AAlCY,sBAAK;AAwClB;IAAmC,8CAAK;IAAxC;;IAA0C,CAAC;IAA9B,aAAa;QAJzB,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,OAAO;SACd,CAAC;OACW,aAAa,CAAiB;IAAD,oBAAC;CAAA,AAA3C,CAAmC,KAAK,GAAG;AAA9B,sCAAa",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\nimport {BaseSchema, SchemaTpl} from '../Schema';\nimport {getPropValue} from '../utils/helper';\n\n/**\n * Plain 纯文本渲染器\n * 文档：https://baidu.gitee.io/amis/docs/components/plain\n */\nexport interface PlainSchema extends BaseSchema {\n  /**\n   * 指定为模板渲染器。\n   *\n   * 文档：https://baidu.gitee.io/amis/docs/concepts/template\n   */\n  type: 'plain' | 'text';\n\n  tpl?: SchemaTpl;\n  text?: SchemaTpl;\n\n  /**\n   * 是否内联显示？\n   */\n  inline?: boolean;\n\n  /**\n   * 占位符\n   * @deprecated -\n   */\n  placeholder?: string;\n}\nexport interface PlainProps\n  extends RendererProps,\n    Omit<PlainSchema, 'type' | 'className'> {\n  wrapperComponent?: any;\n}\n\nexport class Plain extends React.Component<PlainProps, object> {\n  static defaultProps: Partial<PlainProps> = {\n    wrapperComponent: '',\n    inline: true,\n    placeholder: '-'\n  };\n\n  render() {\n    const {\n      className,\n      wrapperComponent,\n      text,\n      data,\n      tpl,\n      inline,\n      placeholder,\n      classnames: cx\n    } = this.props;\n\n    const value = getPropValue(this.props);\n    const Component = wrapperComponent || (inline ? 'span' : 'div');\n\n    return (\n      <Component className={cx('PlainField', className)}>\n        {tpl || text ? (\n          filter(tpl || (text as string), data)\n        ) : typeof value === 'undefined' || value === '' || value === null ? (\n          <span className=\"text-muted\">{placeholder}</span>\n        ) : (\n          String(value)\n        )}\n      </Component>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:plain|text)$/,\n  name: 'plain'\n})\nexport class PlainRenderer extends Plain {}\n"
    ]
}