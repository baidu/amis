{
    "version": 3,
    "file": "wrapControl.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/wrapControl.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {IFormStore, IFormItemStore} from '../../store/form';\nimport debouce from 'lodash/debounce';\n\nimport {RendererProps, Renderer} from '../../factory';\nimport {ComboStore, IComboStore, IUniqueGroup} from '../../store/combo';\nimport {\n  anyChanged,\n  promisify,\n  isObject,\n  guid,\n  isEmpty,\n  autobind,\n  getVariable,\n  createObject\n} from '../../utils/helper';\nimport {IIRendererStore, IRendererStore} from '../../store';\nimport {ScopedContext, IScopedContext} from '../../Scoped';\nimport {reaction} from 'mobx';\nimport {FormItemStore} from '../../store/formItem';\nimport {isAlive} from 'mobx-state-tree';\nimport {observer} from 'mobx-react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {withRootStore} from '../../WithRootStore';\nimport {FormBaseControl, FormItemWrap} from './Item';\nimport {Api} from '../../types';\nimport {TableStore} from '../../store/table';\n\nexport interface ControlOutterProps extends RendererProps {\n  formStore?: IFormStore;\n  name?: string;\n  value?: any;\n  id?: string;\n  type?: string;\n  required?: boolean;\n  validations: string | {[propsName: string]: any};\n  validationErrors: {[propsName: string]: any};\n  validateOnChange: boolean;\n  multiple?: boolean;\n  delimiter?: string;\n  joinValues?: boolean;\n  extractValue?: boolean;\n  valueField?: string;\n  labelField?: string;\n  unique?: boolean;\n  selectFirst?: boolean;\n  autoFill?: any;\n  clearValueOnHidden?: boolean;\n  validateApi?: Api;\n  submitOnChange?: boolean;\n  validate?: (value: any, values: any, name: string) => any;\n  formItem?: IFormItemStore;\n  addHook?: (fn: () => any, type?: 'validate' | 'init' | 'flush') => void;\n  removeHook?: (fn: () => any, type?: 'validate' | 'init' | 'flush') => void;\n  $schema: {\n    pipeIn?: (value: any, data: any) => any;\n    pipeOut?: (value: any, originValue: any, data: any) => any;\n    [propName: string]: any;\n  };\n  store?: IIRendererStore;\n  onChange?: (\n    value: any,\n    name: string,\n    submit?: boolean,\n    changePristine?: boolean\n  ) => void;\n  formItemDispatchEvent: (type: string, data: any) => void;\n}\n\nexport interface ControlProps {\n  onBulkChange?: (values: Object) => void;\n  onChange?: (value: any, name: string, submit: boolean) => void;\n  store: IIRendererStore;\n}\n\nexport function wrapControl<\n  T extends React.ComponentType<React.ComponentProps<T> & ControlProps>\n>(ComposedComponent: T) {\n  type OuterProps = JSX.LibraryManagedAttributes<\n    T,\n    Omit<React.ComponentProps<T>, keyof ControlProps>\n  > &\n    ControlOutterProps;\n\n  const result = hoistNonReactStatic(\n    withRootStore(\n      observer(\n        class extends React.Component<OuterProps> {\n          public model: IFormItemStore | undefined;\n          control?: any;\n          value?: any = undefined;\n          hook?: () => any;\n          hook2?: () => any;\n          hook3?: () => any;\n          reaction?: () => void;\n\n          static contextType = ScopedContext;\n          static defaultProps = {};\n\n          lazyEmitChange = debouce(this.emitChange.bind(this), 250, {\n            trailing: true,\n            leading: false\n          });\n\n          constructor(props: OuterProps) {\n            super(props);\n\n            const {\n              formStore: form,\n              formItem,\n              rootStore,\n              store,\n              onChange,\n              data,\n              $schema: {\n                name,\n                id,\n                type,\n                required,\n                validations,\n                validationErrors,\n                unique,\n                value,\n                multiple,\n                delimiter,\n                valueField,\n                labelField,\n                joinValues,\n                extractValue,\n                selectFirst,\n                autoFill,\n                clearValueOnHidden,\n                validateApi,\n                minLength,\n                maxLength,\n                validateOnChange,\n                label\n              }\n            } = this.props;\n\n            this.getValue = this.getValue.bind(this);\n            this.setValue = this.setValue.bind(this);\n            this.handleChange = this.handleChange.bind(this);\n            this.setPrinstineValue = this.setPrinstineValue.bind(this);\n            this.controlRef = this.controlRef.bind(this);\n            this.handleBlur = this.handleBlur.bind(this);\n\n            if (!name) {\n              return;\n            }\n\n            let propValue = this.props.value;\n            const model = rootStore.addStore({\n              id: guid(),\n              path: this.props.$path,\n              storeType: FormItemStore.name,\n              parentId: store?.id,\n              name\n            }) as IFormItemStore;\n            this.model = model;\n            // @issue 打算干掉这个\n            formItem?.addSubFormItem(model);\n            model.config({\n              id,\n              type,\n              required,\n              unique,\n              value,\n              rules: validations,\n              messages: validationErrors,\n              multiple,\n              delimiter,\n              valueField,\n              labelField,\n              joinValues,\n              extractValue,\n              selectFirst,\n              autoFill,\n              clearValueOnHidden,\n              validateApi,\n              minLength,\n              maxLength,\n              validateOnChange,\n              label\n            });\n\n            // issue 这个逻辑应该在 combo 里面自己实现。\n            if (\n              this.model.unique &&\n              form?.parentStore?.storeType === ComboStore.name\n            ) {\n              const combo = form.parentStore as IComboStore;\n              combo.bindUniuqueItem(model);\n            }\n\n            // 同步 value\n            model.changeTmpValue(\n              propValue ?? store?.getValueByName(model.name) ?? value\n            );\n\n            // 如果没有初始值，通过 onChange 设置过去\n            if (\n              onChange &&\n              typeof propValue === 'undefined' &&\n              typeof store?.getValueByName(model.name, false) === 'undefined' &&\n              // todo 后续再优化这个判断，\n              // 目前 input-table 中默认值会给冲掉，所以加上这个判断\n              // 对应 issue 为 https://github.com/baidu/amis/issues/2674\n              store?.storeType !== TableStore.name\n            ) {\n              onChange(model.tmpValue, model.name, false, true);\n            }\n          }\n\n          componentDidMount() {\n            const {\n              store,\n              formStore: form,\n              $schema: {name, validate},\n              addHook\n            } = this.props;\n\n            // 提交前先把之前的 lazyEmit 执行一下。\n            this.hook3 = () => {\n              this.lazyEmitChange.flush();\n            };\n            addHook?.(this.hook3, 'flush');\n\n            const formItem = this.model as IFormItemStore;\n            if (formItem && validate) {\n              let finalValidate = promisify(validate.bind(formItem));\n              this.hook2 = () => {\n                formItem.clearError('control:valdiate');\n                return finalValidate(\n                  this.props.data,\n                  this.getValue(),\n                  name\n                ).then((ret: any) => {\n                  if ((typeof ret === 'string' || Array.isArray(ret)) && ret) {\n                    formItem.addError(ret, 'control:valdiate');\n                  }\n                });\n              };\n              addHook?.(this.hook2);\n            }\n          }\n\n          componentDidUpdate(prevProps: OuterProps) {\n            const props = this.props;\n            const form = props.formStore;\n            const model = this.model;\n\n            if (\n              model &&\n              anyChanged(\n                [\n                  'id',\n                  'validations',\n                  'validationErrors',\n                  'value',\n                  'required',\n                  'unique',\n                  'multiple',\n                  'delimiter',\n                  'valueField',\n                  'labelField',\n                  'joinValues',\n                  'extractValue',\n                  'selectFirst',\n                  'autoFill',\n                  'clearValueOnHidden',\n                  'validateApi',\n                  'minLength',\n                  'maxLength',\n                  'label'\n                ],\n                prevProps.$schema,\n                props.$schema\n              )\n            ) {\n              model.config({\n                required: props.$schema.required,\n                id: props.$schema.id,\n                unique: props.$schema.unique,\n                value: props.$schema.value,\n                rules: props.$schema.validations,\n                multiple: props.$schema.multiple,\n                delimiter: props.$schema.delimiter,\n                valueField: props.$schema.valueField,\n                labelField: props.$schema.labelField,\n                joinValues: props.$schema.joinValues,\n                extractValue: props.$schema.extractValue,\n                messages: props.$schema.validationErrors,\n                selectFirst: props.$schema.selectFirst,\n                autoFill: props.$schema.autoFill,\n                clearValueOnHidden: props.$schema.clearValueOnHidden,\n                validateApi: props.$schema.validateApi,\n                minLength: props.$schema.minLength,\n                maxLength: props.$schema.maxLength,\n                label: props.$schema.label\n              });\n            }\n\n            if (model && typeof props.value !== 'undefined') {\n              // 自己控制的 value 优先\n              if (\n                props.value !== prevProps.value &&\n                props.value !== model.tmpValue\n              ) {\n                model.changeTmpValue(props.value);\n              }\n            } else if (\n              // 然后才是查看关联的 name 属性值是否变化\n              model &&\n              props.data !== prevProps.data &&\n              (!model.emitedValue || model.emitedValue === model.tmpValue)\n            ) {\n              model.changeEmitedValue(undefined);\n              const value = getVariable(props.data, model.name);\n              const prevValue = getVariable(prevProps.data, model.name);\n              if (\n                (value !== prevValue ||\n                  getVariable(props.data, model.name, false) !==\n                    getVariable(prevProps.data, model.name, false)) &&\n                value !== model.tmpValue\n              ) {\n                model.changeTmpValue(value);\n              }\n            }\n          }\n\n          componentWillUnmount() {\n            this.hook && this.props.removeHook?.(this.hook);\n            this.hook2 && this.props.removeHook?.(this.hook2);\n            this.hook3 && this.props.removeHook?.(this.hook3, 'flush');\n            // this.lazyEmitChange.flush();\n\n            this.lazyEmitChange.cancel();\n            this.reaction?.();\n            this.disposeModel();\n          }\n\n          disposeModel() {\n            const {formStore: form, formItem, rootStore} = this.props;\n\n            if (\n              this.model &&\n              this.model.unique &&\n              form?.parentStore &&\n              form?.parentStore.storeType === ComboStore.name\n            ) {\n              const combo = form.parentStore as IComboStore;\n              combo.unBindUniuqueItem(this.model);\n            }\n\n            if (this.model) {\n              formItem &&\n                isAlive(formItem) &&\n                formItem.removeSubFormItem(this.model);\n\n              this.model.clearValueOnHidden &&\n                this.model.form?.deleteValueByName(this.model.name);\n\n              isAlive(rootStore) && rootStore.removeStore(this.model);\n            }\n            delete this.model;\n          }\n\n          controlRef(control: any) {\n            const {\n              addHook,\n              removeHook,\n              formStore: form,\n              $schema: {name}\n            } = this.props;\n\n            // 因为 control 有可能被 n 层 hoc 包裹。\n            while (control && control.getWrappedInstance) {\n              control = control.getWrappedInstance();\n            }\n\n            if (control && control.validate && this.model) {\n              const formItem = this.model as IFormItemStore;\n              let validate = promisify(control.validate.bind(control));\n              this.hook = () => {\n                formItem.clearError('component:valdiate');\n\n                return validate(this.props.data, this.getValue(), name).then(\n                  ret => {\n                    if (\n                      (typeof ret === 'string' || Array.isArray(ret)) &&\n                      ret\n                    ) {\n                      formItem.setError(ret, 'component:valdiate');\n                    }\n                  }\n                );\n              };\n              addHook?.(this.hook);\n            } else if (!control && this.hook) {\n              removeHook?.(this.hook);\n              this.hook = undefined;\n            }\n\n            // 注册到 Scoped 上\n            const originRef = this.control;\n            this.control = control;\n            const scoped = this.context as IScopedContext;\n\n            if (control) {\n              scoped.registerComponent(this.control);\n            } else if (originRef) {\n              scoped.unRegisterComponent(originRef);\n            }\n          }\n\n          async validate() {\n            const {formStore: form, data, formItemDispatchEvent} = this.props;\n            let result;\n            if (this.model) {\n              if (\n                this.model.unique &&\n                form?.parentStore &&\n                form.parentStore.storeType === ComboStore.name\n              ) {\n                const combo = form.parentStore as IComboStore;\n                const group = combo.uniques.get(\n                  this.model.name\n                ) as IUniqueGroup;\n                const validPromises = group.items.map(item =>\n                  item.validate(data)\n                );\n                result = await Promise.all(validPromises);\n              } else {\n                const validPromises = form\n                  ?.getItemsByName(this.model.name)\n                  .map(item => item.validate(data));\n                if (validPromises && validPromises.length) {\n                  result = await Promise.all(validPromises);\n                }\n              }\n            }\n            if (result && result.length) {\n              if (result.indexOf(false) > -1) {\n                formItemDispatchEvent('formItemValidateError', data);\n              } else {\n                formItemDispatchEvent('formItemValidateSucc', data);\n              }\n            }\n          }\n\n          handleChange(\n            value: any,\n            submitOnChange: boolean = this.props.$schema.submitOnChange,\n            changeImmediately: boolean = false\n          ) {\n            const {\n              formStore: form,\n              onChange,\n              $schema: {\n                type,\n                pipeOut,\n                changeImmediately: conrolChangeImmediately\n              },\n              formInited,\n              data\n            } = this.props;\n\n            if (\n              !this.model ||\n              // todo 以后想办法不要強耦合类型。\n              ~[\n                'service',\n                'group',\n                'hbox',\n                'panel',\n                'grid',\n                'input-group'\n              ].indexOf(type)\n            ) {\n              onChange && onChange.apply(null, arguments as any);\n              return;\n            }\n\n            if (pipeOut) {\n              const oldValue = this.model.value;\n              value = pipeOut(value, oldValue, data);\n            }\n\n            this.model.changeTmpValue(value);\n\n            if (changeImmediately || conrolChangeImmediately || !formInited) {\n              this.emitChange(submitOnChange);\n            } else {\n              // this.props.onTmpValueChange?.(value, this.model.name);\n              this.lazyEmitChange(submitOnChange);\n            }\n          }\n\n          emitChange(\n            submitOnChange: boolean = this.props.$schema.submitOnChange\n          ) {\n            const {\n              formStore: form,\n              onChange,\n              $schema: {\n                name,\n                id,\n                label,\n                type,\n                onChange: onFormItemChange,\n                maxLength,\n                minLength\n              },\n              data,\n              env,\n              validateOnChange,\n              formSubmited\n            } = this.props;\n\n            if (!this.model) {\n              return;\n            }\n            const value = this.model.tmpValue;\n            const oldValue = getVariable(data, this.model.name, false);\n\n            if (oldValue === value) {\n              return;\n            }\n\n            if (type !== 'input-password') {\n              env?.tracker(\n                {\n                  eventType: 'formItemChange',\n                  eventData: {\n                    id,\n                    name,\n                    label,\n                    type,\n                    value\n                  }\n                },\n                this.props\n              );\n            }\n\n            this.model.changeEmitedValue(value);\n            if (\n              onFormItemChange?.(value, oldValue, this.model, form) === false\n            ) {\n              return;\n            }\n            const validated = this.model.validated;\n            onChange?.(value, name!, submitOnChange === true);\n\n            if (\n              // 如果配置了 minLength 或者 maxLength 就切成及时验证\n              // this.model.rules.minLength ||\n              // this.model.rules.maxLength ||\n              validateOnChange === true ||\n              (validateOnChange !== false && (formSubmited || validated))\n            ) {\n              this.validate();\n            } else if (validateOnChange === false) {\n              this.model?.reset();\n            }\n          }\n\n          handleBlur(e: any) {\n            const {\n              onBlur,\n              $schema: {validateOnBlur}\n            } = this.props;\n\n            if (validateOnBlur && this.model) {\n              this.validate();\n            }\n\n            onBlur && onBlur(e);\n          }\n\n          setPrinstineValue(value: any) {\n            if (!this.model) {\n              return;\n            }\n\n            const {\n              formStore: form,\n              name,\n              $schema: {pipeOut},\n              onChange,\n              value: oldValue,\n              data\n            } = this.props;\n\n            if (pipeOut) {\n              value = pipeOut(value, oldValue, data);\n            }\n\n            onChange?.(value, name!, false, true);\n          }\n\n          getValue() {\n            const {formStore: data, $schema: control} = this.props;\n            let value: any = this.model ? this.model.tmpValue : control.value;\n\n            if (control.pipeIn) {\n              value = control.pipeIn(value, data);\n            }\n\n            return value;\n          }\n\n          // 兼容老版本用法，新版本直接用 onChange 就可以。\n          setValue(value: any, key?: string) {\n            const {\n              $schema: {name},\n              onBulkChange\n            } = this.props;\n\n            if (!key || key === name) {\n              this.handleChange(value);\n            } else {\n              onBulkChange &&\n                onBulkChange({\n                  [key]: value\n                });\n            }\n          }\n\n          render() {\n            const {\n              controlWidth,\n              disabled,\n              formMode,\n              $schema: control,\n              store,\n              data,\n              invisible\n            } = this.props;\n\n            if (invisible) {\n              return null;\n            }\n\n            const value = this.getValue();\n            const model = this.model;\n\n            const injectedProps: any = {\n              defaultSize: controlWidth,\n              disabled: disabled || control.disabled,\n              formItem: this.model,\n              formMode: control.mode || formMode,\n              ref: this.controlRef,\n              data: data || store?.data,\n              value,\n              defaultValue: control.value,\n              formItemValue: value, // 为了兼容老版本的自定义组件\n              onChange: this.handleChange,\n              onBlur: this.handleBlur,\n              setValue: this.setValue,\n              getValue: this.getValue,\n              prinstine: model ? model.prinstine : undefined,\n              setPrinstineValue: this.setPrinstineValue\n            };\n\n            return (\n              <ComposedComponent\n                {...(this.props as JSX.LibraryManagedAttributes<\n                  T,\n                  React.ComponentProps<T>\n                >)}\n                {...injectedProps}\n              />\n            );\n          }\n        }\n      ) as any\n    ),\n    ComposedComponent\n  );\n\n  return result as typeof result & {\n    ComposedComponent: T;\n  };\n}\n"
    ]
}