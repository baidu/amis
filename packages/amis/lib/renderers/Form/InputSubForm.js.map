{
    "version": 3,
    "file": "InputSubForm.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputSubForm.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport {createObject, guid} from '../../utils/helper';\nimport {Icon} from '../../components/icons';\nimport {SchemaClassName} from '../../Schema';\nimport {FormSchema} from '.';\nimport Sortable from 'sortablejs';\nimport {findDOMNode} from 'react-dom';\n\n/**\n * SubForm 子表单\n * 文档：https://baidu.gitee.io/amis/docs/components/form/subform\n */\nexport interface SubFormControlSchema extends FormBaseControl {\n  /**\n   * 指定为 SubForm 子表单\n   */\n  type: 'input-sub-form';\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n\n  /**\n   * 是否多选\n   */\n  multiple?: boolean;\n\n  /**\n   * 是否可拖拽排序\n   */\n  draggable?: boolean;\n\n  /**\n   * 拖拽提示信息\n   */\n  draggableTip?: string;\n\n  /**\n   * 是否可新增\n   */\n  addable?: boolean;\n\n  /**\n   * 是否可删除\n   */\n  removable?: boolean;\n\n  /**\n   * 最少个数\n   */\n  minLength?: number;\n\n  /**\n   * 最多个数\n   */\n  maxLength?: number;\n\n  /**\n   * 当值中存在这个字段，则按钮名称将使用此字段的值来展示。\n   */\n  labelField?: string;\n\n  /**\n   * 按钮默认名称\n   * @default 设置\n   */\n  btnLabel?: string;\n\n  /**\n   * 新增按钮文字\n   */\n  addButtonText?: string;\n\n  /**\n   * 新增按钮 CSS 类名\n   */\n  addButtonClassName?: SchemaClassName;\n\n  /**\n   * 值元素的类名\n   */\n  itemClassName?: SchemaClassName;\n\n  /**\n   * 值列表元素的类名\n   */\n  itemsClassName?: SchemaClassName;\n\n  /**\n   * 是否在左下角显示报错信息\n   */\n  showErrorMsg?: boolean;\n\n  /**\n   * 子表单详情\n   */\n  form?: Omit<FormSchema, 'type'>;\n\n  scaffold?: any;\n}\n\nexport interface SubFormProps extends FormControlProps {\n  placeholder?: string;\n  multiple?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  labelField?: string;\n}\n\nexport interface SubFormState {\n  dialogData?: any;\n  dialogCtx?: {\n    mode?: 'add' | 'edit';\n    index?: number;\n  };\n}\n\nlet dom: HTMLElement;\n\nconst stripTag = (value: string) => {\n  if (!value) {\n    return value;\n  }\n  dom = dom || document.createElement('div');\n  dom.innerHTML = value;\n  return dom.innerText;\n};\n\nexport default class SubFormControl extends React.PureComponent<\n  SubFormProps,\n  SubFormState\n> {\n  static defaultProps: Partial<SubFormProps> = {\n    minLength: 0,\n    maxLength: 0,\n    multiple: false,\n    btnClassName: '',\n    addButtonClassName: '',\n    itemClassName: '',\n    labelField: 'label',\n    btnLabel: 'SubForm.button',\n    placeholder: 'placeholder.empty'\n  };\n\n  static propsList: Array<string> = ['form', 'formStore'];\n\n  state: SubFormState = {};\n  dragTip?: HTMLElement;\n  sortable?: Sortable;\n  id: string = guid();\n  constructor(props: SubFormProps) {\n    super(props);\n\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.editSingle = this.editSingle.bind(this);\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.dragTipRef = this.dragTipRef.bind(this);\n    this.handleDialogConfirm = this.handleDialogConfirm.bind(this);\n  }\n\n  addItem() {\n    this.setState({\n      dialogData: createObject(this.props.data, this.props.scaffold || {}),\n      dialogCtx: {\n        mode: 'add'\n      }\n    });\n  }\n\n  removeItem(e: React.UIEvent<any>) {\n    e.stopPropagation();\n    e.preventDefault();\n    const index = parseInt(e.currentTarget.getAttribute('data-index'), 10);\n\n    let value = this.props.value;\n\n    if (!Array.isArray(value)) {\n      return;\n    }\n\n    value = value.concat();\n    value.splice(index, 1);\n    this.props.onChange(value);\n  }\n\n  editSingle() {\n    const {value} = this.props;\n\n    if (value) {\n      this.setState({\n        dialogData: createObject(this.props.data, this.props.value),\n        dialogCtx: {\n          mode: 'edit'\n        }\n      });\n    } else {\n      this.addItem();\n    }\n  }\n\n  open(e: React.UIEvent<any>) {\n    const index = parseInt(e.currentTarget.getAttribute('data-index'), 10);\n    const value = this.props.value;\n    if (!Array.isArray(value) || !value[index]) {\n      return;\n    }\n\n    this.setState({\n      dialogData: createObject(this.props.data, value[index]),\n      dialogCtx: {\n        mode: 'edit',\n        index\n      }\n    });\n  }\n\n  close() {\n    this.setState({\n      dialogData: undefined,\n      dialogCtx: undefined\n    });\n  }\n\n  handleDialogConfirm(values: Array<object>) {\n    const {multiple, onChange, value} = this.props;\n    const ctx = this.state.dialogCtx;\n\n    if (multiple) {\n      let newValue = Array.isArray(value) ? value.concat() : [];\n\n      if (ctx?.mode === 'add') {\n        newValue.push({\n          ...values[0]\n        });\n      } else {\n        newValue[ctx!.index!] = {\n          ...newValue[ctx!.index!],\n          ...values[0]\n        };\n      }\n      onChange(newValue);\n    } else {\n      onChange({\n        ...value,\n        ...values[0]\n      });\n    }\n\n    this.close();\n  }\n\n  dragTipRef(ref: any) {\n    if (!this.dragTip && ref) {\n      this.initDragging();\n    } else if (this.dragTip && !ref) {\n      this.destroyDragging();\n    }\n\n    this.dragTip = ref;\n  }\n\n  initDragging() {\n    const ns = this.props.classPrefix;\n    const submitOnChange = this.props.submitOnChange;\n    const dom = findDOMNode(this) as HTMLElement;\n    this.sortable = new Sortable(\n      dom.querySelector(`.${ns}SubForm-values`) as HTMLElement,\n      {\n        group: `SubForm-${this.id}`,\n        animation: 150,\n        handle: `.${ns}SubForm-valueDragBar`,\n        ghostClass: `${ns}SubForm-value--dragging`,\n        onEnd: (e: any) => {\n          // 没有移动\n          if (e.newIndex === e.oldIndex) {\n            return;\n          }\n\n          // 换回来\n          const parent = e.to as HTMLElement;\n          if (e.oldIndex < parent.childNodes.length - 1) {\n            parent.insertBefore(e.item, parent.childNodes[e.oldIndex]);\n          } else {\n            parent.appendChild(e.item);\n          }\n\n          const value = this.props.value;\n          if (!Array.isArray(value)) {\n            return;\n          }\n          const newValue = value.concat();\n          newValue.splice(e.newIndex, 0, newValue.splice(e.oldIndex, 1)[0]);\n          this.props.onChange(newValue, submitOnChange, true);\n        }\n      }\n    );\n  }\n\n  destroyDragging() {\n    this.sortable && this.sortable.destroy();\n  }\n\n  buildDialogSchema() {\n    let {form} = this.props;\n\n    const dialogProps = [\n      'title',\n      'actions',\n      'name',\n      'size',\n      'closeOnEsc',\n      'closeOnOutside',\n      'showErrorMsg',\n      'showCloseButton',\n      'bodyClassName',\n      'type'\n    ];\n\n    return {\n      ...pick(form, dialogProps),\n      type: 'dialog',\n      body: {\n        type: 'form',\n        ...omit(form, dialogProps)\n      }\n    };\n  }\n\n  renderMultipe() {\n    const {\n      addButtonClassName,\n      itemClassName,\n      itemsClassName,\n      disabled,\n      maxLength,\n      labelField,\n      value,\n      btnLabel,\n      render,\n      data,\n      translate: __,\n      classnames: cx,\n      placeholder,\n      draggable,\n      draggableTip,\n      addable,\n      removable,\n      minLength,\n      addButtonText\n    } = this.props;\n\n    return (\n      <>\n        {Array.isArray(value) && value.length ? (\n          <div className={cx('SubForm-values', itemsClassName)} key=\"values\">\n            {value.map((item: any, key) => (\n              <div\n                className={cx(\n                  `SubForm-value`,\n                  {\n                    'is-disabled': disabled\n                  },\n                  itemClassName\n                )}\n                key={key}\n              >\n                {draggable && value.length > 1 ? (\n                  <a className={cx('SubForm-valueDragBar')}>\n                    <Icon icon=\"drag-bar\" className={cx('icon')} />\n                  </a>\n                ) : null}\n\n                <span className={cx('SubForm-valueLabel')}>\n                  {(item &&\n                    labelField &&\n                    item[labelField] &&\n                    stripTag(item[labelField])) ||\n                    render(\n                      'label',\n                      {\n                        type: 'tpl',\n                        tpl: __(btnLabel)\n                      },\n                      {\n                        data: createObject(data, item)\n                      }\n                    )}\n                </span>\n                <a\n                  data-index={key}\n                  onClick={this.open}\n                  className={cx('SubForm-valueEdit')}\n                >\n                  <Icon icon=\"pencil\" className=\"icon\" />\n                </a>\n                {!disabled &&\n                removable !== false &&\n                (!minLength || value.length > minLength) ? (\n                  <a\n                    data-index={key}\n                    className={cx('SubForm-valueDel')}\n                    onClick={this.removeItem}\n                  >\n                    <Icon icon=\"close\" className=\"icon\" />\n                  </a>\n                ) : null}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className={cx('SubForm-placeholder')} key=\"placeholder\">\n            {__(placeholder || 'placeholder.empty')}\n          </div>\n        )}\n\n        <div key=\"toolbar\" className={cx('SubForm-toolbar')}>\n          {addable !== false ? (\n            <button\n              type=\"button\"\n              onClick={this.addItem}\n              className={cx(`Button SubForm-addBtn`, addButtonClassName)}\n              disabled={\n                disabled ||\n                !!(\n                  maxLength &&\n                  Array.isArray(value) &&\n                  value.length >= maxLength\n                )\n              }\n            >\n              <Icon icon=\"plus\" className=\"icon\" />\n              <span>{__(addButtonText || 'SubForm.add')}</span>\n            </button>\n          ) : null}\n\n          {draggable && Array.isArray(value) && value.length > 1 ? (\n            <span className={cx(`Combo-dragableTip`)} ref={this.dragTipRef}>\n              {Array.isArray(value) && value.length > 1 ? __(draggableTip) : ''}\n            </span>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n\n  renderSingle() {\n    const {\n      classnames: cx,\n      itemsClassName,\n      itemClassName,\n      disabled,\n      value,\n      labelField,\n      btnLabel,\n      render,\n      data,\n      translate: __\n    } = this.props;\n\n    return (\n      <div className={cx('SubForm-values', itemsClassName)} key=\"values\">\n        <div\n          className={cx(\n            `SubForm-value`,\n            {\n              'is-disabled': disabled\n            },\n            itemClassName\n          )}\n          onClick={this.editSingle}\n          data-tooltip={__('SubForm.editDetail')}\n          data-position=\"bottom\"\n        >\n          <span className={cx('SubForm-valueLabel')}>\n            {(value &&\n              labelField &&\n              value[labelField] &&\n              stripTag(value[labelField])) ||\n              render(\n                'label',\n                {\n                  type: 'tpl',\n                  tpl: __(btnLabel)\n                },\n                {\n                  data: createObject(data, value)\n                }\n              )}\n          </span>\n          <a className={cx('SubForm-valueEdit')}>\n            <Icon icon=\"pencil\" className=\"icon\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {multiple, classPrefix: ns, className, render} = this.props;\n    const dialogData = this.state.dialogData;\n    const dialogCtx = this.state.dialogCtx;\n\n    return (\n      <div className={cx(`${ns}SubFormControl`, className)}>\n        {multiple ? this.renderMultipe() : this.renderSingle()}\n        {render(`modal`, this.buildDialogSchema(), {\n          show: !!dialogCtx,\n          onClose: this.close,\n          onConfirm: this.handleDialogConfirm,\n          data: dialogData,\n          formStore: undefined\n        })}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-sub-form',\n  sizeMutable: false,\n  strictMode: false\n})\nexport class SubFormControlRenderer extends SubFormControl {}\n"
    ]
}