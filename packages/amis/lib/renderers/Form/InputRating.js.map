{
    "version": 3,
    "file": "InputRating.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputRating.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport {autobind, createObject} from '../../utils/helper';\nimport {Action} from '../../types';\nimport Rating, {textPositionType} from '../../components/Rating';\n\n/**\n * Rating\n * 文档：https://baidu.gitee.io/amis/docs/components/form/rating\n */\nexport interface RatingControlSchema extends FormBaseControl {\n  type: 'input-rating';\n\n  /**\n   * 分数\n   */\n  count?: number;\n\n  /**\n   * 允许半颗星\n   */\n  half?: boolean;\n\n  /**\n   * 是否允许再次点击后清除\n   */\n  allowClear?: boolean;\n\n  /**\n   * 是否只读\n   */\n  readonly?: boolean;\n\n  /**\n   * 星星被选中的颜色\n   */\n  // colors?: string | {\n  //   [propName: string | number]: string;\n  // };\n\n  colors?: string | {[propName: string]: string};\n\n  /**\n   * 未被选中的星星的颜色\n   */\n  inactiveColor?: string;\n\n  /**\n   * 星星被选中时的提示文字\n   */\n  texts?: {[propName: string]: string};\n\n  /**\n   * 文字的位置\n   */\n  textPosition?: textPositionType;\n\n  /**\n   * 自定义字符\n   */\n  char?: string;\n\n  /**\n   * 自定义字符类名\n   */\n  charClassName?: string;\n\n  /**\n   * 自定义文字类名\n   */\n  textClassName?: string;\n}\n\nexport interface RatingProps extends FormControlProps {\n  value: number;\n  count: number;\n  half: boolean;\n  readOnly: boolean;\n}\n\nexport default class RatingControl extends React.Component<RatingProps, any> {\n  static defaultProps: Partial<RatingProps> = {\n    value: 0,\n    count: 5,\n    half: false,\n    readOnly: false\n  };\n\n  doAction(action: Action, data: object, throwErrors: boolean) {\n    const actionType = action?.actionType as string;\n    const {onChange, resetValue} = this.props;\n\n    if (actionType === 'clear') {\n      onChange?.('');\n    } else if (actionType === 'reset') {\n      onChange?.(resetValue ?? '');\n    }\n  }\n\n  @autobind\n  async handleChange(value: any) {\n    const {onChange, dispatchEvent, data} = this.props;\n\n    const rendererEvent = await dispatchEvent(\n      'change',\n      createObject(data, {\n        value\n      })\n    );\n\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange?.(value);\n  }\n\n  render() {\n    const {\n      className,\n      value,\n      count,\n      half,\n      readOnly,\n      disabled,\n      onHoverChange,\n      allowClear,\n      char,\n      inactiveColor,\n      colors,\n      texts,\n      charClassName,\n      textClassName,\n      textPosition,\n      classnames: cx\n    } = this.props;\n\n    return (\n      <div className={cx('RatingControl', className)}>\n        <Rating\n          classnames={cx}\n          value={value}\n          disabled={disabled}\n          count={count}\n          half={half}\n          allowClear={allowClear}\n          readOnly={readOnly}\n          char={char}\n          inactiveColor={inactiveColor}\n          colors={colors}\n          texts={texts}\n          charClassName={charClassName}\n          textClassName={textClassName}\n          textPosition={textPosition}\n          onChange={this.handleChange}\n          onHoverChange={(value: number) => {\n            onHoverChange && onHoverChange(value);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-rating',\n  sizeMutable: false\n})\nexport class RatingControlRenderer extends RatingControl {}\n"
    ]
}