{
    "version": 3,
    "file": "InputTag.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputTag.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport Downshift from 'downshift';\nimport find from 'lodash/find';\nimport {findDOMNode} from 'react-dom';\nimport ResultBox from '../../components/ResultBox';\nimport {autobind, filterTree, createObject} from '../../utils/helper';\nimport Spinner from '../../components/Spinner';\nimport Overlay from '../../components/Overlay';\nimport PopOver from '../../components/PopOver';\nimport ListMenu from '../../components/ListMenu';\nimport {Action} from '../../types';\n\n/**\n * Tag 输入框\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tag\n */\nexport interface TagControlSchema extends FormOptionsControl {\n  type: 'input-tag';\n\n  /**\n   * 选项提示信息\n   */\n  optionsTip?: string;\n\n  /**\n   * 是否为下拉模式\n   */\n  dropdown?: boolean;\n}\n\n// declare function matchSorter(items:Array<any>, input:any, options:any): Array<any>;\n\nexport interface TagProps extends OptionsControlProps {\n  placeholder?: string;\n  clearable: boolean;\n  resetValue?: any;\n  optionsTip: string;\n  dropdown?: boolean;\n}\n\nexport interface TagState {\n  inputValue: string;\n  isFocused?: boolean;\n  isOpened?: boolean;\n}\n\nexport default class TagControl extends React.PureComponent<\n  TagProps,\n  TagState\n> {\n  input: React.RefObject<any> = React.createRef();\n\n  static defaultProps = {\n    resetValue: '',\n    labelField: 'label',\n    valueField: 'value',\n    multiple: true,\n    placeholder: 'Tag.placeholder',\n    optionsTip: 'Tag.tip'\n  };\n\n  state = {\n    isOpened: false,\n    inputValue: '',\n    isFocused: false\n  };\n\n  componentDidUpdate(prevProps: TagProps) {\n    const props = this.props;\n\n    if (prevProps.value !== props.value) {\n      this.setState({\n        inputValue: ''\n      });\n    }\n  }\n\n  doAction(action: Action, data: object, throwErrors: boolean) {\n    const {resetValue, onChange} = this.props;\n    const actionType = action?.actionType as string;\n\n    if (actionType === 'clear') {\n      onChange?.('');\n    } else if (actionType === 'reset') {\n      onChange?.(resetValue ?? '');\n    }\n  }\n\n  @autobind\n  async dispatchEvent(eventName: string, eventData: any = {}) {\n    const {dispatchEvent, options, data} = this.props;\n    const rendererEvent = await dispatchEvent(\n      eventName,\n      createObject(data, {\n        options,\n        ...eventData\n      })\n    );\n    // 返回阻塞标识\n    return !!rendererEvent?.prevented;\n  }\n\n  @autobind\n  getValue(type: 'push' | 'pop' | 'normal' = 'normal', option: any = {}) {\n    const {selectedOptions, joinValues, extractValue, delimiter, valueField} =\n      this.props;\n\n    const newValue = selectedOptions.concat();\n    if (type === 'push') {\n      newValue.push(option);\n    } else if (type === 'pop') {\n      newValue.pop();\n    }\n\n    const newValueRes = joinValues\n      ? newValue.map(item => item[valueField || 'value']).join(delimiter || ',')\n      : extractValue\n      ? newValue.map(item => item[valueField || 'value'])\n      : newValue;\n    return newValueRes;\n  }\n\n  async addItem(option: Option) {\n    const {selectedOptions, onChange} = this.props;\n    const newValue = selectedOptions.concat();\n\n    if (find(newValue, item => item.value == option.value)) {\n      return;\n    }\n\n    const newValueRes = this.getValue('push', option);\n\n    const isPrevented = await this.dispatchEvent('change', {\n      value: newValueRes\n    });\n    isPrevented || onChange(newValueRes);\n  }\n\n  @autobind\n  async handleFocus(e: any) {\n    this.setState({\n      isFocused: true,\n      isOpened: true\n    });\n\n    const newValueRes = this.getValue('normal');\n    const isPrevented = await this.dispatchEvent('focus', {\n      value: newValueRes\n    });\n    isPrevented || this.props.onFocus?.(e);\n  }\n\n  @autobind\n  async handleBlur(e: any) {\n    const {\n      selectedOptions,\n      onChange,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField\n    } = this.props;\n\n    const value = this.state.inputValue.trim();\n    const newValueRes = this.getValue('normal');\n\n    const isPrevented = await this.dispatchEvent('blur', {\n      value: newValueRes\n    });\n    isPrevented || this.props.onBlur?.(e);\n    this.setState(\n      {\n        isFocused: false,\n        isOpened: false,\n        inputValue: ''\n      },\n      value\n        ? () => {\n            const newValue = selectedOptions.concat();\n            if (!find(newValue, item => item.value === value)) {\n              const option = {\n                label: value,\n                value: value\n              };\n              newValue.push(option);\n              onChange(\n                joinValues\n                  ? newValue\n                      .map(item => item[valueField || 'value'])\n                      .join(delimiter || ',')\n                  : extractValue\n                  ? newValue.map(item => item[valueField || 'value'])\n                  : newValue\n              );\n            }\n          }\n        : undefined\n    );\n  }\n\n  @autobind\n  close() {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  @autobind\n  handleInputChange(text: string) {\n    this.setState({\n      inputValue: text\n    });\n  }\n\n  @autobind\n  async handleChange(value: Array<Option>) {\n    const {joinValues, extractValue, delimiter, valueField, onChange} =\n      this.props;\n\n    let newValue: any = Array.isArray(value) ? value.concat() : [];\n\n    if (joinValues || extractValue) {\n      newValue = value.map(item => item[valueField || 'value']);\n    }\n\n    if (joinValues) {\n      newValue = newValue.join(delimiter || ',');\n    }\n\n    const isPrevented = await this.dispatchEvent('change', {\n      value: newValue\n    });\n    isPrevented || onChange(newValue);\n  }\n\n  @autobind\n  renderItem(item: Option): any {\n    const {labelField} = this.props;\n    return `${item[labelField || 'label']}`;\n  }\n\n  @autobind\n  async handleKeyDown(evt: React.KeyboardEvent<HTMLInputElement>) {\n    const {selectedOptions, onChange, delimiter} = this.props;\n\n    const value = this.state.inputValue.trim();\n\n    if (selectedOptions.length && !value && evt.key == 'Backspace') {\n      const newValueRes = this.getValue('pop');\n      const isPrevented = await this.dispatchEvent('change', {\n        value: newValueRes\n      });\n      isPrevented || onChange(newValueRes);\n    } else if (value && (evt.key === 'Enter' || evt.key === delimiter)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const newValue = selectedOptions.concat();\n\n      if (!find(newValue, item => item.value == value)) {\n        const newValueRes = this.getValue('push', {\n          label: value,\n          value: value\n        });\n        const isPrevented = await this.dispatchEvent('change', {\n          value: newValueRes\n        });\n        isPrevented || onChange(newValueRes);\n      }\n\n      this.setState({\n        inputValue: ''\n      });\n    }\n  }\n\n  @autobind\n  handleOptionChange(option: Option) {\n    if (this.state.inputValue || !option) {\n      return;\n    }\n    this.addItem(option);\n  }\n\n  @autobind\n  getTarget() {\n    return this.input.current;\n  }\n\n  @autobind\n  getParent() {\n    return this.input.current && findDOMNode(this.input.current)!.parentElement;\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload?.();\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      disabled,\n      placeholder,\n      name,\n      clearable,\n      selectedOptions,\n      loading,\n      popOverContainer,\n      dropdown,\n      options,\n      optionsTip,\n      translate: __\n    } = this.props;\n\n    const finnalOptions = Array.isArray(options)\n      ? filterTree(\n          options,\n          item =>\n            (Array.isArray(item.children) && !!item.children.length) ||\n            (item.value !== undefined && !~selectedOptions.indexOf(item)),\n          0,\n          true\n        )\n      : [];\n\n    return (\n      <Downshift\n        selectedItem={selectedOptions}\n        isOpen={this.state.isFocused}\n        inputValue={this.state.inputValue}\n        onChange={this.handleOptionChange}\n        itemToString={this.renderItem}\n      >\n        {({isOpen, highlightedIndex, getItemProps, getInputProps}) => {\n          return (\n            <div className={cx(className, `TagControl`)}>\n              {/* @ts-ignore 怪了为啥类型不对，后续看 */}\n              <ResultBox\n                {...getInputProps({\n                  name,\n                  ref: this.input,\n                  placeholder: __(placeholder || 'Tag.placeholder'),\n                  value: this.state.inputValue,\n                  onKeyDown: this.handleKeyDown,\n                  onFocus: this.handleFocus,\n                  onBlur: this.handleBlur,\n                  disabled\n                })}\n                onChange={this.handleInputChange}\n                className={cx('TagControl-input')}\n                result={selectedOptions}\n                onResultChange={this.handleChange}\n                itemRender={this.renderItem}\n                clearable={clearable}\n                allowInput\n              >\n                {loading ? <Spinner size=\"sm\" /> : undefined}\n              </ResultBox>\n\n              {dropdown !== false ? (\n                <Overlay\n                  container={popOverContainer || this.getParent}\n                  target={this.getTarget}\n                  placement={'auto'}\n                  show={isOpen && !!finnalOptions.length}\n                >\n                  <PopOver\n                    overlay\n                    className={cx('TagControl-popover')}\n                    onHide={this.close}\n                  >\n                    <ListMenu\n                      options={finnalOptions}\n                      itemRender={this.renderItem}\n                      highlightIndex={highlightedIndex}\n                      getItemProps={({item, index}) => ({\n                        ...getItemProps({\n                          index,\n                          item,\n                          disabled: item.disabled\n                        })\n                      })}\n                    />\n                  </PopOver>\n                </Overlay>\n              ) : (\n                // 保留原来的展现方式，不推荐\n                <div className={cx('TagControl-sug')}>\n                  {optionsTip ? (\n                    <div className={cx('TagControl-sugTip')}>\n                      {__(optionsTip)}\n                    </div>\n                  ) : null}\n                  {options.map((item, index) => (\n                    <div\n                      className={cx('TagControl-sugItem', {\n                        'is-disabled': item.disabled || disabled\n                      })}\n                      key={index}\n                      onClick={this.addItem.bind(this, item)}\n                    >\n                      {item.label}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        }}\n      </Downshift>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'input-tag'\n})\nexport class TagControlRenderer extends TagControl {}\n"
    ]
}