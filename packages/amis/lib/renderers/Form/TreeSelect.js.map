{
    "version": 3,
    "file": "TreeSelect.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/TreeSelect.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport Overlay from '../../components/Overlay';\nimport PopOver from '../../components/PopOver';\nimport PopUp from '../../components/PopUp';\n\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport {Icon} from '../../components/icons';\nimport TreeSelector from '../../components/Tree';\nimport {matchSorter} from 'match-sorter';\nimport debouce from 'lodash/debounce';\nimport find from 'lodash/find';\nimport {Api} from '../../types';\nimport {isEffectiveApi} from '../../utils/api';\nimport Spinner from '../../components/Spinner';\nimport ResultBox from '../../components/ResultBox';\nimport {\n  autobind,\n  getTreeAncestors,\n  isMobile,\n  createObject\n} from '../../utils/helper';\nimport {findDOMNode} from 'react-dom';\nimport {normalizeOptions} from '../../components/Select';\nimport {Action} from '../../types';\n\n/**\n * Tree 下拉选择框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tree\n */\nexport interface TreeSelectControlSchema extends FormOptionsControl {\n  type: 'tree-select';\n\n  /**\n   * 是否隐藏顶级\n   */\n  hideRoot?: boolean;\n\n  /**\n   * 顶级选项的名称\n   */\n  rootLabel?: string;\n\n  /**\n   * 顶级选项的值\n   */\n  rootValue?: any;\n\n  /**\n   * 显示图标\n   */\n  showIcon?: boolean;\n\n  /**\n   * 父子之间是否完全独立。\n   */\n  cascade?: boolean;\n\n  /**\n   * 选父级的时候是否把子节点的值也包含在内。\n   */\n  withChildren?: boolean;\n\n  /**\n   * 选父级的时候，是否只把子节点的值包含在内\n   */\n  onlyChildren?: boolean;\n\n  /**\n   * 单选时，只运行选择叶子节点\n   */\n  onlyLeaf?: boolean;\n\n  /**\n   * 顶级节点是否可以创建子节点\n   */\n  rootCreatable?: boolean;\n\n  /**\n   * 是否隐藏选择框中已选中节点的祖先节点的文本信息\n   */\n  hideNodePathLabel?: boolean;\n\n  /**\n   * 是否开启节点路径模式\n   */\n  enableNodePath?: boolean;\n\n  /**\n   * 开启节点路径模式后，节点路径的分隔符\n   */\n  pathSeparator?: string;\n\n  /**\n   * 是否显示展开线\n   */\n  showOutline?: boolean;\n}\n\nexport interface TreeSelectProps extends OptionsControlProps {\n  placeholder?: any;\n  autoComplete?: Api;\n  hideNodePathLabel?: boolean;\n  enableNodePath?: boolean;\n  pathSeparator?: string;\n  useMobileUI?: boolean;\n}\n\nexport interface TreeSelectState {\n  isOpened: boolean;\n  isFocused: boolean;\n  inputValue: string;\n}\n\nexport default class TreeSelectControl extends React.Component<\n  TreeSelectProps,\n  TreeSelectState\n> {\n  static defaultProps = {\n    placeholder: 'Select.placeholder',\n    optionsPlaceholder: 'placeholder.noData',\n    multiple: false,\n    clearable: true,\n    rootLabel: 'Tree.root',\n    rootValue: '',\n    showIcon: true,\n    joinValues: true,\n    extractValue: false,\n    delimiter: ',',\n    resetValue: '',\n    hideNodePathLabel: false,\n    enableNodePath: false,\n    pathSeparator: '/',\n    selfDisabledAffectChildren: true\n  };\n\n  treeRef: any;\n\n  container: React.RefObject<HTMLDivElement> = React.createRef();\n\n  input: React.RefObject<any> = React.createRef();\n\n  cache: {\n    [propName: string]: any;\n  } = {};\n\n  target: HTMLElement | null;\n  targetRef = (ref: any) =>\n    (this.target = ref ? (findDOMNode(ref) as HTMLElement) : null);\n\n  constructor(props: TreeSelectProps) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n      isOpened: false,\n      isFocused: false\n    };\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.clearValue = this.clearValue.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n\n    this.loadRemote = debouce(this.loadRemote.bind(this), 250, {\n      trailing: true,\n      leading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadRemote('');\n  }\n\n  open(fn?: () => void) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState(\n      {\n        isOpened: true\n      },\n      fn\n    );\n  }\n\n  close() {\n    this.setState(\n      {\n        isOpened: false,\n        inputValue: this.props.multiple ? this.state.inputValue : ''\n      },\n      () => this.loadRemote(this.state.inputValue)\n    );\n  }\n\n  handleFocus(e: any) {\n    const {dispatchEvent, value, data} = this.props;\n    this.setState({\n      isFocused: true\n    });\n    dispatchEvent('focus', createObject(data, {\n      value\n    }));\n  }\n\n  handleBlur(e: any) {\n    const {dispatchEvent, value, data} = this.props;\n    this.setState({\n      isFocused: false\n    });\n    dispatchEvent('blur', createObject(data, {\n      value\n    }));\n  }\n\n  handleKeyPress(e: React.KeyboardEvent) {\n    if (e.key === ' ') {\n      this.handleOutClick(e as any);\n      e.preventDefault();\n    }\n  }\n\n  validate(): any {\n    const {value, minLength, maxLength, delimiter, translate: __} = this.props;\n\n    let curValue = Array.isArray(value)\n      ? value\n      : (value ? String(value) : '').split(delimiter || ',');\n    if (minLength && curValue.length < minLength) {\n      return __(\n        '已选择数量低于设定的最小个数${minLength}，请选择更多的选项。',\n        {minLength}\n      );\n    } else if (maxLength && curValue.length > maxLength) {\n      return __(\n        '已选择数量超出设定的最大个数{{maxLength}}，请取消选择超出的选项。',\n        {maxLength}\n      );\n    }\n  }\n\n  removeItem(index: number, e?: React.MouseEvent<HTMLElement>) {\n    const {\n      selectedOptions,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField,\n      onChange,\n      disabled\n    } = this.props;\n\n    e && e.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    const items = selectedOptions.concat();\n    items.splice(index, 1);\n\n    let value: any = items;\n\n    if (joinValues) {\n      value = items\n        .map((item: any) => item[valueField || 'value'])\n        .join(delimiter || ',');\n    } else if (extractValue) {\n      value = items.map((item: any) => item[valueField || 'value']);\n    }\n\n    onChange(value);\n  }\n\n  handleChange(value: any) {\n    const {multiple} = this.props;\n\n    if (!multiple) {\n      this.close();\n    }\n\n    multiple || !this.state.inputValue\n      ? this.resultChangeEvent(value)\n      : this.setState(\n          {\n            inputValue: ''\n          },\n          () => this.resultChangeEvent(value)\n        );\n  }\n\n  handleInputChange(value: string) {\n    const {autoComplete, data} = this.props;\n\n    this.setState(\n      {\n        inputValue: value\n      },\n      isEffectiveApi(autoComplete, data)\n        ? () => this.loadRemote(this.state.inputValue)\n        : undefined\n    );\n  }\n\n  handleInputKeyDown(event: React.KeyboardEvent) {\n    const inputValue = this.state.inputValue;\n    const {multiple, selectedOptions} = this.props;\n\n    if (\n      event.key === 'Backspace' &&\n      !inputValue &&\n      selectedOptions.length &&\n      multiple\n    ) {\n      this.removeItem(selectedOptions.length - 1);\n    }\n  }\n\n  clearValue() {\n    const {onChange, resetValue} = this.props;\n\n    onChange(typeof resetValue === 'undefined' ? '' : resetValue);\n  }\n\n  filterOptions(options: Array<Option>, keywords: string): Array<Option> {\n    const {labelField, valueField} = this.props;\n\n    return options.map(option => {\n      option = {\n        ...option\n      };\n      option.visible = !!matchSorter([option], keywords, {\n        keys: [labelField || 'label', valueField || 'value']\n      }).length;\n\n      if (!option.visible && option.children) {\n        option.children = this.filterOptions(option.children, keywords);\n        const visibleCount = option.children.filter(\n          item => item.visible\n        ).length;\n        option.visible = !!visibleCount;\n      }\n\n      option.visible && (option.collapsed = false);\n      return option;\n    });\n  }\n\n  async loadRemote(input: string) {\n    const {autoComplete, env, data, setOptions, setLoading} = this.props;\n\n    if (!isEffectiveApi(autoComplete, data)) {\n      return;\n    } else if (!env || !env.fetcher) {\n      throw new Error('fetcher is required');\n    }\n\n    if (this.cache[input] || ~input.indexOf(\"'\") /*中文没输完 233*/) {\n      let options = this.cache[input] || [];\n      let combinedOptions = this.mergeOptions(options);\n      setOptions(combinedOptions);\n\n      return Promise.resolve({\n        options: combinedOptions\n      });\n    }\n\n    setLoading(true);\n\n    try {\n      const ret: any = await env.fetcher(autoComplete, {\n        ...data,\n        term: input,\n        value: input\n      });\n\n      let options = (ret.data && (ret.data as any).options) || ret.data || [];\n      this.cache[input] = options;\n      let combinedOptions = this.mergeOptions(options);\n      setOptions(combinedOptions);\n\n      return {\n        options: combinedOptions\n      };\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  mergeOptions(options: Array<object>) {\n    const {selectedOptions} = this.props;\n    let combinedOptions = normalizeOptions(options).concat();\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      selectedOptions.forEach(option => {\n        if (\n          !find(combinedOptions, (item: Option) => item.value == option.value)\n        ) {\n          combinedOptions.push({\n            ...option,\n            visible: false\n          });\n        }\n      });\n    }\n    return combinedOptions;\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  @autobind\n  handleOutClick(e: React.MouseEvent<any>) {\n    e.defaultPrevented ||\n      this.setState({\n        isOpened: true\n      });\n  }\n\n  @autobind\n  handleResultChange(value: Array<Option>) {\n    const {joinValues, extractValue, delimiter, valueField, multiple} =\n      this.props;\n\n    let newValue: any = Array.isArray(value) ? value.concat() : [];\n\n    if (!multiple && !newValue.length) {\n      this.resultChangeEvent('');\n      return;\n    }\n\n    if (joinValues || extractValue) {\n      newValue = value.map(item => item[valueField || 'value']);\n    }\n\n    if (joinValues) {\n      newValue = newValue.join(delimiter || ',');\n    }\n    this.resultChangeEvent(newValue);\n  }\n\n  doAction(action: Action, data: any, throwErrors: boolean) {\n    if (action.actionType && ['clear', 'reset'].includes(action.actionType)) {\n      this.clearValue();\n    }\n  }\n\n  @autobind\n  async resultChangeEvent(value: any) {\n    const {onChange, dispatchEvent, data} = this.props;\n\n    const rendererEvent = await dispatchEvent(\n      'change',\n      createObject(data, {\n        value\n      })\n    );\n\n    if (rendererEvent?.prevented) {\n      return;\n    }\n    onChange && onChange(value);\n  }\n\n  @autobind\n  renderItem(item: Option) {\n    const {labelField, options, hideNodePathLabel} = this.props;\n\n    if (hideNodePathLabel) {\n      return item[labelField || 'label'];\n    }\n\n    // 将所有祖先节点也展现出来\n    const ancestors = getTreeAncestors(options, item, true);\n    return `${\n      ancestors\n        ? ancestors.map(item => `${item[labelField || 'label']}`).join(' / ')\n        : item[labelField || 'label']\n    }`;\n  }\n\n  @autobind\n  domRef(ref: any) {\n    this.treeRef = ref;\n  }\n\n  renderOuter() {\n    const {\n      value,\n      enableNodePath,\n      pathSeparator = '/',\n      disabled,\n      joinValues,\n      extractValue,\n      delimiter,\n      placeholder,\n      options,\n      multiple,\n      valueField,\n      initiallyOpen,\n      unfoldedLevel,\n      withChildren,\n      rootLabel,\n      cascade,\n      rootValue,\n      showIcon,\n      showRadio,\n      popOverContainer,\n      onlyChildren,\n      onlyLeaf,\n      classPrefix: ns,\n      optionsPlaceholder,\n      searchable,\n      autoComplete,\n      maxLength,\n      minLength,\n      labelField,\n      nodePath,\n      onAdd,\n      creatable,\n      createTip,\n      addControls,\n      onEdit,\n      editable,\n      editTip,\n      editControls,\n      removable,\n      removeTip,\n      onDelete,\n      rootCreatable,\n      rootCreateTip,\n      translate: __,\n      deferLoad,\n      expandTreeOptions,\n      selfDisabledAffectChildren,\n      showOutline,\n      autoCheckChildren\n    } = this.props;\n\n    let filtedOptions =\n      !isEffectiveApi(autoComplete) && searchable && this.state.inputValue\n        ? this.filterOptions(options, this.state.inputValue)\n        : options;\n\n    return (\n      <TreeSelector\n        classPrefix={ns}\n        onRef={this.domRef}\n        onlyChildren={onlyChildren}\n        onlyLeaf={onlyLeaf}\n        labelField={labelField}\n        valueField={valueField}\n        disabled={disabled}\n        onChange={this.handleChange}\n        joinValues={joinValues}\n        extractValue={extractValue}\n        delimiter={delimiter}\n        placeholder={__(optionsPlaceholder)}\n        options={filtedOptions}\n        highlightTxt={this.state.inputValue}\n        multiple={multiple}\n        initiallyOpen={initiallyOpen}\n        unfoldedLevel={unfoldedLevel}\n        withChildren={withChildren}\n        autoCheckChildren={autoCheckChildren}\n        rootLabel={__(rootLabel)}\n        rootValue={rootValue}\n        showIcon={showIcon}\n        showRadio={showRadio}\n        showOutline={showOutline}\n        cascade={cascade}\n        foldedField=\"collapsed\"\n        hideRoot\n        value={value || ''}\n        nodePath={nodePath}\n        enableNodePath={enableNodePath}\n        pathSeparator={pathSeparator}\n        maxLength={maxLength}\n        minLength={minLength}\n        onAdd={onAdd}\n        creatable={creatable}\n        createTip={createTip}\n        rootCreatable={rootCreatable}\n        rootCreateTip={rootCreateTip}\n        onEdit={onEdit}\n        editable={editable}\n        editTip={editTip}\n        removable={removable}\n        removeTip={removeTip}\n        onDelete={onDelete}\n        bultinCUD={!addControls && !editControls}\n        onDeferLoad={deferLoad}\n        onExpandTree={expandTreeOptions}\n        selfDisabledAffectChildren={selfDisabledAffectChildren}\n      />\n    );\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      inline,\n      loading,\n      multiple,\n      value,\n      clearable,\n      classPrefix: ns,\n      classnames: cx,\n      searchable,\n      autoComplete,\n      selectedOptions,\n      placeholder,\n      popOverContainer,\n      useMobileUI,\n      translate: __,\n      env\n    } = this.props;\n\n    const {isOpened} = this.state;\n    const mobileUI = useMobileUI && isMobile();\n    return (\n      <div ref={this.container} className={cx(`TreeSelectControl`, className)}>\n        <ResultBox\n          disabled={disabled}\n          ref={this.targetRef}\n          placeholder={__(placeholder || 'placeholder.empty')}\n          className={cx(`TreeSelect`, {\n            'TreeSelect--inline': inline,\n            'TreeSelect--single': !multiple,\n            'TreeSelect--multi': multiple,\n            'TreeSelect--searchable':\n              searchable || isEffectiveApi(autoComplete),\n            'is-opened': this.state.isOpened,\n            'is-focused': this.state.isFocused,\n            'is-disabled': disabled\n          })}\n          result={\n            multiple\n              ? selectedOptions\n              : selectedOptions.length\n              ? this.renderItem(selectedOptions[0])\n              : ''\n          }\n          onResultClick={this.handleOutClick}\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n          onResultChange={this.handleResultChange}\n          itemRender={this.renderItem}\n          onKeyPress={this.handleKeyPress}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleInputKeyDown}\n          clearable={clearable}\n          allowInput={searchable || isEffectiveApi(autoComplete)}\n          inputPlaceholder={''}\n        >\n          {loading ? <Spinner size=\"sm\" /> : undefined}\n        </ResultBox>\n        {!mobileUI && isOpened ? (\n          <Overlay\n            container={popOverContainer || (() => this.container.current)}\n            target={() => this.target}\n            show\n          >\n            <PopOver\n              classPrefix={ns}\n              className={`${ns}TreeSelect-popover`}\n              style={{\n                minWidth: this.target ? this.target.offsetWidth : undefined\n              }}\n              onHide={this.close}\n              overlay\n            >\n              {this.renderOuter()}\n            </PopOver>\n          </Overlay>\n        ) : null}\n        {mobileUI ? (\n          <PopUp\n            container={\n              env && env.getModalContainer ? env.getModalContainer : undefined\n            }\n            className={cx(`${ns}TreeSelect-popup`)}\n            isShow={isOpened}\n            onHide={this.close}\n          >\n            {this.renderOuter()}\n          </PopUp>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'tree-select'\n})\nexport class TreeSelectControlRenderer extends TreeSelectControl {}\n"
    ]
}