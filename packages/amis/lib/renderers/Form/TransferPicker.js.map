{
    "version": 3,
    "file": "TransferPicker.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/TransferPicker.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  OptionsControlProps,\n  OptionsControl,\n  FormOptionsControl\n} from './Options';\nimport React from 'react';\nimport {Api} from '../../types';\nimport Spinner from '../../components/Spinner';\nimport {BaseTransferRenderer, TransferControlSchema} from './Transfer';\nimport {SchemaApi, SchemaObject} from '../../Schema';\nimport TransferPicker from '../../components/TransferPicker';\nimport {autobind} from '../../utils/helper';\nimport {Action} from '../../types';\n\n/**\n * TransferPicker 穿梭器的弹框形态\n * 文档：https://baidu.gitee.io/amis/docs/components/form/transfer-picker\n */\nexport interface TransferPickerControlSchema\n  extends Omit<TransferControlSchema, 'type'> {\n  type: 'transfer-picker';\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n\n  /**\n   * 弹窗大小\n   */\n  pickerSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\n}\n\nexport interface TabsTransferProps\n  extends OptionsControlProps,\n    Omit<\n      TransferPickerControlSchema,\n      | 'type'\n      | 'options'\n      | 'inputClassName'\n      | 'className'\n      | 'descriptionClassName'\n    > {}\n\n@OptionsControl({\n  type: 'transfer-picker'\n})\nexport class TransferPickerRenderer extends BaseTransferRenderer<TabsTransferProps> {\n  @autobind\n  dispatchEvent(name: string) {\n    const {dispatchEvent, data} = this.props;\n    dispatchEvent(name, data);\n  }\n\n  // 动作\n  doAction(action: Action) {\n    const {resetValue, onChange} = this.props;\n    switch (action.actionType) {\n      case 'clear':\n        onChange?.('');\n        break;\n      case 'reset':\n        onChange?.(resetValue ?? '');\n        break;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      selectedOptions,\n      sortable,\n      loading,\n      searchable,\n      searchResultMode,\n      showArrow,\n      deferLoad,\n      disabled,\n      selectTitle,\n      resultTitle,\n      pickerSize,\n      columns,\n      leftMode,\n      selectMode,\n      borderMode\n    } = this.props;\n\n    // 目前 LeftOptions 没有接口可以动态加载\n    // 为了方便可以快速实现动态化，让选项的第一个成员携带\n    // LeftOptions 信息\n    let {options, leftOptions, leftDefaultValue} = this.props;\n    if (\n      selectMode === 'associated' &&\n      options &&\n      options.length === 1 &&\n      options[0].leftOptions &&\n      Array.isArray(options[0].children)\n    ) {\n      leftOptions = options[0].leftOptions;\n      leftDefaultValue = options[0].leftDefaultValue ?? leftDefaultValue;\n      options = options[0].children;\n    }\n\n    return (\n      <div className={cx('TransferControl', className)}>\n        <TransferPicker\n          borderMode={borderMode}\n          selectMode={selectMode}\n          value={selectedOptions}\n          disabled={disabled}\n          options={options}\n          onChange={this.handleChange}\n          option2value={this.option2value}\n          sortable={sortable}\n          searchResultMode={searchResultMode}\n          onSearch={searchable ? this.handleSearch : undefined}\n          showArrow={showArrow}\n          onDeferLoad={deferLoad}\n          selectTitle={selectTitle}\n          resultTitle={resultTitle}\n          size={pickerSize}\n          columns={columns}\n          leftMode={leftMode}\n          leftOptions={leftOptions}\n          optionItemRender={this.optionItemRender}\n          resultItemRender={this.resultItemRender}\n          onFocus={() => this.dispatchEvent('focus')}\n          onBlur={() => this.dispatchEvent('blur')}\n        />\n\n        <Spinner overlay key=\"info\" show={loading} />\n      </div>\n    );\n  }\n}\n"
    ]
}