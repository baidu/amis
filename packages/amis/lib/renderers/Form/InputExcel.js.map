{
    "version": 3,
    "file": "InputExcel.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputExcel.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React, {Suspense} from 'react';\nimport Dropzone from 'react-dropzone';\nimport {FileRejection} from 'react-dropzone';\nimport {Icon} from '../../components/icons';\nimport {autobind, createObject} from '../../utils/helper';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\n\n/**\n * Excel 解析\n * 文档：https://baidu.gitee.io/amis/docs/components/form/input-excel\n */\nexport interface InputExcelControlSchema extends FormBaseControl {\n  /**\n   * 指定为 Excel 解析\n   */\n  type: 'input-excel';\n\n  /**\n   * 是否解析所有 sheet，默认情况下只解析第一个\n   */\n  allSheets: boolean;\n\n  /**\n   * 解析模式，array 是解析成二维数组，object 是将第一列作为字段名，解析为对象数组\n   */\n  parseMode: 'array' | 'object';\n\n  /**\n   * 是否包含空内容，主要用于二维数组模式\n   */\n  includeEmpty: boolean;\n\n  /**\n   * 纯文本模式\n   */\n  plainText: boolean;\n}\n\nexport interface ExcelProps\n  extends FormControlProps,\n    Omit<\n      InputExcelControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {}\n\nexport interface ExcelControlState {\n  filename: string;\n}\n\nexport type InputExcelRendererEvent = 'change';\nexport type InputExcelRendererAction = 'clear';\nexport default class ExcelControl extends React.PureComponent<\n  ExcelProps,\n  ExcelControlState\n> {\n  static defaultProps: Partial<ExcelProps> = {\n    allSheets: false,\n    parseMode: 'object',\n    includeEmpty: true,\n    plainText: true\n  };\n\n  state: ExcelControlState = {\n    filename: ''\n  };\n\n  ExcelJS: any;\n\n  @autobind\n  handleDrop(files: File[]) {\n    const {allSheets, onChange, dispatchEvent, data} = this.props;\n    const excel = files[0];\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(excel);\n    reader.onload = async () => {\n      if (reader.result) {\n        import('exceljs').then(async (ExcelJS: any) => {\n          this.ExcelJS = ExcelJS;\n          const workbook = new ExcelJS.Workbook();\n          await workbook.xlsx.load(reader.result);\n          let sheetsResult: any[] = [];\n          if (allSheets) {\n            workbook.eachSheet((worksheet: any) => {\n              sheetsResult.push({\n                sheetName: worksheet.name,\n                data: this.readWorksheet(worksheet)\n              });\n            });\n          } else {\n            const worksheet = workbook.worksheets[0];\n            sheetsResult = this.readWorksheet(worksheet);\n          }\n          const dispatcher = await this.dispatchEvent('change', sheetsResult);\n          if (dispatcher?.prevented) {\n            return;\n          }\n          onChange(sheetsResult);\n          this.setState({filename: files[0].name});\n        });\n      }\n    };\n  }\n\n  async dispatchEvent(eventName: string, eventData?: Record<string, any>) {\n    const {dispatchEvent, data} = this.props;\n    return await dispatchEvent(\n      eventName,\n      createObject(data, {\n        value: eventData\n      })\n    );\n  }\n  /**\n   * 读取单个 sheet 的内容\n   */\n  readWorksheet(worksheet: any) {\n    const result: any[] = [];\n    const {parseMode, plainText, includeEmpty} = this.props;\n\n    if (parseMode === 'array') {\n      worksheet.eachRow((row: any, rowNumber: number) => {\n        const values = row.values;\n        values.shift(); // excel 返回的值是从 1 开始的，0 节点永远是 null\n        result.push(values);\n      });\n      return result;\n    } else {\n      let firstRowValues: any[] = [];\n      worksheet.eachRow((row: any, rowNumber: number) => {\n        // 将第一列作为字段名\n        if (rowNumber == 1) {\n          firstRowValues = row.values;\n        } else {\n          const data: any = {};\n          if (includeEmpty) {\n            firstRowValues.forEach((item: any) => {\n              data[item] = '';\n            });\n          }\n          row.eachCell((cell: any, colNumber: any) => {\n            if (firstRowValues[colNumber]) {\n              let value = cell.value;\n              if (plainText) {\n                const ExcelValueType = this.ExcelJS.ValueType;\n                if (cell.type === ExcelValueType.Hyperlink) {\n                  value = cell.value.hyperlink;\n                } else if (cell.type === ExcelValueType.Formula) {\n                  value = cell.value.result;\n                } else if (cell.type === ExcelValueType.RichText) {\n                  value = cell.value.richText\n                    .map((item: any) => item.text)\n                    .join('');\n                } else if (cell.type === ExcelValueType.Error) {\n                  value = '';\n                }\n              }\n\n              data[firstRowValues[colNumber]] = value;\n            }\n          });\n          result.push(data);\n        }\n      });\n      return result;\n    }\n  }\n\n  doAction(action: any, data: object, throwErrors: boolean) {\n    const actionType = action?.actionType as string;\n    const {onChange, resetValue} = this.props;\n\n    if (actionType === 'clear') {\n      onChange('');\n    } else if (actionType === 'reset') {\n      onChange(resetValue ?? '');\n    }\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      classPrefix: ns,\n      value,\n      disabled,\n      translate: __\n    } = this.props;\n\n    return (\n      <div className={cx('ExcelControl', className)}>\n        <Dropzone\n          key=\"drop-zone\"\n          onDrop={this.handleDrop}\n          accept=\".xlsx\"\n          multiple={false}\n          disabled={disabled}\n        >\n          {({getRootProps, getInputProps}) => (\n            <section className={cx('ExcelControl-container', className)}>\n              <div {...getRootProps({className: cx('ExcelControl-dropzone')})}>\n                <input {...getInputProps()} />\n                {this.state.filename ? (\n                  __('Excel.parsed', {\n                    filename: this.state.filename\n                  })\n                ) : (\n                  <p>{__('Excel.placeholder')}</p>\n                )}\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-excel'\n})\nexport class ExcelControlRenderer extends ExcelControl {}\n"
    ]
}