{
    "version": 3,
    "file": "Control.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Control.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAE1B,yCAAsD;AAEtD,6CAA4C;AAC5C,uDAAwD;AACxD,+BAAqD;AAkBrD;IAAqC,gDAA8B;IAAnE;;IAsBA,CAAC;IApBC,qCAAW,GAAX;QACQ,IAAA,KAA6B,IAAI,CAAC,KAAK,EAAtC,MAAM,YAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAc,CAAC;QAC9C,OAAO,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;YAC3B,KAAK,EAAE,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAA,6BAAe,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1E,CAAC,CAAC;IACL,CAAC;IAED,gCAAM,GAAN;;QACE,IAAM,KAAoC,IAAI,CAAC,KAAK,EAA7C,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAK,IAAI,2BAAhC,8BAAiC,CAAa,CAAC;QACrD,OAAO,CACL,8BAAC,mBAAY,4BACN,IAAY,IACjB,QAAQ,EAAE,MAAA,IAAI,CAAC,IAAI,mCAAI,IAAI,CAAC,QAAQ,EACpC,MAAM,EAAE,MAAM,EACd,WAAW,EAAE,KAAK,EAClB,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,IAAI,CAAC,WAAW,IAC/B,CACH,CAAC;IACJ,CAAC;IAnBD;QADC,iBAAQ;;;;sDAMR;IAPU,eAAe;QAH3B,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,SAAS;SAChB,CAAC;OACW,eAAe,CAsB3B;IAAD,sBAAC;CAAA,AAtBD,CAAqC,eAAK,CAAC,SAAS,GAsBnD;AAtBY,0CAAe",
    "sourcesContent": [
        "import React from 'react';\n\nimport {RendererProps, Renderer} from '../../factory';\nimport {SchemaCollection} from '../../Schema';\nimport {autobind} from '../../utils/helper';\nimport {resolveVariable} from '../../utils/tpl-builtin';\nimport {FormBaseControl, FormItemWrap} from './Item';\n\n/**\n * Group 表单集合渲染器，能让多个表单在一行显示\n * 文档：https://baidu.gitee.io/amis/docs/components/form/group\n */\nexport interface FormControlSchema extends FormBaseControl {\n  type: 'control';\n\n  /**\n   * FormItem 内容\n   */\n  body: SchemaCollection;\n}\n\n@Renderer({\n  type: 'control'\n})\nexport class ControlRenderer extends React.Component<RendererProps> {\n  @autobind\n  renderInput() {\n    const {render, body, name, data} = this.props;\n    return render('inner', body, {\n      value: typeof name === 'string' ? resolveVariable(name, data) : undefined\n    });\n  }\n\n  render() {\n    const {render, label, control, ...rest} = this.props;\n    return (\n      <FormItemWrap\n        {...(rest as any)}\n        formMode={rest.mode ?? rest.formMode}\n        render={render}\n        sizeMutable={false}\n        label={label}\n        renderControl={this.renderInput}\n      />\n    );\n  }\n}\n"
    ]
}