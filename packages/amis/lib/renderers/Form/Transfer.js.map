{
    "version": 3,
    "file": "Transfer.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Transfer.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  OptionsControlProps,\n  OptionsControl,\n  FormOptionsControl\n} from './Options';\nimport React from 'react';\nimport Transfer, {Transfer as BaseTransfer} from '../../components/Transfer';\nimport type {Option} from './Options';\nimport {\n  autobind,\n  filterTree,\n  string2regExp,\n  createObject,\n  findTree,\n  findTreeIndex,\n  getTree,\n  spliceTree\n} from '../../utils/helper';\nimport {Api} from '../../types';\nimport Spinner from '../../components/Spinner';\nimport find from 'lodash/find';\nimport {optionValueCompare} from '../../components/Select';\nimport {resolveVariable} from '../../utils/tpl-builtin';\nimport {SchemaApi, SchemaObject} from '../../Schema';\nimport {BaseSelection, ItemRenderStates} from '../../components/Selection';\nimport {\n  ItemRenderStates as ResultItemRenderStates,\n  ResultList\n} from '../../components/ResultList';\nimport {Action} from '../../types';\n\n/**\n * Transfer\n * 文档：https://baidu.gitee.io/amis/docs/components/form/transfer\n */\nexport interface TransferControlSchema extends FormOptionsControl {\n  type: 'transfer';\n\n  /**\n   * 是否显示剪头\n   */\n  showArrow?: boolean;\n\n  /**\n   * 可排序？\n   */\n  sortable?: boolean;\n\n  /**\n   * 勾选展示模式\n   */\n  selectMode?: 'table' | 'list' | 'tree' | 'chained' | 'associated';\n\n  /**\n   * 当 selectMode 为 associated 时用来定义左侧的选项\n   */\n  leftOptions?: Array<Option>;\n\n  /**\n   * 当 selectMode 为 associated 时用来定义左侧的选择模式\n   */\n  leftMode?: 'tree' | 'list';\n\n  /**\n   * 当 selectMode 为 associated 时用来定义右侧的选择模式\n   */\n  rightMode?: 'table' | 'list' | 'tree' | 'chained';\n\n  /**\n   * 搜索结果展示模式\n   */\n  searchResultMode?: 'table' | 'list' | 'tree' | 'chained';\n\n  /**\n   * 当 selectMode 为 table 时定义表格列信息。\n   */\n  columns?: Array<any>;\n\n  /**\n   * 当 searchResultMode 为 table 时定义表格列信息。\n   */\n  searchResultColumns?: Array<any>;\n\n  /**\n   * 可搜索？\n   */\n  searchable?: boolean;\n\n  /**\n   * 搜索 API\n   */\n  searchApi?: SchemaApi;\n\n  /**\n   * 左侧的标题文字\n   */\n  selectTitle?: string;\n\n  /**\n   * 右侧结果的标题文字\n   */\n  resultTitle?: string;\n\n  /**\n   * 用来丰富选项展示\n   */\n  menuTpl?: SchemaObject;\n\n  /**\n   * 用来丰富值的展示\n   */\n  valueTpl?: SchemaObject;\n}\n\nexport interface BaseTransferProps\n  extends OptionsControlProps,\n    Omit<\n      TransferControlSchema,\n      | 'type'\n      | 'options'\n      | 'className'\n      | 'descriptionClassName'\n      | 'inputClassName'\n    > {\n  resultItemRender?: (option: Option) => JSX.Element;\n}\n\nexport class BaseTransferRenderer<\n  T extends OptionsControlProps = BaseTransferProps\n> extends React.Component<T> {\n  tranferRef?: BaseTransfer;\n\n  @autobind\n  async handleChange(value: Array<Option> | Option, optionModified?: boolean) {\n    const {\n      onChange,\n      joinValues,\n      delimiter,\n      valueField,\n      extractValue,\n      options,\n      dispatchEvent,\n      setOptions\n    } = this.props;\n    let newValue: any = value;\n    let newOptions = options.concat();\n\n    if (Array.isArray(value)) {\n      newValue = value.map(item => {\n        const indexes = findTreeIndex(\n          options,\n          optionValueCompare(\n            item[(valueField as string) || 'value'],\n            (valueField as string) || 'value'\n          )\n        );\n\n        if (!indexes) {\n          newOptions.push(item);\n        } else if (optionModified) {\n          const origin = getTree(newOptions, indexes);\n          newOptions = spliceTree(newOptions, indexes, 1, {\n            ...origin,\n            ...item\n          });\n        }\n\n        return joinValues || extractValue\n          ? item[(valueField as string) || 'value']\n          : item;\n      });\n\n      if (joinValues) {\n        newValue = newValue.join(delimiter || ',');\n      }\n    } else if (value) {\n      newValue =\n        joinValues || extractValue\n          ? value[(valueField as string) || 'value']\n          : value;\n    }\n\n    (newOptions.length > options.length || optionModified) &&\n      setOptions(newOptions, true);\n\n    // 触发渲染器事件\n    const rendererEvent = await dispatchEvent('change', {\n      value: newValue,\n      options\n    });\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange(newValue);\n  }\n\n  @autobind\n  option2value(option: Option) {\n    return option;\n  }\n\n  @autobind\n  async handleSearch(term: string, cancelExecutor: Function) {\n    const {\n      searchApi,\n      options,\n      labelField,\n      valueField,\n      env,\n      data,\n      translate: __\n    } = this.props;\n\n    if (searchApi) {\n      try {\n        const payload = await env.fetcher(\n          searchApi,\n          createObject(data, {term}),\n          {\n            cancelExecutor\n          }\n        );\n\n        if (!payload.ok) {\n          throw new Error(__(payload.msg || 'networkError'));\n        }\n\n        const result =\n          payload.data.options || payload.data.items || payload.data;\n        if (!Array.isArray(result)) {\n          throw new Error('CRUD.invalidArray');\n        }\n\n        return result.map(item => {\n          let resolved: any = null;\n          const value = item[valueField || 'value'];\n\n          // 只有 value 值有意义的时候，再去找；否则直接返回\n          if (Array.isArray(options) && value !== null && value !== undefined) {\n            resolved = find(options, optionValueCompare(value, valueField));\n          }\n\n          return resolved || item;\n        });\n      } catch (e) {\n        if (!env.isCancel(e)) {\n          env.notify('error', e.message);\n        }\n\n        return [];\n      }\n    } else if (term) {\n      const regexp = string2regExp(term);\n\n      return filterTree(\n        options,\n        (option: Option) => {\n          return !!(\n            (Array.isArray(option.children) && option.children.length) ||\n            (option[(valueField as string) || 'value'] &&\n              (regexp.test(option[(labelField as string) || 'label']) ||\n                regexp.test(option[(valueField as string) || 'value'])))\n          );\n        },\n        0,\n        true\n      );\n    } else {\n      return options;\n    }\n  }\n\n  @autobind\n  optionItemRender(option: Option, states: ItemRenderStates) {\n    const {menuTpl, render, data} = this.props;\n\n    if (menuTpl) {\n      return render(`item/${states.index}`, menuTpl, {\n        data: createObject(createObject(data, states), option)\n      });\n    }\n\n    return BaseSelection.itemRender(option, states);\n  }\n\n  @autobind\n  resultItemRender(option: Option, states: ResultItemRenderStates) {\n    const {valueTpl, render, data} = this.props;\n\n    if (valueTpl) {\n      return render(`value/${states.index}`, valueTpl, {\n        onChange: states.onChange,\n        data: createObject(createObject(data, states), option)\n      });\n    }\n\n    return ResultList.itemRender(option);\n  }\n\n  @autobind\n  renderCell(\n    column: {\n      name: string;\n      label: string;\n      [propName: string]: any;\n    },\n    option: Option,\n    colIndex: number,\n    rowIndex: number\n  ) {\n    const {render, data} = this.props;\n    return render(\n      `cell/${colIndex}/${rowIndex}`,\n      {\n        type: 'text',\n        ...column\n      },\n      {\n        value: resolveVariable(column.name, option),\n        data: createObject(data, option)\n      }\n    );\n  }\n\n  @autobind\n  getRef(ref: BaseTransfer) {\n    this.tranferRef = ref;\n  }\n\n  @autobind\n  onSelectAll(options: Option[]) {\n    const {dispatchEvent} = this.props;\n    dispatchEvent('selectAll', options);\n  }\n\n  // 动作\n  doAction(action: Action, data: object, throwErrors: boolean) {\n    const {resetValue, onChange} = this.props;\n    switch (action.actionType) {\n      case 'clear':\n        onChange?.('');\n        break;\n      case 'reset':\n        onChange?.(resetValue ?? '');\n        break;\n      case 'selectAll':\n        this.tranferRef?.selectAll();\n        break;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      selectedOptions,\n      showArrow,\n      sortable,\n      selectMode,\n      columns,\n      loading,\n      searchable,\n      searchResultMode,\n      searchResultColumns,\n      deferLoad,\n      leftMode,\n      rightMode,\n      disabled,\n      selectTitle,\n      resultTitle,\n      menuTpl,\n      resultItemRender\n    } = this.props;\n\n    // 目前 LeftOptions 没有接口可以动态加载\n    // 为了方便可以快速实现动态化，让选项的第一个成员携带\n    // LeftOptions 信息\n    let {options, leftOptions, leftDefaultValue} = this.props;\n\n    if (\n      selectMode === 'associated' &&\n      options &&\n      options.length &&\n      options[0].leftOptions &&\n      Array.isArray(options[0].children)\n    ) {\n      leftOptions = options[0].leftOptions;\n      leftDefaultValue = options[0].leftDefaultValue ?? leftDefaultValue;\n      options = options[0].children;\n    }\n\n    return (\n      <div className={cx('TransferControl', className)}>\n        <Transfer\n          value={selectedOptions}\n          options={options}\n          disabled={disabled}\n          onChange={this.handleChange}\n          option2value={this.option2value}\n          sortable={sortable}\n          showArrow={showArrow}\n          selectMode={selectMode}\n          searchResultMode={searchResultMode}\n          searchResultColumns={searchResultColumns}\n          columns={columns}\n          onSearch={searchable ? this.handleSearch : undefined}\n          onDeferLoad={deferLoad}\n          leftOptions={leftOptions}\n          leftMode={leftMode}\n          rightMode={rightMode}\n          cellRender={this.renderCell}\n          selectTitle={selectTitle}\n          resultTitle={resultTitle}\n          optionItemRender={this.optionItemRender}\n          resultItemRender={this.resultItemRender}\n          onSelectAll={this.onSelectAll}\n          onRef={this.getRef}\n        />\n\n        <Spinner overlay key=\"info\" show={loading} />\n      </div>\n    );\n  }\n}\n\n// ts 3.9 里面非得这样才不报错，鬼知道为何。\nexport class TransferRender extends BaseTransferRenderer {}\n\nexport default OptionsControl({\n  type: 'transfer'\n})(TransferRender);\n"
    ]
}