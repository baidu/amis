{
    "version": 3,
    "file": "Select.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Select.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport cx from 'classnames';\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport Select, {normalizeOptions} from '../../components/Select';\nimport find from 'lodash/find';\nimport debouce from 'lodash/debounce';\nimport {Api, Action} from '../../types';\nimport {isEffectiveApi, isApiOutdated} from '../../utils/api';\nimport {isEmpty, createObject, autobind, isMobile} from '../../utils/helper';\nimport {dataMapping} from '../../utils/tpl-builtin';\nimport {SchemaApi} from '../../Schema';\nimport Spinner from '../../components/Spinner';\nimport {BaseTransferRenderer, TransferControlSchema} from './Transfer';\nimport TransferDropDown from '../../components/TransferDropDown';\n\n/**\n * Select 下拉选择框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/select\n */\nexport interface SelectControlSchema extends FormOptionsControl {\n  type: 'select' | 'multi-select';\n\n  /**\n   * 自动完成 API，当输入部分文字的时候，会将这些文字通过 ${term} 可以取到，发送给接口。\n   * 接口可以返回匹配到的选项，帮助用户输入。\n   */\n  autoComplete?: SchemaApi;\n\n  /**\n   * 可以自定义菜单展示。\n   */\n  menuTpl?: string;\n\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n\n  /**\n   * 勾选展示模式\n   */\n  selectMode?: 'table' | 'group' | 'tree' | 'chained' | 'associated';\n\n  /**\n   * 当 selectMode 为 associated 时用来定义左侧的选项\n   */\n  leftOptions?: Array<Option>;\n\n  /**\n   * 当 selectMode 为 associated 时用来定义左侧的选择模式\n   */\n  leftMode?: 'tree' | 'list';\n\n  /**\n   * 当 selectMode 为 associated 时用来定义右侧的选择模式\n   */\n  rightMode?: 'table' | 'list' | 'tree' | 'chained';\n\n  /**\n   * 搜索结果展示模式\n   */\n  searchResultMode?: 'table' | 'list' | 'tree' | 'chained';\n\n  /**\n   * 当 selectMode 为 table 时定义表格列信息。\n   */\n  columns?: Array<any>;\n\n  /**\n   * 当 searchResultMode 为 table 时定义表格列信息。\n   */\n  searchResultColumns?: Array<any>;\n\n  /**\n   * 可搜索？\n   */\n  searchable?: boolean;\n\n  /**\n   * 搜索 API\n   */\n  searchApi?: SchemaApi;\n}\n\nexport interface SelectProps extends OptionsControlProps {\n  autoComplete?: Api;\n  searchable?: boolean;\n  defaultOpen?: boolean;\n  useMobileUI?: boolean;\n}\n\nexport type SelectRendererEvent =\n  | 'change'\n  | 'blur'\n  | 'focus'\n  | 'add'\n  | 'edit'\n  | 'delete';\nexport default class SelectControl extends React.Component<SelectProps, any> {\n  static defaultProps: Partial<SelectProps> = {\n    clearable: false,\n    searchable: false,\n    multiple: false\n  };\n\n  input: any;\n  unHook: Function;\n  lazyloadRemote: Function;\n  lastTerm: string = ''; // 用来记录上一次搜索时关键字\n  constructor(props: SelectProps) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.lazyloadRemote = debouce(this.loadRemote.bind(this), 250, {\n      trailing: true,\n      leading: false\n    });\n    this.inputRef = this.inputRef.bind(this);\n  }\n\n  componentDidUpdate(prevProps: SelectProps) {\n    const props = this.props;\n\n    if (\n      isEffectiveApi(props.autoComplete, props.data) &&\n      isApiOutdated(\n        prevProps.autoComplete,\n        props.autoComplete,\n        prevProps.data,\n        props.data\n      )\n    ) {\n      this.lazyloadRemote(this.lastTerm);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unHook && this.unHook();\n  }\n\n  inputRef(ref: any) {\n    this.input = ref;\n  }\n\n  foucs() {\n    this.input && this.input.focus();\n  }\n\n  getValue(value: Option | Array<Option> | string | void) {\n    const {joinValues, extractValue, delimiter, multiple, valueField, options} =\n      this.props;\n    let newValue: string | Option | Array<Option> | void = value;\n    let additonalOptions: Array<any> = [];\n\n    (Array.isArray(value) ? value : value ? [value] : []).forEach(\n      (option: any) => {\n        let resolved = find(\n          options,\n          (item: any) =>\n            item[valueField || 'value'] == option[valueField || 'value']\n        );\n        resolved || additonalOptions.push(option);\n      }\n    );\n\n    if (joinValues) {\n      if (multiple) {\n        newValue = Array.isArray(value)\n          ? (value\n              .map(item => item[valueField || 'value'])\n              .join(delimiter) as string)\n          : value\n          ? (value as Option)[valueField || 'value']\n          : '';\n      } else {\n        newValue = newValue ? (newValue as Option)[valueField || 'value'] : '';\n      }\n    } else if (extractValue) {\n      if (multiple) {\n        newValue = Array.isArray(value)\n          ? value.map(item => item[valueField || 'value'])\n          : value\n          ? [(value as Option)[valueField || 'value']]\n          : [];\n      } else {\n        newValue = newValue ? (newValue as Option)[valueField || 'value'] : '';\n      }\n    }\n\n    return newValue;\n  }\n\n  async dispatchEvent(eventName: SelectRendererEvent, eventData: any = {}) {\n    const event = 'on' + eventName.charAt(0).toUpperCase() + eventName.slice(1);\n    const {dispatchEvent, options, data} = this.props;\n    // 触发渲染器事件\n    const rendererEvent = await dispatchEvent(\n      eventName,\n      createObject(data, {\n        options,\n        value: ['onEdit', 'onDelete'].includes(event)\n          ? eventData\n          : eventData && eventData.value\n      })\n    );\n    if (rendererEvent?.prevented) {\n      return;\n    }\n    // 触发外部方法\n    this.props[event](eventData);\n  }\n\n  async changeValue(value: Option | Array<Option> | string | void) {\n    const {onChange, setOptions, options, data, dispatchEvent} = this.props;\n\n    let newValue: string | Option | Array<Option> | void = this.getValue(value);\n    let additonalOptions: Array<any> = [];\n    // 不设置没法回显\n    additonalOptions.length && setOptions(options.concat(additonalOptions));\n\n    const rendererEvent = await dispatchEvent(\n      'change',\n      createObject(data, {\n        value: newValue,\n        options\n      })\n    );\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange?.(newValue);\n  }\n\n  async loadRemote(input: string) {\n    const {\n      autoComplete,\n      env,\n      data,\n      setOptions,\n      setLoading,\n      formInited,\n      addHook\n    } = this.props;\n\n    if (!env || !env.fetcher) {\n      throw new Error('fetcher is required');\n    }\n\n    if (!formInited) {\n      this.unHook && this.unHook();\n      return (this.unHook = addHook(this.loadRemote.bind(this, input), 'init'));\n    }\n\n    this.lastTerm = input;\n    const ctx = createObject(data, {\n      term: input,\n      value: input\n    });\n\n    if (!isEffectiveApi(autoComplete, ctx)) {\n      return Promise.resolve({\n        options: []\n      });\n    }\n\n    setLoading(true);\n    try {\n      const ret = await env.fetcher(autoComplete, ctx);\n\n      let options = (ret.data && (ret.data as any).options) || ret.data || [];\n      let combinedOptions = this.mergeOptions(options);\n      setOptions(combinedOptions);\n\n      return {\n        options: combinedOptions\n      };\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  mergeOptions(options: Array<object>) {\n    const {selectedOptions, valueField = 'value'} = this.props;\n    let combinedOptions = normalizeOptions(\n      options,\n      undefined,\n      valueField\n    ).concat();\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      selectedOptions.forEach(option => {\n        if (\n          !find(combinedOptions, (item: Option) => item.value == option.value)\n        ) {\n          combinedOptions.push({\n            ...option,\n            hidden: true\n          });\n        }\n      });\n    }\n    return combinedOptions;\n  }\n\n  @autobind\n  renderMenu(option: Option, state: any) {\n    const {menuTpl, render, data} = this.props;\n\n    return render(`menu/${state.index}`, menuTpl, {\n      data: createObject(createObject(data, state), option)\n    });\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  option2value() {}\n\n  renderOtherMode() {\n    const {selectMode, ...rest} = this.props;\n    return (\n      <TransferDropdownRenderer\n        {...rest}\n        selectMode={selectMode === 'group' ? 'list' : selectMode}\n      />\n    );\n  }\n\n  doAction(action: Action, data: object, throwErrors: boolean): any {\n    const {resetValue, onChange} = this.props;\n    const actionType = action?.actionType as string;\n\n    if (actionType === 'clear') {\n      onChange?.('');\n    } else if (actionType === 'reset') {\n      const value = this.getValue(resetValue ?? '');\n      onChange?.(value);\n    }\n  }\n\n  render() {\n    let {\n      autoComplete,\n      searchable,\n      options,\n      className,\n      loading,\n      value,\n      selectedOptions,\n      multi,\n      multiple,\n      placeholder,\n      id,\n      classPrefix,\n      classnames,\n      creatable,\n      inline,\n      noResultsText,\n      render,\n      menuTpl,\n      borderMode,\n      selectMode,\n      env,\n      useMobileUI,\n      ...rest\n    } = this.props;\n\n    if (noResultsText) {\n      noResultsText = render('noResultText', noResultsText);\n    }\n\n    const mobileUI = useMobileUI && isMobile();\n\n    return (\n      <div className={cx(`${classPrefix}SelectControl`, className)}>\n        {['table', 'list', 'group', 'tree', 'chained', 'associated'].includes(\n          selectMode\n        ) ? (\n          this.renderOtherMode()\n        ) : (\n          <Select\n            {...rest}\n            useMobileUI={useMobileUI}\n            popOverContainer={\n              mobileUI && env && env.getModalContainer\n                ? env.getModalContainer\n                : mobileUI\n                ? undefined\n                : rest.popOverContainer\n            }\n            borderMode={borderMode}\n            placeholder={placeholder}\n            multiple={multiple || multi}\n            ref={this.inputRef}\n            value={selectedOptions}\n            options={options}\n            loadOptions={\n              isEffectiveApi(autoComplete) ? this.lazyloadRemote : undefined\n            }\n            creatable={creatable}\n            searchable={searchable || !!autoComplete}\n            onChange={this.changeValue}\n            onBlur={(e: any) => this.dispatchEvent('blur', e)}\n            onFocus={(e: any) => this.dispatchEvent('focus', e)}\n            onAdd={() => this.dispatchEvent('add')}\n            onEdit={(item: any) => this.dispatchEvent('edit', item)}\n            onDelete={(item: any) =>\n              this.dispatchEvent('delete', item)\n            }\n            loading={loading}\n            noResultsText={noResultsText}\n            renderMenu={menuTpl ? this.renderMenu : undefined}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport interface TransferDropDownProps\n  extends OptionsControlProps,\n    Omit<\n      TransferControlSchema,\n      | 'type'\n      | 'options'\n      | 'inputClassName'\n      | 'className'\n      | 'descriptionClassName'\n    > {\n  borderMode?: 'full' | 'half' | 'none';\n  useMobileUI?: boolean;\n}\n\nclass TransferDropdownRenderer extends BaseTransferRenderer<TransferDropDownProps> {\n  @autobind\n  renderItem(item: Option): any {\n    const {labelField} = this.props;\n    return `${item.scopeLabel || ''}${item[labelField || 'label']}`;\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      selectedOptions,\n      sortable,\n      loading,\n      searchable,\n      searchResultMode,\n      showArrow,\n      deferLoad,\n      disabled,\n      clearable,\n      selectTitle,\n      selectMode,\n      multiple,\n      columns,\n      leftMode,\n      borderMode,\n      useMobileUI,\n      popOverContainer\n    } = this.props;\n\n    // 目前 LeftOptions 没有接口可以动态加载\n    // 为了方便可以快速实现动态化，让选项的第一个成员携带\n    // LeftOptions 信息\n    let {options, leftOptions, leftDefaultValue} = this.props;\n    if (\n      selectMode === 'associated' &&\n      options &&\n      options.length === 1 &&\n      options[0].leftOptions &&\n      Array.isArray(options[0].children)\n    ) {\n      leftOptions = options[0].leftOptions;\n      leftDefaultValue = options[0].leftDefaultValue ?? leftDefaultValue;\n      options = options[0].children;\n    }\n\n    return (\n      <>\n        <TransferDropDown\n          selectMode={selectMode}\n          className={className}\n          value={selectedOptions}\n          disabled={disabled}\n          clearable={clearable}\n          options={options}\n          onChange={this.handleChange}\n          option2value={this.option2value}\n          itemRender={this.renderItem}\n          sortable={sortable}\n          searchResultMode={searchResultMode}\n          onSearch={searchable ? this.handleSearch : undefined}\n          showArrow={showArrow}\n          onDeferLoad={deferLoad}\n          selectTitle={selectTitle}\n          multiple={multiple}\n          columns={columns}\n          leftMode={leftMode}\n          leftOptions={leftOptions}\n          borderMode={borderMode}\n          useMobileUI={useMobileUI}\n          popOverContainer={popOverContainer}\n        />\n\n        <Spinner overlay key=\"info\" show={loading} />\n      </>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'select'\n})\nexport class SelectControlRenderer extends SelectControl {}\n\n@OptionsControl({\n  type: 'multi-select'\n})\nexport class MultiSelectControlRenderer extends SelectControl {\n  static defaultProps = {\n    multiple: true\n  };\n}\n"
    ]
}