{
    "version": 3,
    "file": "InputTree.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputTree.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport cx from 'classnames';\nimport TreeSelector from '../../components/Tree';\nimport {\n  FormOptionsControl,\n  OptionsControl,\n  OptionsControlProps\n} from './Options';\nimport {Spinner} from '../../components';\nimport {SchemaApi} from '../../Schema';\nimport {autobind, createObject} from '../../utils/helper';\nimport {Action} from '../../types';\n\n/**\n * Tree 下拉选择框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tree\n */\nexport interface TreeControlSchema extends FormOptionsControl {\n  type: 'input-tree';\n\n  /**\n   * 是否隐藏顶级\n   */\n  hideRoot?: boolean;\n\n  /**\n   * 顶级选项的名称\n   */\n  rootLabel?: string;\n\n  /**\n   * 顶级选项的值\n   */\n  rootValue?: any;\n\n  /**\n   * 显示图标\n   */\n  showIcon?: boolean;\n\n  /**\n   * ui级联关系，true代表级联选中，false代表不级联，默认为true\n   */\n  autoCheckChildren?: boolean;\n\n  /**\n   * 该属性代表数据级联关系，autoCheckChildren为true时生效，默认为false，具体数据级联关系如下：\n   * 1.casacde为false，ui行为为级联选中子节点，子节点禁用；值只包含父节点的值\n   * 2.cascade为false，withChildren为true，ui行为为级联选中子节点，子节点禁用；值包含父子节点的值\n   * 3.cascade为true，ui行为级联选中子节点，子节点可反选，值包含父子节点的值，此时withChildren属性失效\n   * 4.cascade不论为true还是false，onlyChildren为true，ui行为级联选中子节点，子节点可反选，值只包含子节点的值\n   */\n  cascade?: boolean;\n\n  /**\n   * 选父级的时候是否把子节点的值也包含在内。\n   */\n  withChildren?: boolean;\n\n  /**\n   * 选父级的时候，是否只把子节点的值包含在内\n   */\n  onlyChildren?: boolean;\n\n  /**\n   * 顶级节点是否可以创建子节点\n   */\n  rootCreatable?: boolean;\n\n  /**\n   * 是否开启节点路径模式\n   */\n  enableNodePath?: boolean;\n\n  /**\n   * 开启节点路径模式后，节点路径的分隔符\n   */\n  pathSeparator?: string;\n\n  /**\n   * 是否显示展开线\n   */\n  showOutline?: boolean;\n\n  deferApi?: SchemaApi;\n}\n\nexport interface TreeProps\n  extends OptionsControlProps,\n    Omit<\n      TreeControlSchema,\n      | 'type'\n      | 'options'\n      | 'className'\n      | 'inputClassName'\n      | 'descriptionClassName'\n    > {\n  enableNodePath?: boolean;\n  pathSeparator?: string;\n}\n\nexport default class TreeControl extends React.Component<TreeProps> {\n  static defaultProps: Partial<TreeProps> = {\n    placeholder: 'loading',\n    multiple: false,\n    rootLabel: 'Tree.root',\n    rootValue: '',\n    showIcon: true,\n    enableNodePath: false,\n    pathSeparator: '/'\n  };\n  treeRef: any;\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  doAction(action: Action, data: any, throwErrors: boolean) {\n    const actionType = action?.actionType as string;\n    const {resetValue, onChange} = this.props;\n\n    if (actionType === 'clear') {\n      onChange?.('');\n    } else if (actionType === 'reset') {\n      onChange?.(resetValue ?? '');\n    } else if (action.actionType === 'expand') {\n      this.treeRef.syncUnFolded(this.props, action.args?.openLevel);\n    } else if (action.actionType === 'collapse') {\n      this.treeRef.syncUnFolded(this.props, 1);\n    }\n  }\n\n  @autobind\n  async handleChange(value: any) {\n    const {onChange, dispatchEvent, data} = this.props;\n\n    const rendererEvent = await dispatchEvent(\n      'change',\n      createObject(data, {\n        value\n      })\n    );\n\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange && onChange(value);\n  }\n\n  @autobind\n  domRef(ref: any) {\n    this.treeRef = ref;\n  }\n\n  render() {\n    const {\n      className,\n      treeContainerClassName,\n      classPrefix: ns,\n      value,\n      enableNodePath,\n      pathSeparator = '/',\n      disabled,\n      joinValues,\n      extractValue,\n      delimiter,\n      placeholder,\n      options,\n      multiple,\n      valueField,\n      initiallyOpen,\n      unfoldedLevel,\n      withChildren,\n      onlyChildren,\n      loading,\n      hideRoot,\n      rootLabel,\n      autoCheckChildren,\n      cascade,\n      rootValue,\n      showIcon,\n      showRadio,\n      showOutline,\n      onAdd,\n      creatable,\n      createTip,\n      addControls,\n      onEdit,\n      editable,\n      editTip,\n      editControls,\n      removable,\n      removeTip,\n      onDelete,\n      rootCreatable,\n      rootCreateTip,\n      labelField,\n      iconField,\n      nodePath,\n      deferLoad,\n      expandTreeOptions,\n      translate: __\n    } = this.props;\n\n    return (\n      <div\n        className={cx(`${ns}TreeControl`, className, treeContainerClassName)}\n      >\n        <Spinner size=\"sm\" key=\"info\" show={loading} />\n        {loading ? null : (\n          <TreeSelector\n            classPrefix={ns}\n            onRef={this.domRef}\n            labelField={labelField}\n            valueField={valueField}\n            iconField={iconField}\n            disabled={disabled}\n            onChange={this.handleChange}\n            joinValues={joinValues}\n            extractValue={extractValue}\n            delimiter={delimiter}\n            placeholder={__(placeholder)}\n            options={options}\n            multiple={multiple}\n            initiallyOpen={initiallyOpen}\n            unfoldedLevel={unfoldedLevel}\n            withChildren={withChildren}\n            onlyChildren={onlyChildren}\n            hideRoot={hideRoot}\n            rootLabel={__(rootLabel)}\n            rootValue={rootValue}\n            showIcon={showIcon}\n            showRadio={showRadio}\n            showOutline={showOutline}\n            autoCheckChildren={autoCheckChildren}\n            cascade={cascade}\n            foldedField=\"collapsed\"\n            value={value || ''}\n            nodePath={nodePath}\n            enableNodePath={enableNodePath}\n            pathSeparator={pathSeparator}\n            selfDisabledAffectChildren={false}\n            onAdd={onAdd}\n            creatable={creatable}\n            createTip={createTip}\n            rootCreatable={rootCreatable}\n            rootCreateTip={rootCreateTip}\n            onEdit={onEdit}\n            editable={editable}\n            editTip={editTip}\n            removable={removable}\n            removeTip={removeTip}\n            onDelete={onDelete}\n            bultinCUD={!addControls && !editControls}\n            onDeferLoad={deferLoad}\n            onExpandTree={expandTreeOptions}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'input-tree'\n})\nexport class TreeControlRenderer extends TreeControl {}\n"
    ]
}