{
    "version": 3,
    "file": "Switch.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Switch.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,+BAAmE;AACnE,gFAA6C;AAC7C,6CAAoE;AACpE,yCAA8C;AAiD9C;IAA2C,8CAAiC;IAA5E;;IA8DA,CAAC;IAtDO,oCAAY,GAAlB,UAAmB,OAAkC;;;;;;wBAC7C,KAAkC,IAAI,CAAC,KAAK,EAA3C,aAAa,mBAAA,EAAE,IAAI,UAAA,EAAE,QAAQ,cAAA,CAAe;wBAC7B,qBAAM,aAAa,CAAC,QAAQ,EAAE,IAAA,qBAAY,EAAC,IAAI,EAAE;gCACrE,KAAK,EAAE,OAAO;6BACf,CAAC,CAAC,EAAA;;wBAFG,aAAa,GAAG,SAEnB;wBACH,IAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,SAAS,EAAE;4BAC5B,sBAAO;yBACR;wBAED,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;;;;;KAC/B;IAED,8BAAM,GAAN;QACQ,IAAA,KAaF,IAAI,CAAC,KAAK,EAZZ,SAAS,eAAA,EACI,EAAE,iBAAA,EACH,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,OAAO,aAAA,EACP,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,YAAY,kBACA,CAAC;QAEf,IAAM,EAAE,GAAG,IAAA,iBAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,IAAM,GAAG,GAAG,IAAA,iBAAQ,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC;QAEvF,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,EAAE,SAAS,CAAC;YAC3C,YAAY,CAAC,CAAC,CAAC,CACd,wCAAM,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAAG,MAAM,CAAQ,CACtD,CAAC,CAAC,CAAC,IAAI;YAER,8BAAC,gBAAM,IACL,WAAW,EAAE,EAAE,EACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,EAAE,EACV,OAAO,EAAE,GAAG,EACZ,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,YAAY,GAC3B;YAED,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,wCAAM,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAAG,MAAM,CAAQ,CACtD,CACG,CACP,CAAC;IACJ,CAAC;IA5DM,0BAAY,GAAG;QACpB,SAAS,EAAE,IAAI;QACf,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,KAAK;KACpB,CAAC;IAGF;QADC,iBAAQ;;;;qDAWR;IA4CH,oBAAC;CAAA,AA9DD,CAA2C,eAAK,CAAC,SAAS,GA8DzD;kBA9DoB,aAAa;AAoElC;IAA2C,sDAAa;IAAxD;;IAA0D,CAAC;IAA9C,qBAAqB;QAJjC,IAAA,eAAQ,EAAC;YACR,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,qBAAqB,CAAyB;IAAD,4BAAC;CAAA,AAA3D,CAA2C,aAAa,GAAG;AAA9C,sDAAqB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport Switch from '../../components/Switch';\nimport {createObject, autobind, isObject} from '../../utils/helper';\nimport {generateIcon} from \"../../utils/icon\";\nimport {IconSchema} from \"../Icon\";\n\n/**\n * Switch\n * 文档：https://baidu.gitee.io/amis/docs/components/form/switch\n */\n\n\nexport interface SwitchControlSchema extends FormBaseControl {\n  /**\n   * 指定为多行文本输入框\n   */\n  type: 'switch';\n\n  /**\n   * 勾选值\n   */\n  trueValue?: boolean | string | number;\n\n  /**\n   * 未勾选值\n   */\n  falseValue?: boolean | string | number;\n\n  /**\n   * 选项说明\n   */\n  option?: string;\n\n  /**\n   * 开启时显示的内容\n   */\n  onText?: string | IconSchema;\n\n  /**\n   * 关闭时显示的内容\n   */\n  offText?: string | IconSchema;\n}\n\nexport interface SwitchProps extends FormControlProps {\n  option?: string;\n  trueValue?: any;\n  falseValue?: any;\n}\n\nexport type SwitchRendererEvent = 'change';\n\nexport default class SwitchControl extends React.Component<SwitchProps, any> {\n  static defaultProps = {\n    trueValue: true,\n    falseValue: false,\n    optionAtLeft: false\n  };\n\n  @autobind\n  async handleChange(checked: string | number | boolean) {\n    const {dispatchEvent, data, onChange} = this.props;\n    const rendererEvent = await dispatchEvent('change', createObject(data, {\n      value: checked,\n    }));\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange && onChange(checked);\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      trueValue,\n      falseValue,\n      onText,\n      offText,\n      option,\n      onChange,\n      disabled,\n      optionAtLeft\n    } = this.props;\n\n    const on = isObject(onText) ? generateIcon(cx, onText.icon, 'Switch-icon') : onText;\n    const off = isObject(offText) ? generateIcon(cx, offText.icon, 'Switch-icon') :offText;\n\n    return (\n      <div className={cx(`SwitchControl`, className)}>\n        {optionAtLeft ? (\n          <span className={cx('Switch-option')}>{option}</span>\n        ) : null}\n\n        <Switch\n          classPrefix={ns}\n          value={value}\n          trueValue={trueValue}\n          falseValue={falseValue}\n          onText={on}\n          offText={off}\n          disabled={disabled}\n          onChange={this.handleChange}\n        />\n\n        {optionAtLeft ? null : (\n          <span className={cx('Switch-option')}>{option}</span>\n        )}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'switch',\n  sizeMutable: false\n})\nexport class SwitchControlRenderer extends SwitchControl {}\n"
    ]
}