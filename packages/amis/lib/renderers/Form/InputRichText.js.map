{
    "version": 3,
    "file": "InputRichText.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputRichText.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport LazyComponent from '../../components/LazyComponent';\nimport {tokenize} from '../../utils/tpl-builtin';\nimport {normalizeApi} from '../../utils/api';\nimport {ucFirst} from '../../utils/helper';\nimport type {SchemaApi} from '../../Schema';\n\n/**\n * RichText\n * 文档：https://baidu.gitee.io/amis/docs/components/form/input-rich-text\n */\nexport interface RichTextControlSchema extends FormBaseControl {\n  type: 'input-rich-text';\n\n  /**\n   * 编辑器类型\n   */\n  vendor?: 'froala' | 'tinymce';\n\n  /**\n   * 图片保存 API\n   *\n   * @default /api/upload/image\n   */\n  receiver?: SchemaApi;\n\n  /**\n   * 视频保存 API\n   *\n   * @default /api/upload/video\n   */\n  videoReceiver?: SchemaApi;\n\n  /**\n   * 接收器的字段名\n   */\n  fileField?: string;\n\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n\n  /**\n   *  tinymce 或 froala 的配置\n   */\n  options?: any;\n}\n\nexport interface RichTextProps extends FormControlProps {\n  options?: any;\n  vendor?: 'froala' | 'tinymce';\n}\n\nfunction loadRichText(\n  type: 'tinymce' | 'froala' = 'froala'\n): () => Promise<any> {\n  return () =>\n    type === 'tinymce'\n      ? import('../../components/Tinymce').then(item => item.default)\n      : import('../../components/RichText').then(item => item.default);\n}\n\nexport default class RichTextControl extends React.Component<\n  RichTextProps,\n  any\n> {\n  static defaultProps: Partial<RichTextProps> = {\n    imageEditable: true,\n    receiver: '/api/upload/image',\n    videoReceiver: '/api/upload/video',\n    fileField: 'file',\n    placeholder: 'placeholder.enter',\n    options: {\n      toolbarButtons: [\n        'undo',\n        'redo',\n        'paragraphFormat',\n        'textColor',\n        'backgroundColor',\n        'bold',\n        'underline',\n        'strikeThrough',\n        'formatOL',\n        'formatUL',\n        'align',\n        'quote',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        'html'\n      ]\n    }\n  };\n\n  state = {\n    focused: false\n  };\n  config: any = null;\n  constructor(props: RichTextProps) {\n    super(props);\n\n    const finnalVendor =\n      props.vendor || (props.env.richTextToken ? 'froala' : 'tinymce');\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    if (finnalVendor === 'froala') {\n      this.config = {\n        imageAllowedTypes: ['jpeg', 'jpg', 'png', 'gif'],\n        imageDefaultAlign: 'left',\n        imageEditButtons: props.imageEditable\n          ? [\n              'imageReplace',\n              'imageAlign',\n              'imageRemove',\n              '|',\n              'imageLink',\n              'linkOpen',\n              'linkEdit',\n              'linkRemove',\n              '-',\n              'imageDisplay',\n              'imageStyle',\n              'imageAlt',\n              'imageSize'\n            ]\n          : [],\n        key: props.env.richTextToken,\n        attribution: false,\n        ...props.options,\n        editorClass: props.editorClass,\n        placeholderText: props.translate(props.placeholder),\n        imageUploadURL: tokenize(props.receiver, props.data),\n        imageUploadParams: {\n          from: 'rich-text'\n        },\n        videoUploadURL: tokenize(props.videoReceiver, props.data),\n        videoUploadParams: {\n          from: 'rich-text'\n        },\n        events: {\n          ...(props.options && props.options.events),\n          focus: this.handleFocus,\n          blur: this.handleBlur\n        },\n        language:\n          !this.props.locale || this.props.locale === 'zh-CN' ? 'zh_cn' : ''\n      };\n\n      if (props.buttons) {\n        this.config.toolbarButtons = props.buttons;\n      }\n    } else {\n      const fetcher = props.env.fetcher;\n      this.config = {\n        ...props.options,\n        images_upload_handler: async (\n          blobInfo: any,\n          ok: (locaiton: string) => void,\n          fail: (reason: string) => void\n        ) => {\n          const formData = new FormData();\n          formData.append(\n            props.fileField,\n            blobInfo.blob(),\n            blobInfo.filename()\n          );\n\n          try {\n            const receiver = {\n              adaptor: (payload: object) => {\n                return {\n                  ...payload,\n                  data: payload\n                };\n              },\n              ...normalizeApi(tokenize(props.receiver, props.data), 'post')\n            };\n\n            const response = await fetcher(receiver, formData, {\n              method: 'post'\n            });\n            if (response.ok) {\n              const location =\n                response.data?.link ||\n                response.data?.url ||\n                response.data?.value ||\n                response.data?.data?.link ||\n                response.data?.data?.url ||\n                response.data?.data?.value;\n              if (location) {\n                ok(location);\n              } else {\n                console.warn('must have return value');\n              }\n            }\n          } catch (e) {\n            fail(e);\n          }\n        }\n      };\n    }\n  }\n\n  handleFocus() {\n    this.setState({\n      focused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      focused: false\n    });\n  }\n\n  handleChange(\n    value: any,\n    submitOnChange?: boolean,\n    changeImmediately?: boolean\n  ) {\n    const {onChange, disabled} = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    onChange?.(value, submitOnChange, changeImmediately);\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      onChange,\n      disabled,\n      size,\n      vendor,\n      env,\n      locale,\n      translate,\n      borderMode\n    } = this.props;\n\n    const finnalVendor = vendor || (env.richTextToken ? 'froala' : 'tinymce');\n\n    return (\n      <div\n        className={cx(`${ns}RichTextControl`, className, {\n          'is-focused': this.state.focused,\n          'is-disabled': disabled,\n          [`${ns}RichTextControl--border${ucFirst(borderMode)}`]: borderMode\n        })}\n      >\n        <LazyComponent\n          getComponent={loadRichText(finnalVendor)}\n          model={value}\n          onModelChange={this.handleChange}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          config={this.config}\n          disabled={disabled}\n          locale={locale}\n          translate={translate}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-rich-text',\n  sizeMutable: false\n})\nexport class RichTextControlRenderer extends RichTextControl {}\n"
    ]
}