{
    "version": 3,
    "file": "Formula.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Formula.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport {evalJS, filter} from '../../utils/tpl';\nimport {\n  autobind,\n  isObjectShallowModified,\n  setVariable\n} from '../../utils/helper';\n\n/**\n * 公式功能控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/formula\n */\nexport interface FormulaControlSchema extends FormBaseControl {\n  /**\n   * 指定为公式功能控件。\n   */\n  type: 'formula';\n\n  /**\n   * 当某个按钮的目标指定为此值后，会触发一次公式应用。这个机制可以在 autoSet 为 false 时用来手动触发\n   */\n  id?: string;\n\n  /**\n   * 触发公式的作用条件，如 data.xxx == \\\"a\\\" 或者 ${xx}\n   */\n  condition?: string;\n\n  /**\n   * 是否自动应用\n   */\n  autoSet?: boolean;\n\n  /**\n   * 公式\n   */\n  formula?: string;\n\n  /**\n   * 是否初始应用\n   */\n  initSet?: boolean;\n\n  /**\n   * 字段名，公式结果将作用到此处指定的变量中去\n   */\n  name?: string;\n}\n\nexport interface FormulaProps\n  extends FormControlProps,\n    Omit<\n      FormulaControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {}\n\nexport default class FormulaControl extends React.Component<\n  FormControlProps,\n  any\n> {\n  inited = false;\n  unHook?: () => void;\n\n  componentDidMount() {\n    const {formInited, initSet, addHook} = this.props;\n\n    this.unHook = addHook ? addHook(this.handleFormInit, 'init') : undefined;\n\n    // 如果在表单中，还是等初始化数据过来才算\n    if (formInited === false) {\n      return;\n    }\n\n    this.inited = true;\n    initSet === false || this.initSet();\n  }\n\n  componentDidUpdate(prevProps: FormControlProps) {\n    const {formInited, initSet, autoSet} = this.props;\n\n    if (this.inited) {\n      autoSet === false || this.autoSet(prevProps);\n    } else if (typeof formInited === 'undefined') {\n      this.inited = true;\n      initSet === false || this.initSet();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unHook?.();\n  }\n\n  @autobind\n  handleFormInit(data: any) {\n    this.inited = true;\n    const {name, initSet} = this.props;\n\n    if (initSet === false) {\n      return;\n    }\n\n    const result = this.initSet();\n\n    if (typeof name === 'string' && typeof result !== 'undefined') {\n      setVariable(data, name, result);\n    }\n  }\n\n  initSet() {\n    const {formula, data, setPrinstineValue, initSet, condition} = this.props;\n\n    if (!formula) {\n      return;\n    } else if (\n      condition &&\n      !~condition.indexOf('$') &&\n      !~condition.indexOf('<%') &&\n      !evalJS(condition, data as object)\n    ) {\n      return;\n    }\n\n    const result: any = evalJS(formula, data as object);\n    result !== null && setPrinstineValue?.(result);\n    return result;\n  }\n\n  autoSet(prevProps: FormControlProps) {\n    const props = this.props;\n    const {formula, data, onChange, value, condition} = prevProps;\n\n    if (\n      formula &&\n      props.formula &&\n      isObjectShallowModified(data, props.data, false) &&\n      value === props.value\n    ) {\n      const nextResult: any = evalJS(props.formula, props.data as object);\n\n      if (condition && props.condition) {\n        if (!!~condition.indexOf('$') || !!~condition.indexOf('<%')) {\n          // 使用${xxx}，来监听某个变量的变化\n          if (filter(condition, data) !== filter(props.condition, props.data)) {\n            onChange(nextResult);\n          }\n        } else if (evalJS(props.condition, props.data as object)) {\n          // 使用 data.xxx == 'a' 表达式形式来判断\n          onChange(nextResult);\n        }\n      } else {\n        const prevResult: any = evalJS(formula, data as object);\n        if (JSON.stringify(prevResult) !== JSON.stringify(nextResult)) {\n          onChange(nextResult ?? '');\n        }\n      }\n    }\n  }\n\n  doAction() {\n    // 不细化具体是啥动作了，先重新计算，并把值运用上。\n\n    const {formula, data, onChange, autoSet, value} = this.props;\n\n    const result: any = evalJS(formula, data as object);\n    onChange(result);\n  }\n\n  render() {\n    return null;\n  }\n}\n\n@FormItem({\n  type: 'formula',\n  wrap: false,\n  strictMode: false,\n  sizeMutable: false\n})\nexport class FormulaControlRenderer extends FormulaControl {}\n"
    ]
}