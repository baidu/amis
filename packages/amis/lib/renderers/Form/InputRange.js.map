{
    "version": 3,
    "file": "InputRange.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputRange.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React, {CSSProperties, ReactNode} from 'react';\nimport isNumber from 'lodash/isNumber';\nimport isObject from 'lodash/isObject';\nimport isEqual from 'lodash/isEqual';\nimport forEach from 'lodash/forEach';\n\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport InputRange from '../../components/Range';\nimport NumberInput from '../../components/NumberInput';\nimport {Icon} from '../../components/icons';\nimport {stripNumber} from '../../utils/tpl-builtin';\nimport {autobind, createObject} from '../../utils/helper';\nimport {filter} from '../../utils/tpl';\nimport {SchemaObject} from '../../Schema';\nimport {Action} from '../../types';\n\n/**\n * Range\n * 文档：https://baidu.gitee.io/amis/docs/components/form/range\n */\n\nexport type Value = string | MultipleValue | number | [number, number];\nexport type FormatValue = MultipleValue | number;\nexport type TooltipPosType = 'auto' | 'top' | 'right' | 'bottom' | 'left';\nexport type InputRangeRendererEvent = 'change' | 'blur' | 'focus';\nexport type InputRangeRendererAction = 'clear';\nexport interface RangeControlSchema extends FormBaseControl {\n  type: 'input-range';\n\n  /**\n   * 滑块值\n   */\n  value?: Value;\n\n  /**\n   * 最大值\n   */\n  max?: number;\n\n  /**\n   * 最小值\n   */\n  min?: number;\n\n  /**\n   * 步长\n   */\n  step?: number;\n\n  /**\n   * 单位\n   */\n  unit?: string;\n\n  /**\n   * 是否展示步长\n   */\n  showSteps?: boolean;\n\n  /**\n   * 分割块数\n   */\n  parts?: number;\n\n  /**\n   * 刻度\n   */\n  marks?: MarksType;\n\n  /**\n   * 是否展示标签\n   */\n  tooltipVisible?: boolean;\n\n  /**\n   * 标签方向\n   */\n  tooltipPlacement?: TooltipPosType;\n\n  /**\n   * 是否为双滑块\n   */\n  multiple?: boolean;\n\n  /**\n   * 是否通过分隔符连接\n   */\n  joinValues?: boolean;\n\n  /**\n   * 分隔符\n   */\n  delimiter?: string;\n\n  /**\n   * 是否展示输入框\n   */\n  showInput?: boolean;\n\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n}\n\ntype MarksType = {\n  [index: string]: MarksValue;\n  [index: number]: MarksValue;\n};\n\ntype MarksValue = Record<\n  number,\n  SchemaObject | {style?: React.CSSProperties; label?: string}\n>;\n\nexport interface RangeProps extends FormControlProps {\n  /**\n   * 滑块值\n   */\n  value: Value;\n\n  /**\n   * 最小值\n   */\n  min: number;\n\n  /**\n   * 最大值\n   */\n  max: number;\n\n  /**\n   * 步长\n   */\n  step: number;\n\n  /**\n   * 是否展示步长\n   */\n  showSteps: boolean;\n\n  /**\n   * 分割块数\n   */\n  parts: number;\n\n  /**\n   * 刻度\n   */\n  marks?: MarksType;\n\n  /**\n   * 是否展示标签\n   */\n  tooltipVisible: boolean;\n\n  /**\n   * 标签方向\n   */\n  tooltipPlacement: TooltipPosType;\n\n  /**\n   * 控制滑块标签显隐函数\n   */\n  tipFormatter?: (value: Value) => boolean;\n\n  /**\n   * 是否为双滑块\n   */\n  multiple: boolean;\n\n  /**\n   * 是否通过分隔符连接\n   */\n  joinValues: boolean;\n\n  /**\n   * 分隔符\n   */\n  delimiter: string;\n\n  /**\n   * 单位\n   */\n  unit?: string;\n\n  /**\n   * 是否展示输入框\n   */\n  showInput: boolean;\n\n  /**\n   * 是否禁用\n   */\n  disabled: boolean;\n\n  /**\n   * value改变事件\n   */\n  onChange: (value: Value) => void;\n\n  /**\n   * 鼠标松开事件\n   */\n  onAfterChange?: (value: Value) => any;\n}\n\nexport interface MultipleValue {\n  min: number;\n  max: number;\n}\n\nexport interface DefaultProps {\n  value: Value;\n  max: number;\n  min: number;\n  step: number;\n  unit: string;\n  clearable: boolean;\n  disabled: boolean;\n  showInput: boolean;\n  multiple: boolean;\n  joinValues: boolean;\n  delimiter: string;\n  showSteps: boolean;\n  parts: number;\n  tooltipPlacement: TooltipPosType;\n}\n\nexport interface RangeItemProps extends RangeProps {\n  value: FormatValue;\n  updateValue: (value: Value) => void;\n  onAfterChange: () => void;\n}\n\nexport interface RangeState {\n  value: FormatValue;\n}\n\n/**\n * 格式化初始value值\n * @param value 初始value值 Value\n * @param props RangeProps\n * @returns number | {min: number, max: number}\n */\nexport function formatValue(\n  value: Value,\n  props: {\n    multiple: boolean;\n    delimiter: string;\n    min: number;\n    max: number;\n  }\n): FormatValue {\n  if (props.multiple) {\n    let {min, max} = props;\n    // value是字符串\n    if (typeof value === 'string') {\n      [min, max] = value.split(props.delimiter || ',').map(v => Number(v));\n    }\n    // value是数组\n    else if (Array.isArray(value)) {\n      [min, max] = value;\n    }\n    // value是对象\n    else if (typeof value === 'object') {\n      min = value.min;\n      max = value.max;\n    }\n    return {\n      min: min === undefined || min < props.min ? props.min : min,\n      max: max === undefined || max > props.max ? props.max : max\n    };\n  }\n  return +value < props.min ? props.min : Math.min(+value, props.max);\n}\n\n/**\n * 输入框\n */\nexport class Input extends React.Component<RangeItemProps, any> {\n  /**\n   * onChange事件，只能输入数字\n   * @param e React.ChangeEvent\n   */\n  @autobind\n  onChange(value: number) {\n    const {multiple, value: originValue, type, min} = this.props;\n    const _value = this.getValue(value, type);\n\n    this.props.updateValue(\n      multiple\n        ? {...(originValue as MultipleValue), [type]: _value}\n        : value ?? min\n    );\n  }\n\n  /**\n   * 双滑块 更新value\n   * @param value 输入的value值\n   */\n  @autobind\n  onUpdateValue(value: number) {\n    const {multiple, value: originValue, type} = this.props;\n    const _value = this.getValue(value, type);\n\n    this.props.updateValue(\n      multiple ? {...(originValue as MultipleValue), [type]: _value} : value\n    );\n  }\n\n  checkNum(value: number | string | undefined) {\n    if (typeof value !== 'number') {\n      value = filter(value, this.props.data);\n      value = /^[-]?\\d+/.test(value) ? +value : undefined;\n    }\n    return value;\n  }\n\n  /**\n   * 获取步长小数精度\n   * @returns\n   */\n  getStepPrecision() {\n    const {step} = this.props;\n    const stepIsDecimal = /^\\d+\\.\\d+$/.test(step.toString());\n    return !stepIsDecimal || step < 0\n      ? 0\n      : step.toString().split('.')[1]?.length;\n  }\n\n  /**\n   * 处理数据\n   * @param value input数据\n   * @param type min | max 双滑块\n   * @returns 处理之后数据\n   */\n  getValue(value: string | number, type?: string) {\n    const {max, min, step, value: stateValue} = this.props as RangeItemProps;\n    // value为null、undefined时，取对应的min/max\n    value = value ?? (type === 'min' ? min : max);\n    // 校正value为step的倍数\n    let _value = Math.round(parseFloat(value + '') / step) * step;\n    // 同步value与步长小数位数\n    _value = parseFloat(_value.toFixed(this.getStepPrecision()));\n    // 单滑块只用考虑 轨道边界 ，双滑块需要考虑 两端滑块边界\n    switch (type) {\n      case 'min': {\n        if (isObject(stateValue) && isNumber(stateValue.max)) {\n          // 如果 大于当前双滑块最大值 取 当前双滑块max值 - 步长\n          if (_value >= stateValue.max) {\n            return stateValue.max - step;\n          }\n          return _value;\n        }\n        return min;\n      }\n      case 'max':\n        if (isObject(stateValue) && isNumber(stateValue.min)) {\n          // 如果 小于当前双滑块最大值 取 当前双滑块min值 + 步长\n          if (_value <= stateValue.min) {\n            return stateValue.min + step;\n          }\n          return _value;\n        }\n        return max;\n      default:\n        // 轨道边界\n        return (_value < min && min) || (_value > max && max) || _value;\n    }\n  }\n\n  /**\n   * 失焦事件\n   */\n  @autobind\n  onBlur() {\n    const {data, dispatchEvent, value} = this.props;\n\n    dispatchEvent(\n      'blur',\n      createObject(data, {\n        value\n      })\n    );\n  }\n\n  /**\n   * 聚焦事件\n   */\n  @autobind\n  async onFocus() {\n    const {data, dispatchEvent, value} = this.props;\n\n    dispatchEvent(\n      'focus',\n      createObject(data, {\n        value\n      })\n    );\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      value,\n      multiple,\n      type,\n      step,\n      classPrefix: ns,\n      disabled,\n      max,\n      min\n    } = this.props;\n    const _value = multiple\n      ? type === 'min'\n        ? Math.min((value as MultipleValue).min, (value as MultipleValue).max)\n        : Math.max((value as MultipleValue).min, (value as MultipleValue).max)\n      : value;\n    return (\n      <div className={cx(`${ns}InputRange-input`)}>\n        <NumberInput\n          value={+_value}\n          step={step}\n          max={this.checkNum(max)}\n          min={this.checkNum(min)}\n          onChange={this.onChange}\n          disabled={disabled}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default class RangeControl extends React.PureComponent<\n  RangeProps,\n  RangeState\n> {\n  midLabel?: HTMLSpanElement;\n\n  static defaultProps: DefaultProps = {\n    value: 0,\n    max: 100,\n    min: 0,\n    step: 1,\n    unit: '',\n    clearable: true,\n    disabled: false,\n    showInput: false,\n    multiple: false,\n    joinValues: true,\n    delimiter: ',',\n    showSteps: false,\n    parts: 1,\n    tooltipPlacement: 'auto'\n  };\n\n  constructor(props: RangeProps) {\n    super(props);\n    const {value: propsValue, multiple, delimiter, min, max} = this.props;\n    const value = formatValue(propsValue, {\n      multiple,\n      delimiter,\n      min,\n      max\n    });\n\n    this.state = {\n      value: this.getValue(value)\n    };\n  }\n\n  componentDidUpdate(prevProps: RangeProps) {\n    const {value, min, max} = prevProps;\n    const {\n      value: nextPropsValue,\n      multiple,\n      delimiter,\n      min: nextPropsMin,\n      max: nextPropsMax,\n      onChange\n    } = this.props;\n\n    if (\n      value !== nextPropsValue ||\n      min !== nextPropsMin ||\n      max !== nextPropsMax\n    ) {\n      const value = formatValue(nextPropsValue, {\n        multiple,\n        delimiter,\n        min: nextPropsMin,\n        max: nextPropsMax\n      });\n      this.setState({\n        value: this.getValue(value)\n      });\n    }\n  }\n\n  doAction(action: Action, data: object, throwErrors: boolean) {\n    const actionType = action?.actionType as string;\n    const {multiple, min, max} = this.props;\n\n    if (!!~['clear', 'reset'].indexOf(actionType)) {\n      this.clearValue(actionType);\n    }\n  }\n\n  @autobind\n  clearValue(type: string = 'clear') {\n    const {multiple, min, max, onChange} = this.props;\n    let resetValue = this.props.resetValue;\n\n    if (type === 'clear') {\n      resetValue = undefined;\n    }\n\n    const value = this.getFormatValue(\n      resetValue ?? (multiple ? {min, max} : min)\n    );\n\n    onChange?.(value);\n  }\n\n  @autobind\n  getValue(value: FormatValue) {\n    const {multiple} = this.props;\n    return multiple\n      ? {\n          max: stripNumber((value as MultipleValue).max),\n          min: stripNumber((value as MultipleValue).min)\n        }\n      : stripNumber(value as number);\n  }\n\n  /**\n   * 所有触发value变换 -> updateValue\n   * @param value\n   */\n  @autobind\n  async updateValue(value: FormatValue) {\n    this.setState({value: this.getValue(value)});\n    const {onChange, data, dispatchEvent} = this.props;\n    const result = this.getFormatValue(value);\n\n    const rendererEvent = await dispatchEvent(\n      'change',\n      createObject(data, {\n        value: result\n      })\n    );\n\n    if (rendererEvent?.prevented) {\n      return;\n    }\n\n    onChange?.(result);\n  }\n\n  /**\n   * 鼠标松开事件\n   */\n  @autobind\n  onAfterChange() {\n    const {value} = this.state;\n    const {onAfterChange, dispatchEvent, data} = this.props;\n    const result = this.getFormatValue(value);\n    onAfterChange && onAfterChange(result);\n  }\n\n  /**\n   * 获取导出格式数据\n   */\n  @autobind\n  getFormatValue(value: FormatValue) {\n    const {multiple, joinValues, delimiter} = this.props;\n    return multiple\n      ? joinValues\n        ? [(value as MultipleValue).min, (value as MultipleValue).max].join(\n            delimiter || ','\n          )\n        : {\n            min: (value as MultipleValue).min,\n            max: (value as MultipleValue).max\n          }\n      : value;\n  }\n\n  render() {\n    const {value} = this.state;\n    const props: RangeItemProps = {\n      ...this.props,\n      value,\n      updateValue: this.updateValue,\n      onAfterChange: this.onAfterChange\n    };\n\n    const {\n      classPrefix: ns,\n      multiple,\n      parts,\n      showInput,\n      classnames: cx,\n      className,\n      disabled,\n      clearable,\n      min,\n      max,\n      render,\n      marks,\n      region\n    } = props;\n\n    // 处理自定义json配置\n    let renderMarks:\n      | MarksType\n      | {[index: string]: ReactNode; [index: number]: ReactNode}\n      | undefined = marks ? {...marks} : marks;\n    marks &&\n      forEach(marks, (item, key) => {\n        if (isObject(item) && (item as SchemaObject).type) {\n          renderMarks &&\n            (renderMarks[key] = render(region, item as SchemaObject));\n        }\n      });\n\n    return (\n      <div\n        className={cx(\n          'RangeControl',\n          `${ns}InputRange`,\n          {'is-disabled': disabled},\n          className\n        )}\n      >\n        {showInput && multiple && <Input {...props} type=\"min\" />}\n        <InputRange {...props} marks={renderMarks} />\n        {showInput && <Input {...props} type=\"max\" />}\n        {clearable && !disabled && showInput ? (\n          <a\n            onClick={() => this.clearValue()}\n            className={cx('InputRange-clear', {\n              'is-active': multiple\n                ? isEqual(this.state.value, {min: min, max: max})\n                : this.state.value !== min\n            })}\n          >\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-range'\n})\nexport class RangeControlRenderer extends RangeControl {}\n"
    ]
}