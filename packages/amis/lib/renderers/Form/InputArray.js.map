{
    "version": 3,
    "file": "InputArray.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputArray.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,+BAAmE;AAEnE,2CAA0D;AAE1D,+DAAkD;AAgClD;IAA+C,kDAAgC;IAE7E,2BAAY,KAAsB;QAAlC,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC3C,CAAC;IAED,oCAAQ,GAAR,UAAS,GAAQ;QACf,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC3B,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAgB;;QACvB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA,KAAA,IAAI,CAAC,aAAa,CAAA,CAAC,QAAQ,WAAI,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;IAC1E,CAAC;IAED,kCAAM,GAAN;QACE,IAAM,KAAmB,IAAI,CAAC,KAAK,EAA5B,KAAK,WAAA,EAAK,IAAI,2BAAf,SAAgB,CAAa,CAAC;QAEpC,OAAO,CACL,8BAAC,eAAK,4BACC,IAAY,IACjB,KAAK,EAAE,CAAC,KAAK,CAAC,EACd,IAAI,QACJ,QAAQ,QACR,SAAS,EAAE,KAAK,EAChB,GAAG,EAAE,IAAI,CAAC,QAAQ,IAClB,CACH,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AA7BD,CAA+C,eAAK,CAAC,SAAS,GA6B7D;;AAMD;IAA0C,qDAAiB;IAA3D;;IAA6D,CAAC;IAAjD,oBAAoB;QAJhC,IAAA,eAAQ,EAAC;YACR,IAAI,EAAE,aAAa;YACnB,SAAS,EAAE,kBAAU,CAAC,IAAI;SAC3B,CAAC;OACW,oBAAoB,CAA6B;IAAD,2BAAC;CAAA,AAA9D,CAA0C,iBAAiB,GAAG;AAAjD,oDAAoB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport {Schema} from '../../types';\nimport {ComboStore, IComboStore} from '../../store/combo';\nimport {observer} from 'mobx-react';\nimport Combo, {ComboControlSchema} from './Combo';\nimport {SchemaApi, SchemaCollection, SchemaObject} from '../../Schema';\n\n/**\n * InputArray 数组输入框。 combo 的别名。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/array\n */\nexport interface ArrayControlSchema\n  extends Omit<\n    ComboControlSchema,\n    'type' | 'controls' | 'conditions' | 'items'\n  > {\n  /**\n   * 指定为数组输入框类型\n   */\n  type: 'input-array';\n\n  /**\n   * 成员渲染器配置\n   */\n  items: SchemaCollection;\n}\n\nexport interface InputArrayProps\n  extends FormControlProps,\n    Omit<\n      ArrayControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {\n  store: IComboStore;\n}\n\nexport default class InputArrayControl extends React.Component<InputArrayProps> {\n  comboInstance: any;\n  constructor(props: InputArrayProps) {\n    super(props);\n    this.comboRef = this.comboRef.bind(this);\n  }\n\n  comboRef(ref: any) {\n    this.comboInstance = ref;\n  }\n\n  validate(args: Array<any>) {\n    return this.comboInstance ? this.comboInstance.validate(...args) : null;\n  }\n\n  render() {\n    const {items, ...rest} = this.props;\n\n    return (\n      <Combo\n        {...(rest as any)}\n        items={[items]}\n        flat\n        multiple\n        multiLine={false}\n        ref={this.comboRef}\n      />\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-array',\n  storeType: ComboStore.name\n})\nexport class ArrayControlRenderer extends InputArrayControl {}\n"
    ]
}