{
    "version": 3,
    "file": "Breadcrumb.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Breadcrumb.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA;;GAEG;AACH,6DAA0B;AAC1B,sCAAmD;AAEnD,oCAAoC;AACpC,oDAA8D;AAC9D,qFAAkD;AAoGlD;IAAqC,gDAAwC;IAA7E;;IA8CA,CAAC;IA7CC,gCAAM,GAAN;QACE,IAAM,KAMF,IAAI,CAAC,KAAK,EALZ,KAAK,WAAA,EACL,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,GAAG,SAAA,EACA,SAAS,2BALR,kCAML,CAAa,CAAC;QAEf,IAAI,UAAU,GAAG,KAAK;YACpB,CAAC,CAAC,KAAK;YACP,CAAC,CAAE,IAAA,sCAAwB,EACvB,MAAM,EACN,IAAI,EACJ,OAAO,CACwB,CAAC;QACtC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,UAAA,IAAI;YAC9B,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,IAAA,YAAM,EAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACvC;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,IAAI,GAAG,IAAA,YAAM,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrC;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,YAAY;oBAC5C,IAAI,YAAY,CAAC,KAAK,EAAE;wBACtB,YAAY,CAAC,KAAK,GAAG,IAAA,YAAM,EAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;qBACvD;oBACD,IAAI,YAAY,CAAC,IAAI,EAAE;wBACrB,YAAY,CAAC,IAAI,GAAG,IAAA,YAAM,EAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBACrD;oBACD,OAAO,YAAY,CAAC;gBACtB,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,OAAO,CACL,8BAAC,oBAAU,0BACT,KAAK,EAAE,UAAU,EACjB,gBAAgB,EAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,iBAAiB,IACpC,SAAS,EACD,CACf,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC,AA9CD,CAAqC,eAAK,CAAC,SAAS,GA8CnD;AA9CY,0CAAe;AAmD5B;IAA6C,wDAAe;IAA5D;;IAA8D,CAAC;IAAlD,uBAAuB;QAHnC,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,uBAAuB,CAA2B;IAAD,8BAAC;CAAA,AAA/D,CAA6C,eAAe,GAAG;AAAlD,0DAAuB",
    "sourcesContent": [
        "/**\n * @file 用来展示面包屑导航\n */\nimport React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {BaseSchema, SchemaIcon, SchemaUrlPath} from '../Schema';\nimport {filter} from '../utils/tpl';\nimport {resolveVariableAndFilter} from '../utils/tpl-builtin';\nimport Breadcrumb from '../components/Breadcrumb';\n\nexport type BreadcrumbBaseItemSchema = {\n  /**\n   * 文字\n   */\n  label?: string;\n\n  /**\n   * 图标类名\n   */\n  icon?: SchemaIcon;\n\n  /**\n   * 链接地址\n   */\n  href?: SchemaUrlPath;\n} & Omit<BaseSchema, 'type'>;\n\nexport type BreadcrumbItemSchema = {\n  /**\n   * 文字\n   */\n  label?: string;\n\n  /**\n   * 图标类名\n   */\n  icon?: SchemaIcon;\n\n  /**\n   * 链接地址\n   */\n  href?: SchemaUrlPath;\n\n  /**\n   * 下拉菜单\n   */\n  dropdown?: Array<BreadcrumbBaseItemSchema>;\n} & Omit<BaseSchema, 'type'>;\n\nexport type TooltipPositionType = 'top' | 'bottom' | 'left' | 'right';\n\nexport type ItemPlace = 'start' | 'middle' | 'end';\n\n/**\n * Breadcrumb 显示渲染器\n * 文档：https://baidu.gitee.io/amis/docs/components/breadcrumb\n */\n\n export interface BreadcrumbSchema extends BaseSchema {\n  /**\n   *  指定为面包屑显示控件\n   */\n  type: 'breadcrumb';\n\n  /**\n   * 面包项类名\n   */\n  itemClassName?: string;\n\n  /**\n   * 分隔符\n   */\n  separator?: string;\n\n  /**\n   * 分隔符类名\n   */\n  separatorClassName?: string;\n\n  /**\n   * 下拉菜单类名\n   */\n  dropdownClassName?: string;\n\n  /**\n   * 下拉菜单项类名\n   */\n  dropdownItemClassName?: string;\n\n  /**\n   * 列表\n   */\n  items: Array<BreadcrumbItemSchema>;\n\n  /**\n   * labelMaxLength\n   */\n  labelMaxLength?: number;\n\n  /**\n   * 浮窗提示位置\n   */\n  tooltipPosition?: TooltipPositionType;\n}\n\nexport interface BreadcrumbProps extends RendererProps,\n  Omit<BreadcrumbSchema, 'type' | 'className'> {}\n\nexport class BreadcrumbField extends React.Component<BreadcrumbProps, object> {\n  render() {\n    const {\n      items,\n      source,\n      data,\n      env,\n      ...restProps\n    } = this.props;\n\n    let crumbItems = items\n      ? items\n      : (resolveVariableAndFilter(\n          source,\n          data,\n          '| raw'\n        ) as Array<BreadcrumbItemSchema>);\n    crumbItems = crumbItems.map(item => {\n      if (item.label) {\n        item.label = filter(item.label, data);\n      }\n      if (item.href) {\n        item.href = filter(item.href, data);\n      }\n      if (item.dropdown) {\n        item.dropdown = item.dropdown.map(dropdownItem => {\n          if (dropdownItem.label) {\n            dropdownItem.label = filter(dropdownItem.label, data);\n          }\n          if (dropdownItem.href) {\n            dropdownItem.href = filter(dropdownItem.href, data);\n          }\n          return dropdownItem;\n        });\n      }\n      return item;\n    });\n\n    return (\n      <Breadcrumb\n        items={crumbItems}\n        tooltipContainer={env?.getModalContainer}\n        {...restProps}\n      ></Breadcrumb>\n    );\n  }\n}\n\n@Renderer({\n  type: 'breadcrumb'\n})\nexport class BreadcrumbFieldRenderer extends BreadcrumbField {}\n"
    ]
}