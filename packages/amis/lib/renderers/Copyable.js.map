{
    "version": 3,
    "file": "Copyable.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Copyable.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;GAGG;;;;AAEH,6DAA0B;AAG1B,iGAA0D;AAE1D,oCAAoC;AACpC,6CAAyC;AAuBlC,IAAM,WAAW,GACtB;IACA,OAAA,UAAC,SAAmC;QAClC;YAAiC,mDAAuC;YAAxE;;YA4CA,CAAC;YA1CC,wCAAW,GAAX,UAAY,OAAe;gBACnB,IAAA,KAAoB,IAAI,CAAC,KAAK,EAA7B,GAAG,SAAA,EAAE,UAAU,gBAAc,CAAC;gBACrC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;YACtD,CAAC;YACD,mCAAM,GAAN;gBACQ,IAAA,KAQF,IAAI,CAAC,KAAK,EAPZ,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,KAAK,WAAA,EACO,EAAE,gBAAA,EACH,EAAE,eACD,CAAC;gBAEf,IAAI,QAAQ,IAAI,CAAC,KAAK,EAAE;oBACtB,IAAM,OAAO,GAAG,IAAA,YAAM,EACnB,QAAiC,CAAC,OAAO;wBACxC,IAAI,GAAG,IAAI,GAAG,UAAU,EAC1B,IAAI,CACL,CAAC;oBACF,IAAI,OAAO,EAAE;wBACX,OAAO,CACL,8BAAC,SAAS,4BACJ,IAAI,CAAC,KAAK,IACd,SAAS,EAAE,EAAE,CAAC,iBAAiB,EAAE,SAAS,CAAC;4BAE3C,8BAAC,SAAS,4BAAK,IAAI,CAAC,KAAK,IAAE,gBAAgB,EAAE,EAAE,EAAE,KAAK,UAAG;4BACzD,qCACE,GAAG,EAAC,UAAU,kBACA,EAAE,CAAC,cAAc,CAAC,EAChC,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,EAC9B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;gCAE7C,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG,CACnC,CACM,CACb,CAAC;qBACH;iBACF;gBACD,OAAO,8BAAC,SAAS,4BAAK,IAAI,CAAC,KAAK,EAAI,CAAC;YACvC,CAAC;YA1CM,oCAAiB,GAAG,SAAS,CAAC;YA2CvC,yBAAC;SAAA,AA5CD,CAAiC,eAAK,CAAC,aAAa,GA4CnD;QACD,IAAA,iCAAmB,EAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QACnD,OAAO,kBAAkB,CAAC;IAC5B,CAAC;AAhDD,CAgDC,CAAC;AAlDS,QAAA,WAAW,eAkDpB;AAEJ,kBAAe,mBAAW,CAAC",
    "sourcesContent": [
        "/**\n * @file scoped.jsx.\n * @author fex\n */\n\nimport React from 'react';\nimport {RendererProps} from '../factory';\nimport cx from 'classnames';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport Button from '../components/Button';\nimport {filter} from '../utils/tpl';\nimport {Icon} from '../components/icons';\nimport {SchemaIcon, SchemaTpl} from '../Schema';\n\nexport interface SchemaCopyableObject {\n  /**\n   * 可以配置图标\n   */\n  icon?: SchemaIcon;\n\n  /**\n   * 配置复制时的内容模板。\n   */\n  content?: SchemaTpl;\n}\n\nexport type SchemaCopyable = boolean | SchemaCopyableObject;\n\nexport interface CopyableProps extends RendererProps {\n  name?: string;\n  label?: string;\n  copyable: SchemaCopyable;\n}\n\nexport const HocCopyable =\n  () =>\n  (Component: React.ComponentType<any>): any => {\n    class QuickEditComponent extends React.PureComponent<CopyableProps, any> {\n      static ComposedComponent = Component;\n      handleClick(content: string) {\n        const {env, copyFormat} = this.props;\n        env.copy && env.copy(content, {format: copyFormat});\n      }\n      render() {\n        const {\n          copyable,\n          name,\n          className,\n          data,\n          noHoc,\n          classnames: cx,\n          translate: __\n        } = this.props;\n\n        if (copyable && !noHoc) {\n          const content = filter(\n            (copyable as SchemaCopyableObject).content ||\n              '${' + name + ' | raw }',\n            data\n          );\n          if (content) {\n            return (\n              <Component\n                {...this.props}\n                className={cx(`Field--copyable`, className)}\n              >\n                <Component {...this.props} wrapperComponent={''} noHoc />\n                <a\n                  key=\"edit-btn\"\n                  data-tooltip={__('Copyable.tip')}\n                  className={cx('Field-copyBtn')}\n                  onClick={this.handleClick.bind(this, content)}\n                >\n                  <Icon icon=\"copy\" className=\"icon\" />\n                </a>\n              </Component>\n            );\n          }\n        }\n        return <Component {...this.props} />;\n      }\n    }\n    hoistNonReactStatic(QuickEditComponent, Component);\n    return QuickEditComponent;\n  };\n\nexport default HocCopyable;\n"
    ]
}