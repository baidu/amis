{
    "version": 3,
    "file": "Grid2D.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Grid2D.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Api, SchemaNode, Schema, Action} from '../types';\nimport {isVisible} from '../utils/helper';\nimport {BaseSchema, SchemaObject} from '../Schema';\n\nexport type GridObject = {\n  /**\n   * 起始横坐标位置，以 1 为起点\n   */\n  x: number;\n\n  /**\n   * 起始纵坐标位置，以 1 为起点\n   */\n  y: number;\n\n  /**\n   * 宽度，跨几列\n   */\n  w: number;\n\n  /**\n   * 高度，跨几行\n   */\n  h: number;\n\n  /**\n   * 宽度，会影响起始位置对应那一列的宽度\n   */\n  width?: number | string;\n\n  /**\n   * 高度，会影响起始位置那一行的高度，设置为 auto 就会自适应\n   */\n  height?: number | string;\n\n  /**\n   * 水平展示方式，用于内容宽度比 grid 小的情况，默认是 auto 自动撑满\n   */\n  align?: 'left' | 'right' | 'center' | 'auto';\n\n  /**\n   * 垂直展示方式，用于内容高度比 grid 小的情况，默认是 auto 自动撑满\n   */\n  valign?: 'top' | 'bottom' | 'middle' | 'auto';\n\n  /**\n   * 每个格子最外层容器的 className\n   */\n  gridClassName?: string;\n};\n\nexport type Grid = GridObject & SchemaObject;\n\n/**\n * 二维布局渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/grid-2d\n */\nexport interface Grid2DSchema extends BaseSchema {\n  /**\n   * 指定为 grid-2d 展示类型\n   */\n  type: 'grid-2d';\n\n  /**\n   * 列数量，默认是 12\n   */\n  cols?: number;\n\n  /**\n   * grid 2d 容器宽度，默认是 auto\n   */\n  width?: number | string | 'auto';\n\n  /**\n   * 格子间距，默认 0，包含行和列\n   */\n  gap?: number | string;\n\n  /**\n   * 格子行级别的间距，如果不设置就和 gap 一样\n   */\n  gapRow?: number | string;\n\n  /**\n   * 单位行高度，默认 50 px\n   */\n  rowHeight?: number | string;\n\n  /**\n   * 每个格子的配置\n   */\n  grids: Array<Grid>;\n}\n\nexport interface Grid2DProps\n  extends RendererProps,\n    Omit<Grid2DSchema, 'type' | 'className'> {\n  itemRender?: (\n    item: any,\n    key: number,\n    length: number,\n    props: any\n  ) => JSX.Element;\n}\n\n// Grid 布局默认的这个命名方式和其它 CSS 差异太大，所以我们使用更类似其它 CSS 的命名\nconst justifySelfMap = {\n  left: 'start',\n  right: 'end',\n  center: 'center',\n  auto: 'stretch'\n};\n\nconst alignSelfMap = {\n  top: 'start',\n  bottom: 'end',\n  middle: 'center',\n  auto: 'stretch'\n};\n\nexport default class Grid2D extends React.Component<Grid2DProps, object> {\n  static propsList: Array<string> = ['grids'];\n\n  static defaultProps: Partial<Grid2DProps> = {\n    cols: 12,\n    width: 'auto',\n    gap: 0,\n    rowHeight: '3.125rem'\n  };\n\n  constructor(props: Grid2DProps) {\n    super(props);\n  }\n\n  renderChild(region: string, node: Schema) {\n    const {render, disabled} = this.props;\n\n    return render(region, node, {disabled});\n  }\n\n  renderGrid(grid: GridObject, key: number, length: number) {\n    const {itemRender, data} = this.props;\n\n    if (!isVisible(grid as Grid, data)) {\n      return null;\n    }\n\n    let style: any = {\n      gridColumnStart: grid.x,\n      gridColumnEnd: grid.x + grid.w,\n      gridRowStart: grid.y,\n      gridRowEnd: grid.y + grid.h,\n      justifySelf: grid.align ? justifySelfMap[grid.align] : 'stretch',\n      alignSelf: grid.valign ? alignSelfMap[grid.valign] : 'stretch'\n    };\n\n    return (\n      <div key={key} style={style} className={grid.gridClassName}>\n        {itemRender\n          ? itemRender(grid, key, length, this.props)\n          : this.renderChild(`grid2d/${key}`, grid as Grid)}\n      </div>\n    );\n  }\n\n  renderGrids() {\n    const {grids} = this.props;\n\n    return grids.map((grid, key) => this.renderGrid(grid, key, grids.length));\n  }\n\n  render() {\n    const {grids, cols, gap, gapRow, width, rowHeight} = this.props;\n\n    const templateColumns = new Array(cols);\n    templateColumns.fill('1fr');\n\n    let maxRow = 0;\n\n    // 计算最大有多少行\n    grids.forEach((grid, index) => {\n      let row = grid.y + grid.h - 1;\n      if (row > maxRow) {\n        maxRow = row;\n      }\n    });\n\n    const templateRows = new Array(maxRow);\n    templateRows.fill(rowHeight);\n\n    // 根据 grid 中的设置自动更新行列高度\n    grids.forEach(grid => {\n      if (grid.width) {\n        templateColumns[grid.x - 1] = Number.isInteger(grid.width)\n          ? grid.width + 'px'\n          : grid.width;\n      }\n      if (grid.height) {\n        templateRows[grid.y - 1] = Number.isInteger(grid.height)\n          ? grid.height + 'px'\n          : grid.height;\n      }\n    });\n\n    const style = {\n      display: 'grid',\n      columnGap: gap,\n      rowGap: typeof gapRow === 'undefined' ? gap : gapRow,\n      width,\n      gridTemplateColumns: templateColumns.join(' '),\n      gridTemplateRows: templateRows.join(' ')\n    };\n\n    return <div style={style}>{this.renderGrids()}</div>;\n  }\n}\n\n@Renderer({\n  type: 'grid-2d'\n})\nexport class Grid2DRenderer extends Grid2D {}\n"
    ]
}