{
    "version": 3,
    "file": "ColumnToggler.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Table/ColumnToggler.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport Sortable from 'sortablejs';\nimport cloneDeep from 'lodash/cloneDeep';\nimport {RendererProps} from '../../factory';\nimport Overlay from '../../components/Overlay';\nimport PopOver from '../../components/PopOver';\nimport Modal from '../../components/Modal';\nimport Button from '../../components/Button';\nimport Checkbox from '../../components/Checkbox';\nimport TooltipWrapper from '../../components/TooltipWrapper';\nimport type {TooltipObject} from '../../components/TooltipWrapper';\nimport {noop, autobind, anyChanged} from '../../utils/helper';\nimport {filter} from '../../utils/tpl';\nimport {Icon} from '../../components/icons';\nimport {getIcon} from '../../components/icons';\nimport {generateIcon} from '../../utils/icon';\nimport {RootClose} from '../../utils/RootClose';\nimport {IColumn} from '../../store/table';\n\nexport interface ColumnTogglerProps extends RendererProps {\n  /**\n   * 按钮文字\n   */\n  label?: string | React.ReactNode;\n\n  /**\n   * 按钮提示文字，hover focus 时显示\n   */\n  tooltip?: string | TooltipObject;\n\n  /**\n   * 禁用状态下的提示\n   */\n  disabledTip?: string | TooltipObject;\n\n  /**\n   * 点击外部是否关闭\n   */\n  closeOnOutside?: boolean;\n\n  /**\n   * 点击内容是否关闭\n   */\n  closeOnClick?: boolean;\n\n  /**\n   * 下拉菜单对齐方式\n   */\n  align?: 'left' | 'right';\n\n  /**\n   *  ColumnToggler的CSS类名\n   */\n  className?: string;\n\n  /**\n   * 按钮的CSS类名\n   */\n  btnClassName?: string;\n\n  /**\n   * 按钮大小\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n\n  /**\n   * 按钮级别，样式\n   */\n  level?: 'info' | 'success' | 'danger' | 'warning' | 'primary' | 'link';\n\n  /**\n   * 是否独占一行 `display: block`\n   */\n  block?: boolean;\n\n  /**\n   * 是否可通过拖拽排序\n   */\n  draggable?: boolean;\n\n  /**\n   * 默认是否展开\n   */\n  defaultIsOpened?: boolean;\n\n  /**\n   * 激活状态\n   */\n  isActived?: boolean;\n\n  /**\n   * ICON名称\n   */\n  icon?: string | React.ReactNode;\n\n  /**\n   * 是否只显示图标。\n   */\n  iconOnly?: boolean;\n\n  /**\n   * 是否隐藏展开的Icon\n   */\n  hideExpandIcon?: boolean;\n\n  /**\n   * 是否显示遮罩层\n   */\n  overlay?: boolean;\n\n  /**\n   * 列数据\n   */\n  columns: Array<IColumn>;\n\n  /**\n   * 弹窗底部按钮大小\n   */\n  footerBtnSize?: 'xs' | 'sm' | 'md' | 'lg';\n\n  activeToggaleColumns: Array<IColumn>;\n  onColumnToggle: (columns: Array<IColumn>) => void;\n  modalContainer?: () => HTMLElement;\n}\n\nexport interface ColumnTogglerState {\n  isOpened: boolean;\n  enableSorting: boolean;\n  tempColumns: any[];\n}\n\nexport default class ColumnToggler extends React.Component<\n  ColumnTogglerProps,\n  ColumnTogglerState\n> {\n  state: ColumnTogglerState = {\n    isOpened: false,\n    enableSorting: false,\n    tempColumns: cloneDeep(this.props.columns)\n  };\n\n  static defaultProps: Pick<\n    ColumnTogglerProps,\n    'placement' | 'tooltipTrigger' | 'tooltipRootClose' | 'draggable'\n  > = {\n    placement: 'top',\n    tooltipTrigger: ['hover', 'focus'],\n    tooltipRootClose: false,\n    draggable: false\n  };\n\n  target: any;\n  sortable?: Sortable;\n  dragRefDOM: HTMLElement;\n\n  constructor(props: ColumnTogglerProps) {\n    super(props);\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.domRef = this.domRef.bind(this);\n    this.dragRef = this.dragRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.defaultIsOpened) {\n      this.setState({\n        isOpened: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ColumnTogglerProps) {\n    if (anyChanged('activeToggaleColumns', prevProps, this.props)) {\n      this.setState({tempColumns: this.props.columns});\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyDragging();\n  }\n\n  domRef(ref: any) {\n    this.target = ref;\n  }\n\n  toggle(e: React.MouseEvent<any>) {\n    e.preventDefault();\n\n    this.setState({\n      isOpened: !this.state.isOpened\n    });\n  }\n\n  open() {\n    this.setState({\n      isOpened: true\n    });\n  }\n\n  close() {\n    this.setState({\n      isOpened: false,\n      enableSorting: false,\n      tempColumns: cloneDeep(this.props.columns)\n    });\n  }\n\n  swapColumnPosition(oldIndex: number, newIndex: number) {\n    const columns = this.state.tempColumns;\n\n    columns[oldIndex] = columns.splice(newIndex, 1, columns[oldIndex])[0];\n    this.setState({tempColumns: columns});\n  }\n\n  updateToggledColumn(\n    column: IColumn,\n    index: number,\n    value: any,\n    shift?: boolean\n  ) {\n    const tempColumns = this.state.tempColumns.concat();\n\n    tempColumns.splice(index, 1, {\n      ...column,\n      toggled: value\n    });\n    this.setState({tempColumns});\n  }\n\n  @autobind\n  dragRef(ref: any) {\n    const {enableSorting} = this.state;\n    const {draggable} = this.props;\n\n    if (enableSorting && draggable && ref) {\n      this.initDragging();\n    }\n  }\n\n  initDragging() {\n    const dom = findDOMNode(this) as HTMLElement;\n    const ns = this.props.classPrefix;\n\n    this.sortable = new Sortable(\n      dom.querySelector(`.${ns}ColumnToggler-modal-content`) as HTMLElement,\n      {\n        group: `ColumnToggler-modal-content`,\n        animation: 150,\n        handle: `.${ns}ColumnToggler-menuItem-dragBar`,\n        ghostClass: `${ns}ColumnToggler-menuItem--dragging`,\n        onEnd: (e: any) => {\n          if (e.newIndex === e.oldIndex) {\n            return;\n          }\n\n          const parent = e.to as HTMLElement;\n          if (e.oldIndex < parent.childNodes.length - 1) {\n            parent.insertBefore(e.item, parent.childNodes[e.oldIndex]);\n          } else {\n            parent.appendChild(e.item);\n          }\n\n          this.swapColumnPosition(e.oldIndex, e.newIndex);\n        }\n      }\n    );\n  }\n\n  destroyDragging() {\n    this.sortable && this.sortable.destroy();\n  }\n\n  @autobind\n  onConfirm() {\n    const {tempColumns} = this.state;\n    const {onColumnToggle} = this.props;\n\n    onColumnToggle && onColumnToggle([...tempColumns]);\n    this.setState({\n      isOpened: false,\n      enableSorting: false\n    });\n  }\n\n  renderOuter() {\n    const {\n      popOverContainer,\n      classnames: cx,\n      classPrefix: ns,\n      children,\n      closeOnClick,\n      closeOnOutside\n    } = this.props;\n    const body = (\n      <RootClose\n        disabled={!this.state.isOpened}\n        onRootClose={closeOnOutside !== false ? this.close : noop}\n      >\n        {(ref: any) => {\n          return (\n            <ul\n              className={cx('ColumnToggler-menu')}\n              onClick={closeOnClick ? this.close : noop}\n              ref={ref}\n            >\n              {children}\n            </ul>\n          );\n        }}\n      </RootClose>\n    );\n\n    if (popOverContainer) {\n      return (\n        <Overlay container={popOverContainer} target={() => this.target} show>\n          <PopOver\n            overlay\n            onHide={this.close}\n            classPrefix={ns}\n            className={cx('ColumnToggler-popover')}\n            style={{minWidth: this.target?.offsetWidth}}\n          >\n            {body}\n          </PopOver>\n        </Overlay>\n      );\n    }\n\n    return body;\n  }\n\n  renderModal() {\n    const {\n      render,\n      classnames: cx,\n      classPrefix: ns,\n      modalContainer,\n      draggable,\n      overlay,\n      translate: __,\n      footerBtnSize\n    } = this.props;\n\n    const {enableSorting, tempColumns} = this.state;\n\n    return (\n      <>\n        <Modal\n          closeOnEsc\n          onHide={this.close}\n          show={this.state.isOpened}\n          contentClassName={cx('ColumnToggler-modal')}\n          container={modalContainer || this.target}\n          overlay={typeof overlay === 'boolean' ? overlay : false}\n        >\n          <header className={cx('ColumnToggler-modal-header')}>\n            <span className={cx('ColumnToggler-modal-title')}>\n              {__('Table.columnsVisibility')}\n            </span>\n            <a\n              data-tooltip={__('Dialog.close')}\n              data-position=\"left\"\n              className={cx('Modal-close')}\n              onClick={this.close}\n            >\n              <Icon icon=\"close\" className=\"icon\" />\n            </a>\n          </header>\n\n          <ul className={cx('ColumnToggler-modal-content')} ref={this.dragRef}>\n            {Array.isArray(tempColumns)\n              ? tempColumns.map((column, index) => (\n                  <TooltipWrapper\n                    tooltipClassName={cx('ColumnToggler-tooltip')}\n                    placement=\"top\"\n                    tooltip={column.label || ''}\n                    trigger={enableSorting ? [] : 'hover'}\n                    key={column.index}\n                  >\n                    <li\n                      className={cx('ColumnToggler-menuItem')}\n                      key={column.index}\n                    >\n                      {enableSorting && draggable && tempColumns.length > 1 ? (\n                        <>\n                          <a className={cx('ColumnToggler-menuItem-dragBar')}>\n                            <Icon icon=\"drag-bar\" className={cx('icon')} />\n                          </a>\n                          <span className={cx('ColumnToggler-menuItem-label')}>\n                            <span>{column.label || '-'}</span>\n                          </span>\n                        </>\n                      ) : (\n                        <Checkbox\n                          size=\"sm\"\n                          labelClassName={cx('ColumnToggler-menuItem-label')}\n                          classPrefix={ns}\n                          checked={column.toggled}\n                          disabled={!column.toggable || enableSorting}\n                          onChange={this.updateToggledColumn.bind(\n                            this,\n                            column,\n                            index\n                          )}\n                        >\n                          <span>{column.label || '-'}</span>\n                        </Checkbox>\n                      )}\n                    </li>\n                  </TooltipWrapper>\n                ))\n              : null}\n          </ul>\n\n          <footer className={cx('ColumnToggler-modal-footer')}>\n            <div>\n              <Button\n                className={cx(`ColumnToggler-modeSelect`, {\n                  'is-actived': !enableSorting\n                })}\n                onClick={() => this.setState({enableSorting: false})}\n                level=\"link\"\n              >\n                {__('Table.toggleColumn')}\n              </Button>\n              <Button\n                className={cx(`ColumnToggler-modeSelect`, {\n                  'is-actived': enableSorting\n                })}\n                onClick={() =>\n                  this.setState(\n                    {enableSorting: true},\n                    () =>\n                      this.state.enableSorting &&\n                      this.props.draggable &&\n                      this.initDragging()\n                  )\n                }\n                level=\"link\"\n                disabled={tempColumns.length < 2}\n              >\n                {__('sort')}\n              </Button>\n            </div>\n            <div>\n              <Button\n                size={footerBtnSize}\n                className=\"mr-3\"\n                onClick={this.close}\n              >\n                {__('cancel')}\n              </Button>\n              <Button\n                size={footerBtnSize}\n                level=\"primary\"\n                onClick={this.onConfirm}\n              >\n                {__('confirm')}\n              </Button>\n            </div>\n          </footer>\n        </Modal>\n      </>\n    );\n  }\n\n  render() {\n    const {\n      tooltip,\n      placement,\n      tooltipContainer,\n      tooltipTrigger,\n      tooltipRootClose,\n      disabledTip,\n      block,\n      disabled,\n      btnDisabled,\n      btnClassName,\n      size,\n      label,\n      level,\n      primary,\n      className,\n      classnames: cx,\n      align,\n      iconOnly,\n      icon,\n      isActived,\n      data,\n      draggable,\n      hideExpandIcon\n    } = this.props;\n\n    const button = (\n      <button\n        onClick={this.toggle}\n        disabled={disabled || btnDisabled}\n        className={cx(\n          'Button',\n          btnClassName,\n          typeof level === 'undefined'\n            ? 'Button--default'\n            : level\n            ? `Button--${level}`\n            : '',\n          {\n            'Button--block': block,\n            'Button--primary': primary,\n            'Button--iconOnly': iconOnly\n          },\n          size ? `Button--${size}` : ''\n        )}\n      >\n        {icon ? (\n          typeof icon === 'string' ? (\n            getIcon(icon!) ? (\n              <Icon icon={icon} className={cx('icon', {'m-r-xs': !!label})} />\n            ) : (\n              generateIcon(cx, icon, label ? 'm-r-xs' : '')\n            )\n          ) : React.isValidElement(icon) ? (\n            React.cloneElement(icon, {\n              className: cx({'m-r-xs': !!label})\n            })\n          ) : (\n            <Icon icon=\"columns\" className=\"icon m-r-none\" />\n          )\n        ) : (\n          <Icon icon=\"columns\" className=\"icon m-r-none\" />\n        )}\n        {typeof label === 'string' ? filter(label, data) : label}\n        {hideExpandIcon || draggable ? null : (\n          <span className={cx('ColumnToggler-caret')}>\n            <Icon icon=\"caret\" className=\"icon\" />\n          </span>\n        )}\n      </button>\n    );\n\n    return (\n      <div\n        className={cx(\n          'ColumnToggler',\n          {\n            'ColumnToggler-block': block,\n            'ColumnToggler--alignRight': align === 'right',\n            'is-opened': this.state.isOpened,\n            'is-actived': isActived\n          },\n          className\n        )}\n        ref={this.domRef}\n      >\n        {draggable ? (\n          button\n        ) : (\n          <TooltipWrapper\n            placement={placement}\n            tooltip={disabled ? disabledTip : tooltip}\n            container={tooltipContainer}\n            trigger={tooltipTrigger}\n            rootClose={tooltipRootClose}\n          >\n            {button}\n          </TooltipWrapper>\n        )}\n        {this.state.isOpened\n          ? draggable\n            ? this.renderModal()\n            : this.renderOuter()\n          : null}\n      </div>\n    );\n  }\n}\n"
    ]
}