{
    "version": 3,
    "file": "exportExcel.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Table/exportExcel.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 导出 Excel 功能\n */\n\nimport {filter} from '../../utils/tpl';\nimport './ColumnToggler';\nimport {TableStore} from '../../store/table';\nimport {saveAs} from 'file-saver';\nimport {getVariable, removeHTMLTag, createObject} from '../../utils/helper';\nimport {\n  isPureVariable,\n  resolveVariableAndFilter\n} from '../../utils/tpl-builtin';\nimport {BaseSchema} from '../../Schema';\nimport {toDataURL, getImageDimensions} from '../../utils/image';\nimport {TplSchema} from '../Tpl';\nimport {MappingSchema} from '../Mapping';\nimport {getSnapshot} from 'mobx-state-tree';\nimport {DateSchema} from '../Date';\nimport moment from 'moment';\nimport type {TableProps, ExportExcelToolbar} from './index';\n\n/**\n * 将 url 转成绝对地址\n */\nconst getAbsoluteUrl = (function () {\n  let link: HTMLAnchorElement;\n  return function (url: string) {\n    if (!link) link = document.createElement('a');\n    link.href = url;\n    return link.href;\n  };\n})();\n\nexport async function exportExcel(\n  ExcelJS: any,\n  props: TableProps,\n  toolbar: ExportExcelToolbar\n) {\n  const {store, env, classnames: cx, translate: __, data} = props;\n  let columns = store.exportColumns || [];\n\n  let rows = [];\n  let tmpStore;\n  let filename = 'data';\n  // 支持配置 api 远程获取\n  if (typeof toolbar === 'object' && toolbar.api) {\n    const res = await env.fetcher(toolbar.api, data);\n    if (!res.data) {\n      env.notify('warning', __('placeholder.noData'));\n      return;\n    }\n    if (Array.isArray(res.data)) {\n      rows = res.data;\n    } else {\n      rows = res.data.rows || res.data.items;\n    }\n    // 因为很多方法是 store 里的，所以需要构建 store 来处理\n    tmpStore = TableStore.create(getSnapshot(store));\n    tmpStore.initRows(rows);\n    rows = tmpStore.rows;\n  } else {\n    rows = store.rows;\n  }\n\n  if (typeof toolbar === 'object' && toolbar.filename) {\n    filename = filter(toolbar.filename, data, '| raw');\n  }\n\n  if (rows.length === 0) {\n    env.notify('warning', __('placeholder.noData'));\n    return;\n  }\n\n  const workbook = new ExcelJS.Workbook();\n  const worksheet = workbook.addWorksheet('sheet', {\n    properties: {defaultColWidth: 15}\n  });\n  worksheet.views = [{state: 'frozen', xSplit: 0, ySplit: 1}];\n\n  let exportColumnNames = toolbar.columns;\n\n  if (isPureVariable(exportColumnNames)) {\n    exportColumnNames = resolveVariableAndFilter(\n      exportColumnNames,\n      data,\n      '| raw'\n    );\n  }\n\n  // 自定义导出列配置\n  if (toolbar.exportColumns && Array.isArray(toolbar.exportColumns)) {\n    columns = toolbar.exportColumns;\n  }\n\n  const filteredColumns = exportColumnNames\n    ? columns.filter(column => {\n        const filterColumnsNames = exportColumnNames!;\n        if (column.name && filterColumnsNames.indexOf(column.name) !== -1) {\n          return true;\n        }\n        return false;\n      })\n    : columns;\n\n  const firstRowLabels = filteredColumns.map(column => {\n    return column.label;\n  });\n  const firstRow = worksheet.getRow(1);\n  firstRow.values = firstRowLabels;\n  worksheet.autoFilter = {\n    from: {\n      row: 1,\n      column: 1\n    },\n    to: {\n      row: 1,\n      column: firstRowLabels.length\n    }\n  };\n  // 用于 mapping source 的情况\n  const remoteMappingCache: any = {};\n  // 数据从第二行开始\n  let rowIndex = 1;\n  for (const row of rows) {\n    rowIndex += 1;\n    const sheetRow = worksheet.getRow(rowIndex);\n    let columIndex = 0;\n    for (const column of filteredColumns) {\n      columIndex += 1;\n      const name = column.name!;\n      const value = getVariable(row.data, name);\n      if (typeof value === 'undefined' && !(column as TplSchema).tpl) {\n        continue;\n      }\n      // 处理合并单元格\n      if (name in row.rowSpans) {\n        if (row.rowSpans[name] === 0) {\n          continue;\n        } else {\n          // start row, start column, end row, end column\n          worksheet.mergeCells(\n            rowIndex,\n            columIndex,\n            rowIndex + row.rowSpans[name] - 1,\n            columIndex\n          );\n        }\n      }\n\n      const type = (column as BaseSchema).type || 'plain';\n      // TODO: 这里很多组件都是拷贝对应渲染的逻辑实现的，导致\n      if (type === 'image' && value) {\n        try {\n          const imageData = await toDataURL(value);\n          const imageDimensions = await getImageDimensions(imageData);\n          let imageWidth = imageDimensions.width;\n          let imageHeight = imageDimensions.height;\n          // 限制一下图片高宽\n          const imageMaxSize = 100;\n          if (imageWidth > imageHeight) {\n            if (imageWidth > imageMaxSize) {\n              imageHeight = (imageMaxSize * imageHeight) / imageWidth;\n              imageWidth = imageMaxSize;\n            }\n          } else {\n            if (imageHeight > imageMaxSize) {\n              imageWidth = (imageMaxSize * imageWidth) / imageHeight;\n              imageHeight = imageMaxSize;\n            }\n          }\n          const imageMatch = imageData.match(/data:image\\/(.*);/);\n          let imageExt = 'png';\n          if (imageMatch) {\n            imageExt = imageMatch[1];\n          }\n          // 目前 excel 只支持这些格式，所以其它格式直接输出 url\n          if (imageExt != 'png' && imageExt != 'jpeg' && imageExt != 'gif') {\n            sheetRow.getCell(columIndex).value = value;\n            continue;\n          }\n          const imageId = workbook.addImage({\n            base64: imageData,\n            extension: imageExt\n          });\n          const linkURL = getAbsoluteUrl(value);\n          worksheet.addImage(imageId, {\n            // 这里坐标位置是从 0 开始的，所以要减一\n            tl: {col: columIndex - 1, row: rowIndex - 1},\n            ext: {\n              width: imageWidth,\n              height: imageHeight\n            },\n            hyperlinks: {\n              tooltip: linkURL\n            }\n          });\n        } catch (e) {\n          console.warn(e.stack);\n        }\n      } else if (type == 'link') {\n        const linkURL = getAbsoluteUrl(value);\n        sheetRow.getCell(columIndex).value = {\n          text: value,\n          hyperlink: linkURL\n        };\n      } else if (type === 'mapping') {\n        // 拷贝自 Mapping.tsx\n        let map = (column as MappingSchema).map;\n        const source = (column as MappingSchema).source;\n        if (source) {\n          let sourceValue = source;\n          if (isPureVariable(source)) {\n            sourceValue = resolveVariableAndFilter(\n              source as string,\n              data,\n              '| raw'\n            );\n          }\n\n          const mapKey = JSON.stringify(source);\n          if (mapKey in remoteMappingCache) {\n            map = remoteMappingCache[mapKey];\n          } else {\n            const res = await env.fetcher(sourceValue, data);\n            if (res.data) {\n              remoteMappingCache[mapKey] = res.data;\n              map = res.data;\n            }\n          }\n        }\n\n        if (typeof value !== 'undefined' && map && (map[value] ?? map['*'])) {\n          const viewValue =\n            map[value] ??\n            (value === true && map['1']\n              ? map['1']\n              : value === false && map['0']\n              ? map['0']\n              : map['*']); // 兼容平台旧用法：即 value 为 true 时映射 1 ，为 false 时映射 0\n          sheetRow.getCell(columIndex).value = removeHTMLTag(viewValue);\n        } else {\n          sheetRow.getCell(columIndex).value = removeHTMLTag(value);\n        }\n      } else if (type === 'date') {\n        let viewValue;\n        const {\n          fromNow,\n          format = 'YYYY-MM-DD',\n          valueFormat = 'X'\n        } = column as DateSchema;\n        if (value) {\n          let ISODate = moment(value, moment.ISO_8601);\n          let NormalDate = moment(value, valueFormat);\n\n          viewValue = ISODate.isValid()\n            ? ISODate.format(format)\n            : NormalDate.isValid()\n            ? NormalDate.format(format)\n            : false;\n        }\n\n        if (fromNow) {\n          viewValue = moment(value).fromNow();\n        }\n        if (viewValue) {\n          sheetRow.getCell(columIndex).value = viewValue;\n        }\n      } else {\n        if ((column as TplSchema).tpl) {\n          sheetRow.getCell(columIndex).value = removeHTMLTag(\n            filter((column as TplSchema).tpl, createObject(data, row.data))\n          );\n        } else {\n          sheetRow.getCell(columIndex).value = value;\n        }\n      }\n    }\n  }\n\n  const buffer = await workbook.xlsx.writeBuffer();\n\n  if (buffer) {\n    var blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    });\n    saveAs(blob, filename + '.xlsx');\n  }\n}\n"
    ]
}