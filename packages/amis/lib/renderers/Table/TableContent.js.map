{
    "version": 3,
    "file": "TableContent.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Table/TableContent.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {ClassNamesFn} from '../../theme';\nimport {IColumn, IRow, ITableStore} from '../../store/table';\nimport {SchemaNode, Action} from '../../types';\nimport {TableBody} from './TableBody';\nimport {LocaleProps} from '../../locale';\nimport {observer} from 'mobx-react';\nimport {ActionSchema} from '../Action';\nimport ItemActionsWrapper from './ItemActionsWrapper';\n\nexport interface TableContentProps extends LocaleProps {\n  className?: string;\n  tableClassName?: string;\n  classnames: ClassNamesFn;\n  columns: Array<IColumn>;\n  columnsGroup: Array<{\n    label: string;\n    index: number;\n    colSpan: number;\n    rowSpan: number;\n    has: Array<any>;\n  }>;\n  rows: Array<IRow>;\n  placeholder?: string;\n  render: (region: string, node: SchemaNode, props?: any) => JSX.Element;\n  onMouseMove: (event: React.MouseEvent) => void;\n  onScroll: (event: React.UIEvent) => void;\n  tableRef: (table?: HTMLTableElement | null) => void;\n  renderHeadCell: (column: IColumn, props?: any) => JSX.Element;\n  renderCell: (\n    region: string,\n    column: IColumn,\n    item: IRow,\n    props: any\n  ) => React.ReactNode;\n  onCheck: (item: IRow, value: boolean, shift?: boolean) => void;\n  onQuickChange?: (\n    item: IRow,\n    values: object,\n    saveImmediately?: boolean | any,\n    savePristine?: boolean\n  ) => void;\n  footable?: boolean;\n  footableColumns: Array<IColumn>;\n  checkOnItemClick?: boolean;\n  buildItemProps?: (item: IRow, index: number) => any;\n  onAction?: (e: React.UIEvent<any>, action: Action, ctx: object) => void;\n  rowClassNameExpr?: string;\n  affixRowClassName?: string;\n  prefixRowClassName?: string;\n  rowClassName?: string;\n  data?: any;\n  prefixRow?: Array<any>;\n  affixRow?: Array<any>;\n  itemAction?: ActionSchema;\n  itemActions?: Array<Action>;\n  store: ITableStore;\n}\n\n@observer\nexport class TableContent extends React.Component<TableContentProps> {\n  renderItemActions() {\n    const {itemActions, render, store, classnames: cx} = this.props;\n    const finalActions = Array.isArray(itemActions)\n      ? itemActions.filter(action => !action.hiddenOnHover)\n      : [];\n\n    if (!finalActions.length) {\n      return null;\n    }\n\n    return (\n      <ItemActionsWrapper store={store} classnames={cx}>\n        <div className={cx('Table-itemActions')}>\n          {finalActions.map((action, index) =>\n            render(\n              `itemAction/${index}`,\n              {\n                ...(action as any),\n                isMenuItem: true\n              },\n              {\n                key: index,\n                item: store.hoverRow,\n                data: store.hoverRow!.locals,\n                rowIndex: store.hoverRow!.index\n              }\n            )\n          )}\n        </div>\n      </ItemActionsWrapper>\n    );\n  }\n\n  render() {\n    const {\n      placeholder,\n      classnames: cx,\n      render,\n      className,\n      columns,\n      columnsGroup,\n      onMouseMove,\n      onScroll,\n      tableRef,\n      rows,\n      renderHeadCell,\n      renderCell,\n      onCheck,\n      rowClassName,\n      onQuickChange,\n      footable,\n      footableColumns,\n      checkOnItemClick,\n      buildItemProps,\n      onAction,\n      rowClassNameExpr,\n      affixRowClassName,\n      prefixRowClassName,\n      data,\n      prefixRow,\n      locale,\n      translate,\n      itemAction,\n      affixRow,\n      store\n    } = this.props;\n\n    const tableClassName = cx('Table-table', this.props.tableClassName);\n    const hideHeader = columns.every(column => !column.label);\n\n    return (\n      <div\n        onMouseMove={onMouseMove}\n        className={cx('Table-content', className)}\n        onScroll={onScroll}\n      >\n        {store.hoverRow ? this.renderItemActions() : null}\n        <table ref={tableRef} className={tableClassName}>\n          <thead>\n            {columnsGroup.length ? (\n              <tr>\n                {columnsGroup.map((item, index) => (\n                  <th\n                    key={index}\n                    data-index={item.index}\n                    colSpan={item.colSpan}\n                    rowSpan={item.rowSpan}\n                  >\n                    {item.label ? render('tpl', item.label) : null}\n                  </th>\n                ))}\n              </tr>\n            ) : null}\n            <tr className={hideHeader ? 'fake-hide' : ''}>\n              {columns.map(column =>\n                columnsGroup.find(group => ~group.has.indexOf(column))\n                  ?.rowSpan === 2\n                  ? null\n                  : renderHeadCell(column, {\n                      'data-index': column.index,\n                      'key': column.index\n                    })\n              )}\n            </tr>\n          </thead>\n          {!rows.length ? (\n            <tbody>\n              <tr className={cx('Table-placeholder')}>\n                <td colSpan={columns.length}>\n                  {render(\n                    'placeholder',\n                    translate(placeholder || 'placeholder.noData')\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ) : (\n            <TableBody\n              itemAction={itemAction}\n              classnames={cx}\n              render={render}\n              renderCell={renderCell}\n              onCheck={onCheck}\n              onQuickChange={onQuickChange}\n              footable={footable}\n              footableColumns={footableColumns}\n              checkOnItemClick={checkOnItemClick}\n              buildItemProps={buildItemProps}\n              onAction={onAction}\n              rowClassNameExpr={rowClassNameExpr}\n              rowClassName={rowClassName}\n              prefixRowClassName={prefixRowClassName}\n              affixRowClassName={affixRowClassName}\n              rows={rows}\n              columns={columns}\n              locale={locale}\n              translate={translate}\n              prefixRow={prefixRow}\n              affixRow={affixRow}\n              data={data}\n            ></TableBody>\n          )}\n        </table>\n      </div>\n    );\n  }\n}\n"
    ]
}