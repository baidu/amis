{
    "version": 3,
    "file": "TableBody.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Table/TableBody.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {ClassNamesFn} from '../../theme';\nimport {IColumn, IRow} from '../../store/table';\nimport {SchemaNode, Action} from '../../types';\nimport {TableRow} from './TableRow';\nimport {filter} from '../../utils/tpl';\nimport {observer} from 'mobx-react';\nimport {trace, reaction} from 'mobx';\nimport {createObject, flattenTree} from '../../utils/helper';\nimport {LocaleProps} from '../../locale';\nimport {ActionSchema} from '../Action';\n\nexport interface TableBodyProps extends LocaleProps {\n  className?: string;\n  rowsProps?: any;\n  tableClassName?: string;\n  classnames: ClassNamesFn;\n  columns: Array<IColumn>;\n  rows: Array<IRow>;\n  render: (region: string, node: SchemaNode, props?: any) => JSX.Element;\n  renderCell: (\n    region: string,\n    column: IColumn,\n    item: IRow,\n    props: any\n  ) => React.ReactNode;\n  onCheck: (item: IRow, value: boolean, shift?: boolean) => void;\n  onQuickChange?: (\n    item: IRow,\n    values: object,\n    saveImmediately?: boolean | any,\n    savePristine?: boolean\n  ) => void;\n  footable?: boolean;\n  ignoreFootableContent?: boolean;\n  footableColumns: Array<IColumn>;\n  checkOnItemClick?: boolean;\n  buildItemProps?: (item: IRow, index: number) => any;\n  onAction?: (e: React.UIEvent<any>, action: Action, ctx: object) => void;\n  rowClassNameExpr?: string;\n  rowClassName?: string;\n  affixRowClassName?: string;\n  prefixRowClassName?: string;\n  data?: any;\n  prefixRow?: Array<any>;\n  affixRow?: Array<any>;\n  itemAction?: ActionSchema;\n}\n\n@observer\nexport class TableBody extends React.Component<TableBodyProps> {\n  renderRows(\n    rows: Array<any>,\n    columns = this.props.columns,\n    rowProps: any = {}\n  ): any {\n    const {\n      rowClassName,\n      rowClassNameExpr,\n      onAction,\n      buildItemProps,\n      checkOnItemClick,\n      classnames: cx,\n      render,\n      renderCell,\n      onCheck,\n      onQuickChange,\n      footable,\n      ignoreFootableContent,\n      footableColumns,\n      itemAction\n    } = this.props;\n\n    return rows.map((item: IRow, rowIndex: number) => {\n      const itemProps = buildItemProps ? buildItemProps(item, rowIndex) : null;\n\n      const doms = [\n        <TableRow\n          {...itemProps}\n          itemAction={itemAction}\n          classnames={cx}\n          checkOnItemClick={checkOnItemClick}\n          key={item.id}\n          itemIndex={rowIndex}\n          item={item}\n          itemClassName={cx(\n            rowClassNameExpr\n              ? filter(rowClassNameExpr, item.data)\n              : rowClassName,\n            {\n              'is-last': item.depth > 1 && rowIndex === rows.length - 1\n            }\n          )}\n          columns={columns}\n          renderCell={renderCell}\n          render={render}\n          onAction={onAction}\n          onCheck={onCheck}\n          // todo 先注释 quickEditEnabled={item.depth === 1}\n          onQuickChange={onQuickChange}\n          {...rowProps}\n        />\n      ];\n\n      if (footable && footableColumns.length) {\n        if (item.depth === 1) {\n          doms.push(\n            <TableRow\n              {...itemProps}\n              itemAction={itemAction}\n              classnames={cx}\n              checkOnItemClick={checkOnItemClick}\n              key={`foot-${item.id}`}\n              itemIndex={rowIndex}\n              item={item}\n              itemClassName={cx(\n                rowClassNameExpr\n                  ? filter(rowClassNameExpr, item.data)\n                  : rowClassName\n              )}\n              columns={footableColumns}\n              renderCell={renderCell}\n              render={render}\n              onAction={onAction}\n              onCheck={onCheck}\n              footableMode\n              footableColSpan={columns.length}\n              onQuickChange={onQuickChange}\n              ignoreFootableContent={ignoreFootableContent}\n              {...rowProps}\n            />\n          );\n        }\n      } else if (item.children.length && item.expanded) {\n        // 嵌套表格\n        doms.push(\n          ...this.renderRows(item.children, columns, {\n            ...rowProps,\n            parent: item\n          })\n        );\n      }\n      return doms;\n    });\n  }\n\n  renderSummaryRow(\n    position: 'prefix' | 'affix',\n    items?: Array<any>,\n    rowIndex?: number\n  ) {\n    const {\n      columns,\n      render,\n      data,\n      classnames: cx,\n      rows,\n      prefixRowClassName,\n      affixRowClassName\n    } = this.props;\n\n    if (!(Array.isArray(items) && items.length)) {\n      return null;\n    }\n\n    const filterColumns = columns.filter(item => item.toggable);\n    const result: any[] = [];\n\n    for (let index = 0; index < filterColumns.length; index++) {\n      const item = items[filterColumns[index].rawIndex];\n      item && result.push({...item});\n    }\n\n    //  如果是勾选栏，让它和下一列合并。\n    if (columns[0].type === '__checkme' && result[0]) {\n      result[0].colSpan = (result[0].colSpan || 1) + 1;\n    }\n\n    //  如果是展开栏，让它和下一列合并。\n    if (columns[0].type === '__expandme' && result[0]) {\n      result[0].colSpan = (result[0].colSpan || 1) + 1;\n    }\n\n    // 缺少的单元格补齐\n    const appendLen =\n      columns.length - result.reduce((p, c) => p + (c.colSpan || 1), 0);\n\n    if (appendLen) {\n      const item = result.pop();\n      result.push({\n        ...item,\n        colSpan: (item.colSpan || 1) + appendLen\n      });\n    }\n    const ctx = createObject(data, {\n      items: rows.map(row => row.locals)\n    });\n\n    return (\n      <tr\n        className={cx(\n          'Table-tr',\n          'is-summary',\n          position === 'prefix' ? prefixRowClassName : '',\n          position === 'affix' ? affixRowClassName : ''\n        )}\n        key={`summary-${position}-${rowIndex || 0}`}\n      >\n        {result.map((item, index) => {\n          const Com = item.isHead ? 'th' : 'td';\n          return (\n            <Com\n              key={index}\n              colSpan={item.colSpan}\n              className={item.cellClassName}\n            >\n              {render(`summary-row/${index}`, item, {\n                data: ctx\n              })}\n            </Com>\n          );\n        })}\n      </tr>\n    );\n  }\n\n  renderSummary(position: 'prefix' | 'affix', items?: Array<any>) {\n    return Array.isArray(items)\n      ? items.some(i => Array.isArray(i))\n        ? items.map((i, rowIndex) =>\n            this.renderSummaryRow(\n              position,\n              Array.isArray(i) ? i : [i],\n              rowIndex\n            )\n          )\n        : this.renderSummaryRow(position, items)\n      : null;\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      className,\n      render,\n      rows,\n      columns,\n      rowsProps,\n      prefixRow,\n      affixRow,\n      translate: __\n    } = this.props;\n\n    return (\n      <tbody className={className}>\n        {rows.length ? (\n          <>\n            {this.renderSummary('prefix', prefixRow)}\n            {this.renderRows(rows, columns, rowsProps)}\n            {this.renderSummary('affix', affixRow)}\n          </>\n        ) : null}\n      </tbody>\n    );\n  }\n}\n"
    ]
}