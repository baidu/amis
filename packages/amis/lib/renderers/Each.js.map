{
    "version": 3,
    "file": "Each.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Each.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AAEnD,oDAA+E;AAC/E,0CAAqE;AAiCrE;IAAkC,qCAA0B;IAA5D;;IAwDA,CAAC;IAjDC,qBAAM,GAAN;QACQ,IAAA,KASF,IAAI,CAAC,KAAK,EARZ,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,MAAM,YAAA,EACN,KAAK,WAAA,EACL,WAAW,iBAAA,EACC,EAAE,gBAAA,EACH,EAAE,eACD,CAAC;QAEf,IAAM,KAAK,GAAG,IAAA,qBAAY,EAAC,IAAI,CAAC,KAAK,EAAE,UAAA,KAAK;YAC1C,OAAA,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;gBACzB,CAAC,CAAC,IAAA,sCAAwB,EAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC;gBAC7D,CAAC,CAAC,SAAS;QAFb,CAEa,CACd,CAAC;QAEF,IAAM,GAAG,GAAG,IAAA,iBAAQ,EAAC,KAAK,CAAC;YACzB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC;gBAC7B,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;aAClB,CAAC,EAH4B,CAG5B,CAAC;YACL,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;gBACtB,CAAC,CAAC,KAAK;gBACP,CAAC,CAAC,EAAE,CAAC;QAEP,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,IAClC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAC3C,GAAG,CAAC,GAAG,CAAC,UAAC,IAAS,EAAE,KAAa;;YAC/B,OAAA,MAAM,CAAC,eAAQ,KAAK,CAAE,EAAE,KAAK,EAAE;gBAC7B,IAAI,EAAE,IAAA,qBAAY,EAChB,IAAI,EACJ,IAAA,iBAAQ,EAAC,IAAI,CAAC;oBACZ,CAAC,yBAAE,KAAK,OAAA,IAAK,IAAI,EACjB,CAAC,WAAE,GAAC,IAAI,IAAG,IAAI,EAAE,OAAI,GAAE,IAAI,EAAE,QAAK,QAAA,KAAC,CACtC;gBACD,GAAG,EAAE,KAAK;aACX,CAAC;QARF,CAQE,CACH,CACF,CAAC,CAAC,CAAC,CACF,uCAAK,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC,IACnC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,CACnC,CACP,CACG,CACP,CAAC;IACJ,CAAC;IAtDM,cAAS,GAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,iBAAY,GAAG;QACpB,SAAS,EAAE,EAAE;QACb,WAAW,EAAE,oBAAoB;KAClC,CAAC;IAmDJ,WAAC;CAAA,AAxDD,CAAkC,eAAK,CAAC,SAAS,GAwDhD;kBAxDoB,IAAI;AA6DzB;IAAkC,6CAAI;IAAtC;;IAAwC,CAAC;IAA5B,YAAY;QAHxB,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,MAAM;SACb,CAAC;OACW,YAAY,CAAgB;IAAD,mBAAC;CAAA,AAAzC,CAAkC,IAAI,GAAG;AAA5B,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Schema} from '../types';\nimport {resolveVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\nimport {createObject, getPropValue, isObject} from '../utils/helper';\nimport {BaseSchema, SchemaCollection} from '../Schema';\n\n/**\n * Each 循环功能渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/each\n */\nexport interface EachSchema extends BaseSchema {\n  /**\n   * 指定为each展示类型\n   */\n  type: 'each';\n\n  /**\n   * 关联字段名\n   */\n  name?: string;\n\n  /**\n   * 关联字段名 支持数据映射\n   */\n  source?: string;\n\n  items?: SchemaCollection;\n\n  placeholder?: string;\n}\n\nexport interface EachProps extends RendererProps {\n  name: string;\n  items: Schema;\n}\n\nexport default class Each extends React.Component<EachProps> {\n  static propsList: Array<string> = ['name', 'items', 'value'];\n  static defaultProps = {\n    className: '',\n    placeholder: 'placeholder.noData'\n  };\n\n  render() {\n    const {\n      data,\n      name,\n      className,\n      render,\n      items,\n      placeholder,\n      classnames: cx,\n      translate: __\n    } = this.props;\n\n    const value = getPropValue(this.props, props =>\n      props.source && !props.name\n        ? resolveVariableAndFilter(props.source, props.data, '| raw')\n        : undefined\n    );\n\n    const arr = isObject(value)\n      ? Object.keys(value).map(key => ({\n          key: key,\n          value: value[key]\n        }))\n      : Array.isArray(value)\n      ? value\n      : [];\n\n    return (\n      <div className={cx('Each', className)}>\n        {Array.isArray(arr) && arr.length && items ? (\n          arr.map((item: any, index: number) =>\n            render(`item/${index}`, items, {\n              data: createObject(\n                data,\n                isObject(item)\n                  ? {index, ...item}\n                  : {[name]: item, item: item, index}\n              ),\n              key: index\n            })\n          )\n        ) : (\n          <div className={cx('Each-placeholder')}>\n            {render('placeholder', __(placeholder))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'each'\n})\nexport class EachRenderer extends Each {}\n"
    ]
}