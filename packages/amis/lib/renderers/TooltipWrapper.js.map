{
    "version": 3,
    "file": "TooltipWrapper.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/TooltipWrapper.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AAEnD,oCAAoC;AAEpC,wCAA0C;AAC1C,4CAAmE;AAkJnE;IAA4C,+CAG3C;IAsBC,wBAAY,KAA0B;eACpC,kBAAM,KAAK,CAAC;IACd,CAAC;IAED,mCAAU,GAAV;QACQ,IAAA,KAUF,IAAI,CAAC,KAAK,EATZ,MAAM,YAAA,EACM,EAAE,gBAAA,EACd,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,gBAAgB,sBAAA,EAChB,MAAM,YAAA,EACN,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,IAAI,UACQ,CAAC;QACf,IAAM,IAAI,GACP,gBAAgD;YACjD,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAE5B,OAAO,CACL,8BAAC,IAAI,IACH,SAAS,EAAE,EAAE,CAAC,gBAAgB,EAAE,SAAS,EAAE;gBACzC,wBAAwB,EAAE,MAAM;aACjC,CAAC,EACF,KAAK,EAAE,IAAA,kBAAU,EAAC,KAAK,EAAE,IAAI,CAAC,IAE7B,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAChB,CACR,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QACQ,IAAA,KAoBF,IAAI,CAAC,KAAK,EAnBC,EAAE,iBAAA,EACH,EAAE,gBAAA,EACd,gBAAgB,sBAAA,EAChB,YAAY,kBAAA,EACZ,SAAS,eAAA,EACT,SAAS,eAAA,EACT,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,KAAK,WAAA,EACL,OAAO,aAAA,EACP,OAAO,aAAA,EACP,eAAe,qBAAA,EACf,eAAe,qBAAA,EACf,OAAO,aAAA,EACP,MAAM,YAAA,EACN,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,IAAI,UACQ,CAAC;QAEf,IAAM,UAAU,GAAkB;YAChC,KAAK,EAAE,IAAA,YAAM,EAAC,KAAK,EAAE,IAAI,CAAC;YAC1B,OAAO,EAAE,IAAA,YAAM,EAAC,OAAO,IAAI,OAAO,EAAE,IAAI,CAAC;YACzC,KAAK,EAAE,IAAA,kBAAU,EAAC,YAAY,EAAE,IAAI,CAAC;YACrC,SAAS,WAAA;YACT,OAAO,SAAA;YACP,SAAS,WAAA;YACT,SAAS,WAAA;YACT,YAAY,cAAA;YACZ,gBAAgB,kBAAA;YAChB,eAAe,iBAAA;YACf,eAAe,iBAAA;YACf,MAAM,QAAA;YACN,SAAS,WAAA;YACT,QAAQ,UAAA;YACR,SAAS,WAAA;SACV,CAAC;QAEF,OAAO,CACL,8BAAC,2BAAkB,IAAC,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,IACrE,IAAI,CAAC,UAAU,EAAE,CACC,CACtB,CAAC;IACJ,CAAC;IAnGM,2BAAY,GAUf;QACF,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,IAAI;QACf,eAAe,EAAE,CAAC;QAClB,eAAe,EAAE,GAAG;QACpB,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,KAAK;QACX,YAAY,EAAE,OAAO;KACtB,CAAC;IAiFJ,qBAAC;CAAA,AAxGD,CAA4C,eAAK,CAAC,SAAS,GAwG1D;kBAxGoB,cAAc;AA6GnC;IAA4C,uDAAc;IAA1D;;IAA4D,CAAC;IAAhD,sBAAsB;QAHlC,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,iBAAiB;SACxB,CAAC;OACW,sBAAsB,CAA0B;IAAD,6BAAC;CAAA,AAA7D,CAA4C,cAAc,GAAG;AAAhD,wDAAsB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {BaseSchema, SchemaCollection} from '../Schema';\nimport {filter} from '../utils/tpl';\nimport {escapeHtml} from '../utils/tpl-builtin';\nimport {buildStyle} from '../utils/style';\nimport {TooltipWrapper as TooltipWrapperComp} from '../components';\n\nimport type {Trigger, TooltipObject} from '../components/TooltipWrapper';\n\nexport interface TooltipWrapperSchema extends BaseSchema {\n  /**\n   * 文字提示容器\n   */\n  type: 'tooltip-wrapper';\n\n  /**\n   * 文字提示标题\n   */\n  title?: string;\n\n  /**\n   * 文字提示内容，兼容 tooltip，但建议通过 content 来实现提示内容\n   */\n  content?: string;\n\n  /**\n   *  @deprecated 文字提示内容\n   */\n  tooltip?: string;\n\n  /**\n   * 文字提示浮层出现位置，默认为top\n   */\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n\n  /**\n   * 浮层位置相对偏移量\n   */\n  offset?: [number, number];\n\n  /**\n   * 是否展示浮层指向箭头\n   */\n  showArrow?: boolean;\n\n  /**\n   * 是否禁用提示\n   */\n  disabled?: boolean;\n\n  /**\n   * 浮层触发方式，默认为hover\n   */\n  trigger?: Trigger | Array<Trigger>;\n\n  /**\n   * 浮层延迟显示时间, 单位 ms\n   */\n\n  mouseEnterDelay?: number;\n  /**\n   * 浮层延迟隐藏时间, 单位 ms\n   */\n  mouseLeaveDelay?: number;\n\n  /**\n   * 是否点击非内容区域关闭提示，默认为true\n   */\n  rootClose?: boolean;\n\n  /**\n   * 内容区域\n   */\n  body?: SchemaCollection;\n\n  /**\n   * 内容区包裹标签\n   */\n  wrapperComponent: string;\n\n  /**\n   * 内容区是否内联显示，默认为false\n   */\n  inline?: boolean;\n\n  /**\n   * 主题样式， 默认为light\n   */\n  tooltipTheme?: 'light' | 'dark';\n\n  /**\n   * 内容区自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n\n  /**\n   * 是否可以移入浮层中, 默认true\n   */\n  enterable?: boolean;\n\n  /**\n   * 自定义提示浮层样式\n   */\n  tooltipStyle?: {\n    [propName: string]: any;\n  };\n\n  /**\n   * 内容区CSS类名\n   */\n  className?: string;\n\n  /**\n   * 文字提示浮层CSS类名\n   */\n  tooltipClassName?: string;\n}\n\nexport interface TooltipWrapperProps extends RendererProps {\n  /**\n   * 文字提示标题\n   */\n  title?: string;\n  /**\n   * 文字提示\n   */\n  content?: string;\n  tooltip?: string;\n  /**\n   * 文字提示位置\n   */\n  placement: 'top' | 'right' | 'bottom' | 'left';\n  inline?: boolean;\n  trigger: Trigger | Array<Trigger>;\n  rootClose?: boolean;\n  showArrow?: boolean;\n  offset?: [number, number];\n  disabled?: boolean;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  container?: React.ReactNode;\n  style?: React.CSSProperties;\n  tooltipStyle?: React.CSSProperties;\n  wrapperComponent?: string;\n  tooltipTheme?: 'light' | 'dark';\n}\n\ninterface TooltipWrapperState {}\n\nexport default class TooltipWrapper extends React.Component<\n  TooltipWrapperProps,\n  TooltipWrapperState\n> {\n  static defaultProps: Pick<\n    TooltipWrapperProps,\n    | 'placement'\n    | 'trigger'\n    | 'rootClose'\n    | 'mouseEnterDelay'\n    | 'mouseLeaveDelay'\n    | 'inline'\n    | 'wrap'\n    | 'tooltipTheme'\n  > = {\n    placement: 'top',\n    trigger: 'hover',\n    rootClose: true,\n    mouseEnterDelay: 0,\n    mouseLeaveDelay: 200,\n    inline: false,\n    wrap: false,\n    tooltipTheme: 'light'\n  };\n\n  constructor(props: TooltipWrapperProps) {\n    super(props);\n  }\n\n  renderBody() {\n    const {\n      render,\n      classnames: cx,\n      body,\n      className,\n      wrapperComponent,\n      inline,\n      style,\n      data,\n      wrap\n    } = this.props;\n    const Comp =\n      (wrapperComponent as keyof JSX.IntrinsicElements) ||\n      (inline ? 'span' : 'div');\n\n    return (\n      <Comp\n        className={cx('TooltipWrapper', className, {\n          'TooltipWrapper--inline': inline\n        })}\n        style={buildStyle(style, data)}\n      >\n        {render('body', body)}\n      </Comp>\n    );\n  }\n\n  render() {\n    const {\n      classPrefix: ns,\n      classnames: cx,\n      tooltipClassName,\n      tooltipTheme,\n      container,\n      placement,\n      rootClose,\n      tooltipStyle,\n      title,\n      content,\n      tooltip,\n      mouseEnterDelay,\n      mouseLeaveDelay,\n      trigger,\n      offset,\n      showArrow,\n      disabled,\n      enterable,\n      data\n    } = this.props;\n\n    const tooltipObj: TooltipObject = {\n      title: filter(title, data),\n      content: filter(content || tooltip, data),\n      style: buildStyle(tooltipStyle, data),\n      placement,\n      trigger,\n      rootClose,\n      container,\n      tooltipTheme,\n      tooltipClassName,\n      mouseEnterDelay,\n      mouseLeaveDelay,\n      offset,\n      showArrow,\n      disabled,\n      enterable\n    };\n\n    return (\n      <TooltipWrapperComp classPrefix={ns} classnames={cx} tooltip={tooltipObj}>\n        {this.renderBody()}\n      </TooltipWrapperComp>\n    );\n  }\n}\n\n@Renderer({\n  type: 'tooltip-wrapper'\n})\nexport class TooltipWrapperRenderer extends TooltipWrapper {}\n"
    ]
}