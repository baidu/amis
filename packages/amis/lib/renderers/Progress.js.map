{
    "version": 3,
    "file": "Progress.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Progress.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AAGnD,0CAAqE;AAGrE,iFAA8C;AA2E9C;IAAmC,8CAAsC;IAAzE;;IA2DA,CAAC;IA9CC,8BAAM,GAAN,UAAO,KAAa;QACZ,IAAA,KAA2B,IAAI,CAAC,KAAK,EAApC,QAAQ,cAAA,EAAE,MAAM,YAAA,EAAE,IAAI,UAAc,CAAC;QAC5C,OAAO,MAAM,CAAC,gBAAgB,EAAE,QAAQ,IAAI,WAAW,EAAE;YACvD,IAAI,EAAE,IAAA,qBAAY,EAAC,IAAI,EAAE,EAAC,KAAK,OAAA,EAAC,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN;QACQ,IAAA,KAaF,IAAI,CAAC,KAAK,EAZZ,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,GAAG,SAAA,EACH,MAAM,YAAA,EACN,OAAO,aAAA,EACP,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,SAAS,eAAA,EACT,WAAW,iBAAA,EACC,EAAE,gBACF,CAAC;QAEf,IAAI,KAAK,GAAG,IAAA,qBAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC7B,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,OAAO,CACL,8BAAC,kBAAQ,IACP,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,GAAG,EACR,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,SAAS,EACpB,iBAAiB,EAAE,iBAAiB,GACpC,CACH,CAAC;IACJ,CAAC;IAzDM,0BAAY,GAAG;QACpB,WAAW,EAAE,GAAG;QAChB,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,EAAE;QACxB,GAAG,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC;QACvE,QAAQ,EAAE,WAAW;QACrB,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,KAAK;QACb,OAAO,EAAE,KAAK;KACf,CAAC;IAGF;QADC,iBAAQ;;;;+CAMR;IAyCH,oBAAC;CAAA,AA3DD,CAAmC,eAAK,CAAC,SAAS,GA2DjD;AA3DY,sCAAa;AAgE1B;IAA2C,sDAAa;IAAxD;;IAA0D,CAAC;IAA9C,qBAAqB;QAHjC,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,qBAAqB,CAAyB;IAAD,4BAAC;CAAA,AAA3D,CAA2C,aAAa,GAAG;AAA9C,sDAAqB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport cx from 'classnames';\nimport {BaseSchema, SchemaClassName} from '../Schema';\nimport {autobind, getPropValue, createObject} from '../utils/helper';\nimport {filter} from '../utils/tpl';\n\nimport Progress from '../components/Progress';\nimport {ColorMapType} from '../components/Progress';\n\n/**\n * 进度展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/progress\n */\nexport interface ProgressSchema extends BaseSchema {\n  type: 'progress';\n\n  /**\n   * 关联字段名。\n   */\n  name?: string;\n\n  /**\n   * 进度条类型。\n   */\n  mode: 'line' | 'circle' | 'dashboard';\n\n  /**\n   * 进度条 CSS 类名\n   */\n  progressClassName?: SchemaClassName;\n\n  /**\n   * 配置不同的值段，用不同的样式提示用户\n   */\n  map?: ColorMapType;\n\n  /**\n   * 是否显示值\n   */\n  showLabel?: boolean;\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n\n  /**\n   * 是否显示背景间隔\n   */\n  stripe?: boolean;\n\n  /**\n   * 是否显示动画（只有在开启的时候才能看出来）\n   */\n  animate?: boolean;\n\n  /**\n   * 进度条线的宽度\n   */\n  strokeWidth?: number;\n\n  /**\n   * 仪表盘进度条缺口角度，可取值 0 ~ 295\n   */\n  gapDegree?: number;\n\n  /**\n   * 仪表盘进度条缺口位置\n   */\n  gapPosition?: 'top' | 'bottom' | 'left' | 'right';\n\n  /**\n   * 内容的模板函数\n   */\n  valueTpl?: string;\n}\n\nexport interface ProgressProps\n  extends RendererProps,\n    Omit<ProgressSchema, 'type' | 'className'> {}\n\nexport class ProgressField extends React.Component<ProgressProps, object> {\n  static defaultProps = {\n    placeholder: '-',\n    progressClassName: '',\n    progressBarClassName: '',\n    map: ['bg-danger', 'bg-warning', 'bg-info', 'bg-success', 'bg-success'],\n    valueTpl: '${value}%',\n    showLabel: true,\n    stripe: false,\n    animate: false\n  };\n\n  @autobind\n  format(value: number) {\n    const {valueTpl, render, data} = this.props;\n    return render(`progress-value`, valueTpl || '${value}%', {\n      data: createObject(data, {value})\n    });\n  }\n\n  render() {\n    const {\n      mode,\n      className,\n      placeholder,\n      progressClassName,\n      map,\n      stripe,\n      animate,\n      showLabel,\n      strokeWidth,\n      gapDegree,\n      gapPosition,\n      classnames: cx\n    } = this.props;\n\n    let value = getPropValue(this.props);\n\n    if (/^\\d*\\.?\\d+$/.test(value)) {\n      value = parseFloat(value);\n    }\n    return (\n      <Progress\n        value={value}\n        type={mode}\n        map={map}\n        stripe={stripe}\n        animate={animate}\n        showLabel={showLabel}\n        placeholder={placeholder}\n        format={this.format}\n        strokeWidth={strokeWidth}\n        gapDegree={gapDegree}\n        gapPosition={gapPosition}\n        className={className}\n        progressClassName={progressClassName}\n      />\n    );\n  }\n}\n\n@Renderer({\n  type: 'progress'\n})\nexport class ProgressFieldRenderer extends ProgressField {}\n"
    ]
}