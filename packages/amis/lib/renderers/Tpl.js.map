{
    "version": 3,
    "file": "Tpl.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Tpl.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\nimport {anyChanged, getPropValue} from '../utils/helper';\nimport {escapeHtml} from '../utils/tpl-builtin';\nimport {BaseSchema, SchemaTpl} from '../Schema';\nimport {BadgeSchema, withBadge} from '../components/Badge';\nimport {buildStyle} from '../utils/style';\n\n/**\n * tpl 渲染器\n */\nexport interface TplSchema extends BaseSchema {\n  /**\n   * 指定为模板渲染器。\n   *\n   * 文档：https://baidu.gitee.io/amis/docs/concepts/template\n   */\n  type: 'tpl' | 'html';\n\n  tpl?: SchemaTpl;\n  html?: SchemaTpl;\n  text?: SchemaTpl;\n  raw?: string;\n\n  /**\n   * 是否内联显示？\n   */\n  inline?: boolean;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n\n  /**\n   * 角标\n   */\n  badge?: BadgeSchema;\n}\n\nexport interface TplProps extends RendererProps, TplSchema {\n  className?: string;\n  value?: string;\n  wrapperComponent?: any;\n  inline?: boolean;\n}\n\nexport class Tpl extends React.Component<TplProps, object> {\n  static defaultProps: Partial<TplProps> = {\n    inline: true,\n    placeholder: ''\n  };\n\n  dom: any;\n\n  constructor(props: TplProps) {\n    super(props);\n    this.htmlRef = this.htmlRef.bind(this);\n  }\n\n  componentDidUpdate(prevProps: TplProps) {\n    if (\n      anyChanged(\n        ['data', 'tpl', 'html', 'text', 'raw', 'value'],\n        this.props,\n        prevProps\n      )\n    ) {\n      this._render();\n    }\n  }\n\n  htmlRef(dom: any) {\n    this.dom = dom;\n    this._render();\n  }\n\n  getContent() {\n    const {tpl, html, text, raw, data, placeholder} = this.props;\n    const value = getPropValue(this.props);\n\n    if (raw) {\n      return raw;\n    } else if (html) {\n      return filter(html, data);\n    } else if (tpl) {\n      return filter(tpl, data);\n    } else if (text) {\n      return escapeHtml(filter(text, data));\n    } else {\n      return value == null || value === ''\n        ? `<span class=\"text-muted\">${placeholder}</span>`\n        : typeof value === 'string'\n        ? value\n        : JSON.stringify(value);\n    }\n  }\n\n  _render() {\n    if (!this.dom) {\n      return;\n    }\n\n    this.dom.firstChild.innerHTML = this.props.env.filterHtml(\n      this.getContent()\n    );\n  }\n\n  render() {\n    const {\n      className,\n      wrapperComponent,\n      inline,\n      classnames: cx,\n      style,\n      data\n    } = this.props;\n    const Component = wrapperComponent || (inline ? 'span' : 'div');\n\n    return (\n      <Component\n        ref={this.htmlRef}\n        className={cx('TplField', className)}\n        style={buildStyle(style, data)}\n      >\n        <span>{this.getContent()}</span>\n      </Component>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:tpl|html)$/,\n  name: 'tpl'\n})\n// @ts-ignore 类型没搞定\n@withBadge\nexport class TplRenderer extends Tpl {}\n"
    ]
}