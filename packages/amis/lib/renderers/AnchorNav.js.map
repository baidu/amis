{
    "version": 3,
    "file": "AnchorNav.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/AnchorNav.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {\n  AnchorNav as CAnchorNav,\n  AnchorNavSection\n} from '../components/AnchorNav';\nimport {isVisible, autobind} from '../utils/helper';\nimport {filter} from '../utils/tpl';\nimport find from 'lodash/find';\nimport {BaseSchema, SchemaClassName, SchemaCollection} from '../Schema';\n\n/**\n * AnchorNavSection 锚点区域渲染器\n * 文档：https://baidu.gitee.io/amis/docs/components/anchor-nav\n */\n\nexport type AnchorNavSectionSchema = {\n  /**\n   * 导航文字说明\n   */\n  title: string;\n\n  /**\n   * 锚点链接\n   */\n  href?: string;\n\n  /**\n   * 内容\n   */\n  body?: SchemaCollection;\n} & Omit<BaseSchema, 'type'>;\n\n/**\n * AnchorNav 锚点导航渲染器\n * 文档：https://baidu.gitee.io/amis/docs/components/anchor-nav\n */\nexport interface AnchorNavSchema extends BaseSchema {\n  /**\n   * 指定为 AnchorNav 锚点导航渲染器\n   */\n  type: 'anchor-nav';\n\n  /**\n   * 楼层集合\n   */\n  links: Array<AnchorNavSectionSchema>;\n\n  /**\n   * 被激活（定位）的楼层\n   */\n  active?: string | number;\n\n  /**\n   * 样式名\n   */\n  className?: SchemaClassName;\n\n  /**\n   * 导航样式名\n   */\n  linkClassName?: SchemaClassName;\n\n  /**\n   * 楼层样式名\n   */\n  sectionClassName?: SchemaClassName;\n\n  direction?: 'vertical' | 'horizontal';\n}\n\nexport interface AnchorNavProps\n  extends RendererProps,\n    Omit<AnchorNavSchema, 'className' | 'linkClassName' | 'sectionClassName'> {\n  active?: string | number;\n  sectionRender?: (\n    section: AnchorNavSectionSchema,\n    props: AnchorNavProps,\n    index: number\n  ) => JSX.Element;\n}\n\nexport interface AnchorNavState {\n  active: any;\n}\n\nexport default class AnchorNav extends React.Component<\n  AnchorNavProps,\n  AnchorNavState\n> {\n  static defaultProps: Partial<AnchorNavProps> = {\n    className: '',\n    linkClassName: '',\n    sectionClassName: ''\n  };\n\n  renderSection?: (\n    section: AnchorNavSectionSchema,\n    props: AnchorNavProps,\n    index: number\n  ) => JSX.Element;\n\n  constructor(props: AnchorNavProps) {\n    super(props);\n\n    // 设置默认激活项\n    const links = props.links;\n    let active: any = 0;\n\n    if (typeof props.active !== 'undefined') {\n      active = props.active;\n    } else {\n      const section: AnchorNavSectionSchema = find(\n        links,\n        section => section.href === props.active\n      ) as AnchorNavSectionSchema;\n      active =\n        section && section.href\n          ? section.href\n          : (links[0] && links[0].href) || 0;\n    }\n\n    this.state = {\n      active\n    };\n  }\n\n  @autobind\n  handleSelect(key: any) {\n    this.setState({\n      active: key\n    });\n  }\n\n  @autobind\n  locateTo(index: number) {\n    const {links} = this.props;\n\n    Array.isArray(links) &&\n      links[index] &&\n      this.setState({\n        active: links[index].href || index\n      });\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      classPrefix: ns,\n      className,\n      linkClassName,\n      sectionClassName,\n      direction,\n      sectionRender,\n      render,\n      data\n    } = this.props;\n\n    let links = this.props.links;\n    if (!links) {\n      return null;\n    }\n\n    links = Array.isArray(links) ? links : [links];\n    let children: Array<JSX.Element | null> = [];\n\n    children = links.map((section, index) =>\n      isVisible(section, data) ? (\n        <AnchorNavSection\n          {...(section as any)}\n          title={filter(section.title, data)}\n          key={index}\n          name={section.href || index}\n        >\n          {this.renderSection\n            ? this.renderSection(section, this.props, index)\n            : sectionRender\n            ? sectionRender(section, this.props, index)\n            : render(`section/${index}`, section.body || '')}\n        </AnchorNavSection>\n      ) : null\n    );\n\n    return (\n      <CAnchorNav\n        classPrefix={ns}\n        classnames={cx}\n        className={className}\n        linkClassName={linkClassName}\n        sectionClassName={sectionClassName}\n        onSelect={this.handleSelect}\n        active={this.state.active}\n        direction={direction}\n      >\n        {children}\n      </CAnchorNav>\n    );\n  }\n}\n\n@Renderer({\n  type: 'anchor-nav'\n})\nexport class AnchorNavRenderer extends AnchorNav {}\n"
    ]
}