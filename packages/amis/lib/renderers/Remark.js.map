{
    "version": 3,
    "file": "Remark.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Remark.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Api, SchemaNode, Schema, Action} from '../types';\nimport cx from 'classnames';\nimport TooltipWrapper, {TooltipObject} from '../components/TooltipWrapper';\nimport {filter} from '../utils/tpl';\nimport {ClassNamesFn, themeable} from '../theme';\nimport {hasIcon, Icon} from '../components/icons';\nimport {BaseSchema, SchemaClassName, SchemaIcon, SchemaTpl} from '../Schema';\nimport {autobind, isMobile} from '../utils/helper';\n\n/**\n * 提示渲染器，默认会显示个小图标，鼠标放上来的时候显示配置的内容。\n */\nexport interface RemarkSchema extends BaseSchema {\n  /**\n   * 指定为提示类型\n   */\n  type: 'remark';\n\n  label?: string;\n\n  icon?: SchemaIcon;\n\n  tooltipClassName?: SchemaClassName;\n\n  /**\n   * 触发规则\n   */\n  trigger?: Array<'click' | 'hover' | 'focus'>;\n\n  /**\n   * 提示标题\n   */\n  title?: string;\n\n  /**\n   * 提示内容\n   */\n  content: SchemaTpl;\n\n  /**\n   * 显示位置\n   */\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n\n  /**\n   * 点击其他内容时是否关闭弹框信息\n   */\n  rootClose?: boolean;\n\n  /**\n   * icon的形状\n   */\n  shape?: 'circle' | 'square'; \n}\n\nexport type SchemaRemark = string | Omit<RemarkSchema, 'type'>;\n\nexport function filterContents(\n  tooltip:\n    | string\n    | undefined\n    | {title?: string; children?: any; content?: string; body?: string},\n  data: any\n) {\n  if (typeof tooltip === 'string') {\n    return filter(tooltip, data);\n  } else if (tooltip) {\n    return tooltip.title\n      ? {\n          children: tooltip?.children,\n          title: filter(tooltip.title, data),\n          content:\n            tooltip.content || tooltip.body\n              ? filter(tooltip.content || tooltip.body || '', data)\n              : undefined\n        }\n      : tooltip.content || tooltip.body\n      ? filter(tooltip.content || tooltip.body || '', data)\n      : undefined;\n  }\n  return tooltip;\n}\n\nexport interface RemarkProps\n  extends RendererProps,\n    Omit<RemarkSchema, 'type' | 'className'> {\n  icon: string;\n  trigger: Array<'hover' | 'click' | 'focus'>;\n}\n\nclass Remark extends React.Component<RemarkProps> {\n  static propsList: Array<string> = [];\n  static defaultProps = {\n    icon: '',\n    trigger: ['hover', 'focus'] as Array<'hover' | 'click' | 'focus'>\n  };\n\n  @autobind\n  showModalTip(tooltip?: string | TooltipObject) {\n    let {onAction, data} = this.props;\n    return (e: React.MouseEvent) => {\n      onAction &&\n        onAction(\n          e,\n          {\n            actionType: 'dialog',\n            dialog: {\n              title:\n                tooltip && typeof tooltip !== 'string' ? tooltip.title : '',\n              body:\n                tooltip && typeof tooltip !== 'string'\n                  ? tooltip.content\n                  : tooltip,\n              actions: []\n            }\n          },\n          data\n        );\n    };\n  }\n\n  renderLabel(finalIcon: any, finalLabel: string, cx: ClassNamesFn, shape?: 'circle'|'square') {\n\n    const shapeClass = shape ? `Remark-icon--${shape}` : undefined;\n\n    return (\n      <>\n        {finalLabel ? <span>{finalLabel}</span> : null}\n        {finalIcon ? (\n          hasIcon(finalIcon) ? (\n            <span className={cx('Remark-icon', shapeClass)}>\n              <Icon icon={finalIcon} />\n            </span>\n          ) : (\n            <i className={cx('Remark-icon', finalIcon)} />\n          )\n        ) : finalIcon === false && finalLabel ? null : (\n          <span className={cx('Remark-icon icon', shapeClass)}>\n            <Icon icon=\"question-mark\" />\n          </span>\n        )}\n      </>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      icon,\n      label,\n      shape,\n      tooltip,\n      placement,\n      rootClose,\n      trigger,\n      container,\n      classPrefix: ns,\n      classnames: cx,\n      content,\n      data,\n      env,\n      tooltipClassName,\n      useMobileUI\n    } = this.props;\n\n    const finalIcon = tooltip?.icon ?? icon;\n    const finalLabel = tooltip?.label ?? label;\n    const parsedTip = filterContents(tooltip || content, data);\n\n    // 移动端使用弹框提示\n    if (isMobile() && useMobileUI) {\n      return (\n        <div\n          className={cx(\n            `Remark`,\n            (tooltip && tooltip.className) || className || `Remark--warning`\n          )}\n          onClick={this.showModalTip(parsedTip)}\n        >\n          {this.renderLabel(finalIcon, finalLabel, cx, shape)}\n        </div>\n      );\n    }\n\n    return (\n      <TooltipWrapper\n        classPrefix={ns}\n        classnames={cx}\n        tooltip={parsedTip}\n        tooltipClassName={\n          (tooltip && tooltip.tooltipClassName) || tooltipClassName\n        }\n        placement={(tooltip && tooltip.placement) || placement}\n        rootClose={(tooltip && tooltip.rootClose) || rootClose}\n        trigger={(tooltip && tooltip.trigger) || trigger}\n        container={container || env.getModalContainer}\n        delay={tooltip && tooltip.delay}\n      >\n        <div\n          className={cx(\n            `Remark`,\n            (tooltip && tooltip.className) || className || `Remark--warning`\n          )}\n        >\n          {this.renderLabel(finalIcon, finalLabel, cx, shape)}\n        </div>\n      </TooltipWrapper>\n    );\n  }\n}\n\nexport default themeable(Remark);\n\n@Renderer({\n  type: 'remark'\n})\nexport class RemarkRenderer extends Remark {}\n"
    ]
}