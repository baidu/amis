{
    "version": 3,
    "file": "Alert.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Alert.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,sCAAmD;AACnD,6DAA0B;AAC1B,6EAAuD;AAOvD,oDAA8E;AAwD9E;IAAiC,4CAA2C;IAA5E;;IAmBA,CAAC;IAlBC,4BAAM,GAAN;QACE,IAAI,KAAiD,IAAI,CAAC,KAAK,EAA1D,MAAM,YAAA,EAAE,IAAI,UAAA,EAAE,KAAK,WAAA,EAAE,IAAI,UAAA,EAAE,QAAQ,cAAA,EAAK,IAAI,2BAA7C,+CAA8C,CAAa,CAAC;QAChE,IAAI,IAAA,4BAAc,EAAC,KAAK,CAAC,EAAE;YACzB,KAAK,GAAG,IAAA,sCAAwB,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC1D;QACD,IAAI,IAAA,4BAAc,EAAC,IAAI,CAAC,EAAE;YACxB,IAAI,GAAG,IAAA,sCAAwB,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACxD;QACD,IAAI,IAAA,4BAAc,EAAC,QAAQ,CAAC,EAAE;YAC5B,QAAQ,GAAG,IAAA,sCAAwB,EAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAChE;QAED,OAAO,CACL,8BAAC,gBAAK,4BAAK,IAAI,IAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,KAC1D,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CACf,CACT,CAAC;IACJ,CAAC;IAlBU,WAAW;QAHvB,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,OAAO;SACd,CAAC;OACW,WAAW,CAmBvB;IAAD,kBAAC;CAAA,AAnBD,CAAiC,eAAK,CAAC,SAAS,GAmB/C;AAnBY,kCAAW",
    "sourcesContent": [
        "import {Renderer, RendererProps} from '../factory';\nimport React from 'react';\nimport Alert, {AlertProps} from '../components/Alert2';\nimport {\n  BaseSchema,\n  SchemaObject,\n  SchemaCollection,\n  SchemaIcon\n} from '../Schema';\nimport {isPureVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\n\n/**\n * Alert 提示渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/alert\n */\nexport interface AlertSchema extends BaseSchema {\n  /**\n   * 指定为提示框类型\n   */\n  type: 'alert';\n\n  /**\n   * 提示框标题\n   */\n  title?: string;\n\n  /**\n   * 内容区域\n   */\n  body: SchemaCollection;\n\n  /**\n   * 提示类型\n   */\n  level?: 'info' | 'warning' | 'success' | 'error' | 'danger';\n\n  /**\n   * 是否显示关闭按钮\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * 关闭按钮CSS类名\n   */\n  closeButtonClassName?: string;\n\n  /**\n   * 是否显示ICON\n   */\n  showIcon?: boolean;\n\n  /**\n   * 左侧图标\n   */\n  icon?: SchemaIcon;\n\n  /**\n   * 图标CSS类名\n   */\n  iconClassName?: string;\n}\n\n@Renderer({\n  type: 'alert'\n})\nexport class TplRenderer extends React.Component<AlertProps & RendererProps> {\n  render() {\n    let {render, body, level, icon, showIcon, ...rest} = this.props;\n    if (isPureVariable(level)) {\n      level = resolveVariableAndFilter(level, this.props.data);\n    }\n    if (isPureVariable(icon)) {\n      icon = resolveVariableAndFilter(icon, this.props.data);\n    }\n    if (isPureVariable(showIcon)) {\n      showIcon = resolveVariableAndFilter(showIcon, this.props.data);\n    }\n\n    return (\n      <Alert {...rest} level={level} icon={icon} showIcon={showIcon}>\n        {render('body', body)}\n      </Alert>\n    );\n  }\n}\n"
    ]
}