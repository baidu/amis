{
    "version": 3,
    "file": "Image.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Image.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AACnD,oCAAoC;AACpC,kCAA6D;AAC7D,0CAAuD;AACvD,6CAAyC;AACzC,oCAAkD;AAGlD,oFAAiD;AA6HjD;IAAgC,2CAAgC;IAAhE;;IAgIA,CAAC;IA9HC,kCAAa,GAAb;QACE,IAAM,KAAuB,IAAI,CAAC,KAAK,EAAhC,SAAS,eAAA,EAAK,IAAI,2BAAnB,aAAoB,CAAa,CAAC;QACxC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,2BAAM,GAAN;QACQ,IAAA,KAqBF,IAAI,CAAC,KAAK,EApBA,EAAE,gBAAA,EACd,SAAS,eAAA,EACT,cAAc,oBAAA,EACd,cAAc,oBAAA,EACd,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,KAAK,WAAA,EACL,GAAG,SAAA,EACH,GAAG,SAAA,EACH,KAAK,WAAA,EACL,OAAO,aAAA,EACP,IAAI,UAAA,EACJ,aAAY,EAAZ,KAAK,mBAAG,IAAI,KAAA,EACZ,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,WAAW,iBAAA,EACA,EAAE,eAAA,EACb,QAAQ,cAAA,EACR,SAAS,eACG,CAAC;QAEf,IAAM,OAAO,GACX,WAAW,IAAI,QAAQ,CAAC,CAAC,CAAC,CACxB,uCAAK,GAAG,EAAC,SAAS,EAAC,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC;YAC9C,WAAW,CAAC,CAAC,CAAC,CACb,qDACgB,EAAE,CAAC,cAAc,CAAC,mBAClB,QAAQ,EACtB,MAAM,EAAC,QAAQ,EACf,OAAO,EAAE,IAAI,CAAC,aAAa;gBAE3B,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG,CACnC,CACL,CAAC,CAAC,CAAC,IAAI;YACP,QAAQ,CACL,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;QAEX,IAAI,KAAK,GAAG,CACV,uCACE,SAAS,EAAE,EAAE,CACX,OAAO,EACP,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,cAAc,EAC7D,SAAS,CACV;YAEA,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,CAC1B,uCACE,SAAS,EAAE,EAAE,CACX,cAAc,EACd,SAAS,CAAC,CAAC,CAAC,wBAAiB,SAAS,CAAE,CAAC,CAAC,CAAC,EAAE,CAC9C,EACD,KAAK,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAC;gBAErC,uCACE,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,EAC5C,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,GACR;gBACD,OAAO,CACJ,CACP,CAAC,CAAC,CAAC,CACF,uCAAK,SAAS,EAAE,EAAE,CAAC,iBAAiB,CAAC;gBACnC,uCACE,SAAS,EAAE,EAAE,CACX,aAAa,EACb,cAAc,EACd,SAAS,CAAC,CAAC,CAAC,uBAAgB,SAAS,CAAE,CAAC,CAAC,CAAC,EAAE,EAC5C,UAAU;wBACR,CAAC,CAAC,uBAAgB,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAE;wBACjD,CAAC,CAAC,EAAE,CACP,EACD,KAAK,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAC;oBAErC,uCACE,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,EAC5C,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,GACR,CACE;gBACL,OAAO,CACJ,CACP;YAEA,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAClB,uCAAK,GAAG,EAAC,SAAS,EAAC,SAAS,EAAE,EAAE,CAAC,YAAY,CAAC;gBAC3C,KAAK,CAAC,CAAC,CAAC,CACP,uCAAK,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,KAAK,IAC5C,KAAK,CACF,CACP,CAAC,CAAC,CAAC,IAAI;gBACP,OAAO,CAAC,CAAC,CAAC,CACT,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,OAAO,IAChD,OAAO,CACJ,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;QAEF,IAAI,IAAI,EAAE;YACR,KAAK,GAAG,CACN,qCACE,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,UAAU,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,EAClD,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,EAChC,KAAK,EAAE,KAAK,IAEX,KAAK,CACJ,CACL,CAAC;SACH;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IA7HD;QADC,iBAAQ;;;;mDAIR;IA2HH,iBAAC;CAAA,AAhID,CAAgC,eAAK,CAAC,SAAS,GAgI9C;AAhIY,gCAAU;AAiIvB,IAAM,gBAAgB,GAAG,IAAA,iBAAS,EAAC,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC,CAAC;AAC3D,kBAAe,gBAAgB,CAAC;AAEnB,QAAA,gBAAgB,GAAG,u8BAAu8B,CAAC;AA2Bx+B;IAAgC,2CAAwC;IAAxE;;IA0GA,CAAC;IA9FC,kCAAa,GAAb,UAAc,EAOI;YANhB,GAAG,SAAA,EACH,WAAW,iBAAA,EACX,KAAK,WAAA,EACL,OAAO,aAAA,EACP,SAAS,eAAA,EACT,UAAU,gBAAA;QAEJ,IAAA,KAAiD,IAAI,CAAC,KAAK,EAA1D,cAAc,oBAAA,EAAE,YAAY,kBAAA,EAAE,cAAc,oBAAc,CAAC;QAElE,cAAc;YACZ,cAAc,CACZ;gBACE,GAAG,EAAE,GAAI;gBACT,WAAW,EAAE,WAAW,IAAI,GAAI;gBAChC,KAAK,EAAE,YAAY,IAAI,KAAK;gBAC5B,OAAO,EAAE,cAAc,IAAI,OAAO;gBAClC,SAAS,WAAA;gBACT,UAAU,YAAA;aACX,EACD,IAAI,CAAC,KAAK,CACX,CAAC;IACN,CAAC;IAGD,gCAAW,GAAX,UAAY,CAAgC;QAC1C,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QAC3C,IAAI,WAAW,EAAE;YACf,IAAA,sBAAY,EAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,2BAAM,GAAN;;QACQ,IAAA,KAmBF,IAAI,CAAC,KAAK,EAlBZ,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,YAAY,kBAAA,EACZ,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,cAAc,oBAAA,EACd,cAAc,oBAAA,EACd,MAAM,YAAA,EACN,KAAK,WAAA,EACO,EAAE,gBAAA,EACd,GAAG,SAAA,EACH,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,SAAS,eACG,CAAC;QAEf,IAAM,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,IAAA,YAAM,EAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxD,IAAI,KAAK,GACP,SAAS,IAAI,IAAA,qBAAY,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,YAAY,IAAI,wBAAgB,CAAC;QAE5E,IAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,IAAA,YAAM,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3D,OAAO,CACL,uCACE,SAAS,EAAE,EAAE,CACX,YAAY,EACZ,SAAS,KAAK,UAAU;gBACtB,CAAC,CAAC,sBAAsB;gBACxB,CAAC,CAAC,mBAAmB,EACvB,SAAS,CACV,EACD,OAAO,EAAE,IAAI,CAAC,WAAW,IAExB,KAAK,CAAC,CAAC,CAAC,CACP,8BAAC,gBAAgB,IACf,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,EAC9B,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,KAAK,EACV,IAAI,EAAE,UAAU,EAChB,KAAK,EAAE,IAAA,YAAM,EAAC,KAAK,EAAE,IAAI,CAAC,EAC1B,OAAO,EAAE,IAAA,YAAM,EAAC,YAAY,EAAE,IAAI,CAAC,EACnC,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,MAAA,IAAA,YAAM,EAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,mCAAI,KAAK,EACxD,WAAW,EAAE,WAAW,IAAI,KAAK,KAAK,YAAY,EAClD,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,SAAS,EAAE,SAAS,GACpB,CACH,CAAC,CAAC,CAAC,CACF,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CACG,CACP,CAAC;IACJ,CAAC;;IAxGM,uBAAY,GAGf;QACF,YAAY,EAAE,wBAAgB;QAC9B,SAAS,EAAE,SAAS;QACpB,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,GAAG;KACjB,CAAC;IAGF;QADC,iBAAQ;;;;mDAuBR;IAGD;QADC,iBAAQ;;0EACM,eAAK,oBAAL,eAAK,CAAC,UAAU;;iDAK9B;IAgEH,iBAAC;CAAA,AA1GD,CAAgC,eAAK,CAAC,SAAS,GA0G9C;AA1GY,gCAAU;AA+GvB;IAAwC,mDAAU;IAAlD;;IAAoD,CAAC;IAAxC,kBAAkB;QAH9B,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,OAAO;SACd,CAAC;OACW,kBAAkB,CAAsB;IAAD,yBAAC;CAAA,AAArD,CAAwC,UAAU,GAAG;AAAxC,gDAAkB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {autobind, getPropValue} from '../utils/helper';\nimport {Icon} from '../components/icons';\nimport {LocaleProps, localeable} from '../locale';\nimport {BaseSchema, SchemaClassName, SchemaTpl, SchemaUrlPath} from '../Schema';\nimport {resolveVariable} from '../utils/tpl-builtin';\nimport handleAction from '../utils/handleAction';\n\n/**\n * 图片展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/image\n */\nexport interface ImageSchema extends BaseSchema {\n  /**\n   * 指定为图片展示类型\n   */\n  type: 'image' | 'static-image';\n\n  /**\n   * 默认图片地址\n   */\n  defaultImage?: SchemaUrlPath;\n\n  /**\n   * 图片标题\n   */\n  title?: SchemaTpl;\n\n  /**\n   * 关联字段名，也可以直接配置 src\n   */\n  name?: string;\n\n  /**\n   * 图片描述信息\n   */\n  imageCaption?: SchemaTpl;\n\n  /**\n   * 图片地址，如果配置了 name，这个属性不用配置。\n   */\n  src?: SchemaUrlPath;\n\n  /**\n   * 大图地址，不设置用 src\n   */\n  originalSrc?: SchemaUrlPath;\n\n  /**\n   * 是否启动放大功能。\n   */\n  enlargeAble?: boolean;\n\n  /**\n   * 是否显示尺寸。\n   */\n  // showDimensions?: boolean;\n\n  /**\n   * 图片无法显示时的替换文本\n   */\n  alt?: string;\n\n  /**\n   * 高度\n   */\n  height?: number;\n\n  /**\n   * 宽度\n   */\n  width?: number;\n\n  /**\n   * 图片 css 类名\n   */\n  imageClassName?: SchemaClassName;\n\n  /**\n   * 外层 css 类名\n   */\n  className?: SchemaClassName;\n\n  /**\n   * 图片缩率图外层 css 类名\n   */\n  thumbClassName?: SchemaClassName;\n\n  caption?: SchemaTpl;\n\n  /**\n   * 图片展示模式，默认为缩略图模式、可以配置成原图模式\n   */\n  imageMode?: 'thumb' | 'original';\n\n  /**\n   * 预览图模式\n   */\n  thumbMode?: 'w-full' | 'h-full' | 'contain' | 'cover';\n\n  /**\n   * 预览图比率\n   */\n  thumbRatio?: '1:1' | '4:3' | '16:9';\n\n  /**\n   * 链接地址\n   */\n  href?: SchemaTpl;\n\n  /**\n   * 是否新窗口打开\n   */\n  blank?: boolean;\n\n  /**\n   * 链接的 target\n   */\n  htmlTarget?: string;\n}\n\nexport interface ImageThumbProps\n  extends LocaleProps,\n    ThemeProps,\n    Omit<ImageSchema, 'type' | 'className'> {\n  onEnlarge?: (info: ImageThumbProps) => void;\n  index?: number;\n  onLoad?: React.EventHandler<any>;\n  overlays?: JSX.Element;\n}\n\nexport class ImageThumb extends React.Component<ImageThumbProps> {\n  @autobind\n  handleEnlarge() {\n    const {onEnlarge, ...rest} = this.props;\n    onEnlarge && onEnlarge(rest);\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      className,\n      imageClassName,\n      thumbClassName,\n      thumbMode,\n      thumbRatio,\n      height,\n      width,\n      src,\n      alt,\n      title,\n      caption,\n      href,\n      blank = true,\n      htmlTarget,\n      onLoad,\n      enlargeAble,\n      translate: __,\n      overlays,\n      imageMode\n    } = this.props;\n\n    const enlarge =\n      enlargeAble || overlays ? (\n        <div key=\"overlay\" className={cx('Image-overlay')}>\n          {enlargeAble ? (\n            <a\n              data-tooltip={__('Image.zoomIn')}\n              data-position=\"bottom\"\n              target=\"_blank\"\n              onClick={this.handleEnlarge}\n            >\n              <Icon icon=\"view\" className=\"icon\" />\n            </a>\n          ) : null}\n          {overlays}\n        </div>\n      ) : null;\n\n    let image = (\n      <div\n        className={cx(\n          'Image',\n          imageMode === 'original' ? 'Image--original' : 'Image--thumb',\n          className\n        )}\n      >\n        {imageMode === 'original' ? (\n          <div\n            className={cx(\n              'Image-origin',\n              thumbMode ? `Image-origin--${thumbMode}` : ''\n            )}\n            style={{height: height, width: width}}\n          >\n            <img\n              onLoad={onLoad}\n              className={cx('Image-image', imageClassName)}\n              src={src}\n              alt={alt}\n            />\n            {enlarge}\n          </div>\n        ) : (\n          <div className={cx('Image-thumbWrap')}>\n            <div\n              className={cx(\n                'Image-thumb',\n                thumbClassName,\n                thumbMode ? `Image-thumb--${thumbMode}` : '',\n                thumbRatio\n                  ? `Image-thumb--${thumbRatio.replace(/:/g, '-')}`\n                  : ''\n              )}\n              style={{height: height, width: width}}\n            >\n              <img\n                onLoad={onLoad}\n                className={cx('Image-image', imageClassName)}\n                src={src}\n                alt={alt}\n              />\n            </div>\n            {enlarge}\n          </div>\n        )}\n\n        {title || caption ? (\n          <div key=\"caption\" className={cx('Image-info')}>\n            {title ? (\n              <div className={cx('Image-title')} title={title}>\n                {title}\n              </div>\n            ) : null}\n            {caption ? (\n              <div className={cx('Image-caption')} title={caption}>\n                {caption}\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n\n    if (href) {\n      image = (\n        <a\n          href={href}\n          target={htmlTarget || (blank ? '_blank' : '_self')}\n          className={cx('Link', className)}\n          title={title}\n        >\n          {image}\n        </a>\n      );\n    }\n\n    return image;\n  }\n}\nconst ThemedImageThumb = themeable(localeable(ImageThumb));\nexport default ThemedImageThumb;\n\nexport const imagePlaceholder = `data:image/svg+xml,%3C%3Fxml version='1.0' standalone='no'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg t='1631083237695' class='icon' viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='2420' xmlns:xlink='http://www.w3.org/1999/xlink' width='1024' height='1024'%3E%3Cdefs%3E%3Cstyle type='text/css'%3E%3C/style%3E%3C/defs%3E%3Cpath d='M959.872 128c0.032 0.032 0.096 0.064 0.128 0.128v767.776c-0.032 0.032-0.064 0.096-0.128 0.128H64.096c-0.032-0.032-0.096-0.064-0.128-0.128V128.128c0.032-0.032 0.064-0.096 0.128-0.128h895.776zM960 64H64C28.8 64 0 92.8 0 128v768c0 35.2 28.8 64 64 64h896c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z' p-id='2421' fill='%23bfbfbf'%3E%3C/path%3E%3Cpath d='M832 288c0 53.024-42.976 96-96 96s-96-42.976-96-96 42.976-96 96-96 96 42.976 96 96zM896 832H128V704l224-384 256 320h64l224-192z' p-id='2422' fill='%23bfbfbf'%3E%3C/path%3E%3C/svg%3E`;\n\nexport interface ImageFieldProps extends RendererProps {\n  className?: string;\n  imageClassName?: string;\n  placeholder: string;\n  description?: string;\n  enlargeTitle?: string;\n  enlargeCaption?: string;\n  imageMode?: 'thumb' | 'original';\n  thumbMode: 'w-full' | 'h-full' | 'contain' | 'cover';\n  thumbRatio: '1:1' | '4:3' | '16:9';\n  originalSrc?: string; // 原图\n  enlargeAble?: boolean;\n  onImageEnlarge?: (\n    info: {\n      src: string;\n      originalSrc: string;\n      title?: string;\n      caption?: string;\n      thumbMode?: 'w-full' | 'h-full' | 'contain' | 'cover';\n      thumbRatio?: '1:1' | '4:3' | '16:9';\n    },\n    target: any\n  ) => void;\n}\n\nexport class ImageField extends React.Component<ImageFieldProps, object> {\n  static defaultProps: Pick<\n    ImageFieldProps,\n    'defaultImage' | 'thumbMode' | 'thumbRatio' | 'placeholder'\n  > = {\n    defaultImage: imagePlaceholder,\n    thumbMode: 'contain',\n    thumbRatio: '1:1',\n    placeholder: '-'\n  };\n\n  @autobind\n  handleEnlarge({\n    src,\n    originalSrc,\n    title,\n    caption,\n    thumbMode,\n    thumbRatio\n  }: ImageThumbProps) {\n    const {onImageEnlarge, enlargeTitle, enlargeCaption} = this.props;\n\n    onImageEnlarge &&\n      onImageEnlarge(\n        {\n          src: src!,\n          originalSrc: originalSrc || src!,\n          title: enlargeTitle || title,\n          caption: enlargeCaption || caption,\n          thumbMode,\n          thumbRatio\n        },\n        this.props\n      );\n  }\n\n  @autobind\n  handleClick(e: React.MouseEvent<HTMLElement>) {\n    const clickAction = this.props.clickAction;\n    if (clickAction) {\n      handleAction(e, clickAction, this.props);\n    }\n  }\n\n  render() {\n    const {\n      className,\n      defaultImage,\n      imageCaption,\n      title,\n      data,\n      imageClassName,\n      thumbClassName,\n      height,\n      width,\n      classnames: cx,\n      src,\n      href,\n      thumbMode,\n      thumbRatio,\n      placeholder,\n      originalSrc,\n      enlargeAble,\n      imageMode\n    } = this.props;\n\n    const finnalSrc = src ? filter(src, data, '| raw') : '';\n    let value =\n      finnalSrc || getPropValue(this.props) || defaultImage || imagePlaceholder;\n\n    const finnalHref = href ? filter(href, data, '| raw') : '';\n\n    return (\n      <div\n        className={cx(\n          'ImageField',\n          imageMode === 'original'\n            ? 'ImageField--original'\n            : 'ImageField--thumb',\n          className\n        )}\n        onClick={this.handleClick}\n      >\n        {value ? (\n          <ThemedImageThumb\n            imageClassName={imageClassName}\n            thumbClassName={thumbClassName}\n            height={height}\n            width={width}\n            src={value}\n            href={finnalHref}\n            title={filter(title, data)}\n            caption={filter(imageCaption, data)}\n            thumbMode={thumbMode}\n            thumbRatio={thumbRatio}\n            originalSrc={filter(originalSrc, data, '| raw') ?? value}\n            enlargeAble={enlargeAble && value !== defaultImage}\n            onEnlarge={this.handleEnlarge}\n            imageMode={imageMode}\n          />\n        ) : (\n          <span className=\"text-muted\">{placeholder}</span>\n        )}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'image'\n})\nexport class ImageFieldRenderer extends ImageField {}\n"
    ]
}