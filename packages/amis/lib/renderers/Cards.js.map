{
    "version": 3,
    "file": "Cards.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Cards.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React, {Fragment} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {Renderer, RendererProps} from '../factory';\nimport {SchemaNode, Schema, Action} from '../types';\nimport Button from '../components/Button';\nimport {ListStore, IListStore, IItem} from '../store/list';\nimport {observer} from 'mobx-react';\nimport {\n  anyChanged,\n  getScrollParent,\n  difference,\n  ucFirst,\n  noop\n} from '../utils/helper';\nimport {isPureVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\nimport Sortable from 'sortablejs';\nimport {filter} from '../utils/tpl';\nimport {Icon} from '../components/icons';\nimport {\n  BaseSchema,\n  SchemaClassName,\n  SchemaCollection,\n  SchemaExpression,\n  SchemaTpl,\n  SchemaTokenizeableString\n} from '../Schema';\nimport {CardProps, CardSchema} from './Card';\nimport {Card2Props, Card2Schema} from './Card2';\n\n/**\n * Cards 卡片集合渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/card\n */\nexport interface CardsSchema extends BaseSchema {\n  /**\n   * 指定为 cards 类型\n   */\n  type: 'cards';\n\n  card?: Partial<CardSchema> | Card2Schema;\n\n  /**\n   * 头部 CSS 类名\n   */\n  headerClassName?: SchemaClassName;\n\n  /**\n   * 底部 CSS 类名\n   */\n  footerClassName?: SchemaClassName;\n\n  /**\n   * 卡片 CSS 类名\n   *\n   * @default Grid-col--sm6 Grid-col--md4 Grid-col--lg3\n   */\n  itemClassName?: SchemaClassName;\n\n  /**\n   * 无数据提示\n   *\n   * @default 暂无数据\n   */\n  placeholder?: SchemaTpl;\n\n  /**\n   * 是否显示底部\n   */\n  showFooter?: boolean;\n\n  /**\n   * 是否显示头部\n   */\n  showHeader?: boolean;\n\n  /**\n   * 数据源: 绑定当前环境变量\n   *\n   * @default ${items}\n   */\n  source?: SchemaTokenizeableString;\n\n  /**\n   * 标题\n   */\n  title?: SchemaTpl;\n\n  /**\n   * 是否隐藏勾选框\n   */\n  hideCheckToggler?: boolean;\n\n  /**\n   * 是否固顶\n   */\n  affixHeader?: boolean;\n\n  /**\n   * 顶部区域\n   */\n  header?: SchemaCollection;\n\n  /**\n   * 底部区域\n   */\n  footer?: SchemaCollection;\n\n  /**\n   * 配置某项是否可以点选\n   */\n  itemCheckableOn?: SchemaExpression;\n\n  /**\n   * 配置某项是否可拖拽排序，前提是要开启拖拽功能\n   */\n  itemDraggableOn?: SchemaExpression;\n\n  /**\n   * 点击卡片的时候是否勾选卡片。\n   */\n  checkOnItemClick?: boolean;\n\n  /**\n   * 是否为瀑布流布局？\n   */\n  masonryLayout?: boolean;\n\n  /**\n   * 可以用来作为值的字段\n   */\n  valueField?: string;\n}\n\nexport interface Column {\n  type: string;\n  [propName: string]: any;\n}\n\nexport type CardsRendererEvent = 'change';\nexport type CardsRendererAction = 'check-all';\n\nexport interface GridProps\n  extends RendererProps,\n    Omit<CardsSchema, 'className' | 'itemClassName'> {\n  store: IListStore;\n  selectable?: boolean;\n  selected?: Array<any>;\n  checkAll?: boolean;\n  multiple?: boolean;\n  valueField?: string;\n  draggable?: boolean;\n  onSelect: (\n    selectedItems: Array<object>,\n    unSelectedItems: Array<object>\n  ) => void;\n  onSave?: (\n    items: Array<object> | object,\n    diff: Array<object> | object,\n    rowIndexes: Array<number> | number,\n    unModifiedItems?: Array<object>,\n    rowOrigins?: Array<object> | object,\n    resetOnFailed?: boolean\n  ) => void;\n  onSaveOrder?: (moved: Array<object>, items: Array<object>) => void;\n  onQuery: (values: object) => void;\n}\n\nexport default class Cards extends React.Component<GridProps, object> {\n  static propsList: Array<string> = [\n    'header',\n    'headerToolbarRender',\n    'footer',\n    'footerToolbarRender',\n    'placeholder',\n    'source',\n    'selectable',\n    'headerClassName',\n    'footerClassName',\n    'fixAlignment',\n    'hideQuickSaveBtn',\n    'hideCheckToggler',\n    'itemCheckableOn',\n    'itemDraggableOn',\n    'masonryLayout',\n    'items',\n    'valueField'\n  ];\n  static defaultProps: Partial<GridProps> = {\n    className: '',\n    placeholder: 'placeholder.noData',\n    source: '$items',\n    selectable: false,\n    headerClassName: '',\n    footerClassName: '',\n    itemClassName: 'Grid-col--sm6 Grid-col--md4 Grid-col--lg3',\n    // fixAlignment: false,\n    hideCheckToggler: false,\n    masonryLayout: false,\n    affixHeader: true,\n    itemsClassName: '',\n    checkAll: true\n  };\n\n  dragTip?: HTMLElement;\n  sortable?: Sortable;\n  parentNode?: any;\n  body?: any;\n  // fixAlignmentLazy: Function;\n  unSensor: Function;\n  renderedToolbars: Array<string>;\n\n  constructor(props: GridProps) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleCheckAll = this.handleCheckAll.bind(this);\n    this.handleQuickChange = this.handleQuickChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleSaveOrder = this.handleSaveOrder.bind(this);\n    this.reset = this.reset.bind(this);\n    this.dragTipRef = this.dragTipRef.bind(this);\n    this.bodyRef = this.bodyRef.bind(this);\n    this.affixDetect = this.affixDetect.bind(this);\n    this.itemsRef = this.itemsRef.bind(this);\n    this.renderToolbar = this.renderToolbar.bind(this);\n    // this.fixAlignmentLazy = debounce(this.fixAlignment.bind(this), 250, {\n    //     trailing: true,\n    //     leading: false\n    // })\n\n    const {\n      store,\n      selectable,\n      draggable,\n      orderBy,\n      orderDir,\n      multiple,\n      hideCheckToggler,\n      itemCheckableOn,\n      itemDraggableOn\n    } = props;\n\n    store.update({\n      selectable,\n      draggable,\n      orderBy,\n      orderDir,\n      multiple,\n      hideCheckToggler,\n      itemCheckableOn,\n      itemDraggableOn\n    });\n\n    Cards.syncItems(store, this.props) && this.syncSelected();\n  }\n\n  static syncItems(store: IListStore, props: GridProps, prevProps?: GridProps) {\n    const source = props.source;\n    const value = props.value || props.items;\n    let items: Array<object> = [];\n    let updateItems = false;\n\n    if (\n      Array.isArray(value) &&\n      (!prevProps || (prevProps.value || prevProps.items) !== value)\n    ) {\n      items = value;\n      updateItems = true;\n    } else if (typeof source === 'string') {\n      const resolved = resolveVariableAndFilter(source, props.data, '| raw');\n      const prev = prevProps\n        ? resolveVariableAndFilter(source, prevProps.data, '| raw')\n        : null;\n\n      if (prev && prev === resolved) {\n        updateItems = false;\n      } else if (Array.isArray(resolved)) {\n        items = resolved;\n        updateItems = true;\n      }\n    }\n\n    updateItems && store.initItems(items);\n    typeof props.selected !== 'undefined' &&\n      store.updateSelected(props.selected, props.valueField);\n    return updateItems;\n  }\n\n  componentDidMount() {\n    let parent: HTMLElement | Window | null = getScrollParent(\n      findDOMNode(this) as HTMLElement\n    );\n    if (!parent || parent === document.body) {\n      parent = window;\n    }\n\n    this.parentNode = parent;\n    this.affixDetect();\n    parent.addEventListener('scroll', this.affixDetect);\n    window.addEventListener('resize', this.affixDetect);\n  }\n\n  componentDidUpdate(prevProps: GridProps) {\n    const props = this.props;\n    const store = props.store;\n\n    if (\n      anyChanged(\n        [\n          'selectable',\n          'draggable',\n          'orderBy',\n          'orderDir',\n          'multiple',\n          'hideCheckToggler',\n          'itemCheckableOn',\n          'itemDraggableOn'\n        ],\n        prevProps,\n        props\n      )\n    ) {\n      store.update({\n        selectable: props.selectable,\n        draggable: props.draggable,\n        orderBy: props.orderBy,\n        orderDir: props.orderDir,\n        multiple: props.multiple,\n        hideCheckToggler: props.hideCheckToggler,\n        itemCheckableOn: props.itemCheckableOn,\n        itemDraggableOn: props.itemDraggableOn\n      });\n    }\n\n    if (\n      anyChanged(['source', 'value', 'items'], prevProps, props) ||\n      (!props.value &&\n        !props.items &&\n        (props.data !== prevProps.data ||\n          (typeof props.source === 'string' && isPureVariable(props.source))))\n    ) {\n      Cards.syncItems(store, props, prevProps) && this.syncSelected();\n    } else if (prevProps.selected !== props.selected) {\n      store.updateSelected(props.selected || [], props.valueField);\n    }\n  }\n\n  componentWillUnmount() {\n    const parent = this.parentNode;\n    parent && parent.removeEventListener('scroll', this.affixDetect);\n    window.removeEventListener('resize', this.affixDetect);\n  }\n\n  // fixAlignment() {\n  //     if (!this.props.fixAlignment || this.props.masonryLayout) {\n  //         return;\n  //     }\n\n  //     const dom = this.body as HTMLElement;\n  //     const ns = this.props.classPrefix;\n  //     const cards = [].slice.apply(dom.querySelectorAll(`.${ns}Cards-body > div`));\n\n  //     if (!cards.length) {\n  //         return;\n  //     }\n\n  //     let maxHeight = cards.reduce((maxHeight:number, item:HTMLElement) => Math.max(item.offsetHeight, maxHeight), 0);\n  //     cards.forEach((item: HTMLElement) => item.style.cssText += `min-height: ${maxHeight}px;`);\n  // }\n\n  bodyRef(ref: HTMLDivElement) {\n    this.body = ref;\n  }\n\n  itemsRef(ref: HTMLDivElement) {\n    if (ref) {\n      // this.unSensor = resizeSensor(ref.parentNode as HTMLElement, this.fixAlignmentLazy);\n    } else {\n      this.unSensor && this.unSensor();\n\n      // @ts-ignore;\n      delete this.unSensor;\n    }\n  }\n\n  affixDetect() {\n    if (!this.props.affixHeader || !this.body) {\n      return;\n    }\n\n    const ns = this.props.classPrefix;\n    const dom = findDOMNode(this) as HTMLElement;\n    const clip = (this.body as HTMLElement).getBoundingClientRect();\n    const offsetY =\n      this.props.affixOffsetTop ?? this.props.env.affixOffsetTop ?? 0;\n    const affixed =\n      clip.top - 10 < offsetY && clip.top + clip.height - 40 > offsetY;\n    const afixedDom = dom.querySelector(`.${ns}Cards-fixedTop`) as HTMLElement;\n\n    this.body.offsetWidth &&\n      (afixedDom.style.cssText = `top: ${offsetY}px;width: ${this.body.offsetWidth}px;`);\n    affixed ? afixedDom.classList.add('in') : afixedDom.classList.remove('in');\n    // store.markHeaderAffix(clip.top < offsetY && (clip.top + clip.height - 40) > offsetY);\n  }\n\n  handleAction(e: React.UIEvent<any>, action: Action, ctx: object) {\n    const {onAction} = this.props;\n\n    // 需要支持特殊事件吗？\n    onAction(e, action, ctx);\n  }\n\n  handleCheck(item: IItem) {\n    item.toggle();\n    this.syncSelected();\n  }\n\n  handleCheckAll() {\n    const {store} = this.props;\n\n    store.toggleAll();\n    this.syncSelected();\n  }\n\n  syncSelected() {\n    const {store, onSelect} = this.props;\n\n    onSelect &&\n      onSelect(\n        store.selectedItems.map(item => item.data),\n        store.unSelectedItems.map(item => item.data)\n      );\n  }\n\n  handleQuickChange(\n    item: IItem,\n    values: object,\n    saveImmediately?: boolean | any,\n    saveSilent?: boolean,\n    resetOnFailed?: boolean\n  ) {\n    item.change(values, saveSilent);\n\n    if (!saveImmediately || saveSilent) {\n      return;\n    }\n\n    if (saveImmediately && saveImmediately.api) {\n      this.props.onAction(\n        null,\n        {\n          actionType: 'ajax',\n          api: saveImmediately.api\n        },\n        values\n      );\n      return;\n    }\n\n    const {onSave, primaryField} = this.props;\n\n    if (!onSave) {\n      return;\n    }\n\n    onSave(\n      item.data,\n      difference(item.data, item.pristine, ['id', primaryField]),\n      item.index,\n      undefined,\n      item.pristine,\n      resetOnFailed\n    );\n  }\n\n  handleSave() {\n    const {store, onSave, primaryField} = this.props;\n\n    if (!onSave || !store.modifiedItems.length) {\n      return;\n    }\n\n    const items = store.modifiedItems.map(item => item.data);\n    const itemIndexes = store.modifiedItems.map(item => item.index);\n    const diff = store.modifiedItems.map(item =>\n      difference(item.data, item.pristine, ['id', primaryField])\n    );\n    const unModifiedItems = store.items\n      .filter(item => !item.modified)\n      .map(item => item.data);\n    onSave(\n      items,\n      diff,\n      itemIndexes,\n      unModifiedItems,\n      store.modifiedItems.map(item => item.pristine)\n    );\n  }\n\n  handleSaveOrder() {\n    const {store, onSaveOrder} = this.props;\n\n    if (!onSaveOrder || !store.movedItems.length) {\n      return;\n    }\n\n    onSaveOrder(\n      store.movedItems.map(item => item.data),\n      store.items.map(item => item.data)\n    );\n  }\n\n  reset() {\n    const {store} = this.props;\n\n    store.reset();\n  }\n\n  bulkUpdate(value: object, items: Array<object>) {\n    const {store} = this.props;\n\n    const items2 = store.items.filter(item => ~items.indexOf(item.pristine));\n    items2.forEach(item => item.change(value));\n  }\n\n  getSelected() {\n    const {store} = this.props;\n\n    return store.selectedItems.map(item => item.data);\n  }\n\n  dragTipRef(ref: any) {\n    if (!this.dragTip && ref) {\n      this.initDragging();\n    } else if (this.dragTip && !ref) {\n      this.destroyDragging();\n    }\n\n    this.dragTip = ref;\n  }\n\n  initDragging() {\n    const store = this.props.store;\n    const dom = findDOMNode(this) as HTMLElement;\n    const ns = this.props.classPrefix;\n    this.sortable = new Sortable(\n      dom.querySelector(`.${ns}Cards-body`) as HTMLElement,\n      {\n        group: 'table',\n        animation: 150,\n        handle: `.${ns}Card-dragBtn`,\n        ghostClass: `is-dragging`,\n        onEnd: (e: any) => {\n          // 没有移动\n          if (e.newIndex === e.oldIndex) {\n            return;\n          }\n\n          const parent = e.to as HTMLElement;\n          if (e.oldIndex < parent.childNodes.length - 1) {\n            parent.insertBefore(e.item, parent.childNodes[e.oldIndex]);\n          } else {\n            parent.appendChild(e.item);\n          }\n\n          store.exchange(e.oldIndex, e.newIndex);\n        }\n      }\n    );\n  }\n\n  destroyDragging() {\n    this.sortable && this.sortable.destroy();\n  }\n\n  renderActions(region: string) {\n    let {actions, render, store, classnames: cx} = this.props;\n    let btn;\n    actions = Array.isArray(actions) ? actions.concat() : [];\n\n    if (\n      !~this.renderedToolbars.indexOf('check-all') &&\n      (btn = this.renderCheckAll())\n    ) {\n      actions.unshift({\n        type: 'button',\n        children: btn\n      });\n    }\n\n    if (\n      region === 'header' &&\n      !~this.renderedToolbars.indexOf('drag-toggler') &&\n      (btn = this.renderDragToggler())\n    ) {\n      actions.unshift({\n        type: 'button',\n        children: btn\n      });\n    }\n\n    return Array.isArray(actions) && actions.length ? (\n      <div className={cx('Cards-actions')}>\n        {actions.map((action, key) =>\n          render(\n            `action/${key}`,\n            {\n              type: 'button',\n              ...action\n            },\n            {\n              onAction: this.handleAction,\n              key,\n              btnDisabled: store.dragging\n            }\n          )\n        )}\n      </div>\n    ) : null;\n  }\n\n  renderHeading() {\n    let {title, store, hideQuickSaveBtn, classnames: cx, data} = this.props;\n\n    if (title || (store.modified && !hideQuickSaveBtn) || store.moved) {\n      return (\n        <div className={cx('Cards-heading')}>\n          {store.modified && !hideQuickSaveBtn ? (\n            <span>\n              {`当前有 ${store.modified} 条记录修改了内容, 但并没有提交。请选择:`}\n              <button\n                type=\"button\"\n                className={cx('Button Button--xs Button--success m-l-sm')}\n                onClick={this.handleSave}\n              >\n                <Icon icon=\"check\" className=\"icon m-r-xs\" />\n                提交\n              </button>\n              <button\n                type=\"button\"\n                className={cx('Button Button--xs Button--danger m-l-sm')}\n                onClick={this.reset}\n              >\n                <Icon icon=\"close\" className=\"icon m-r-xs\" />\n                放弃\n              </button>\n            </span>\n          ) : store.moved ? (\n            <span>\n              {`当前有 ${store.moved} 条记录修改了顺序, 但并没有提交。请选择:`}\n              <button\n                type=\"button\"\n                className={cx('Button Button--xs Button--success m-l-sm')}\n                onClick={this.handleSaveOrder}\n              >\n                <Icon icon=\"check\" className=\"icon m-r-xs\" />\n                提交\n              </button>\n              <button\n                type=\"button\"\n                className={cx('Button Button--xs Button--danger m-l-sm')}\n                onClick={this.reset}\n              >\n                <Icon icon=\"close\" className=\"icon m-r-xs\" />\n                放弃\n              </button>\n            </span>\n          ) : title ? (\n            filter(title, data)\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderHeader() {\n    const {\n      header,\n      headerClassName,\n      headerToolbar,\n      headerToolbarRender,\n      showHeader,\n      render,\n      store,\n      classnames: cx,\n      translate: __\n    } = this.props;\n\n    if (showHeader === false) {\n      return null;\n    }\n\n    const child = headerToolbarRender\n      ? headerToolbarRender(\n          {\n            ...this.props,\n            selectedItems: store.selectedItems.map(item => item.data),\n            items: store.items.map(item => item.data),\n            unSelectedItems: store.unSelectedItems.map(item => item.data)\n          },\n          this.renderToolbar\n        )\n      : null;\n    const actions = this.renderActions('header');\n    const toolbarNode =\n      actions || child || store.dragging ? (\n        <div className={cx('Cards-toolbar')} key=\"header-toolbar\">\n          {actions}\n          {child}\n          {store.dragging ? (\n            <div className={cx('Cards-dragTip')} ref={this.dragTipRef}>\n              {__('Card.dragTip')}\n            </div>\n          ) : null}\n        </div>\n      ) : null;\n    const headerNode = header ? (\n      <div className={cx('Cards-header', headerClassName)} key=\"header\">\n        {render('header', header)}\n      </div>\n    ) : null;\n    return headerNode && toolbarNode\n      ? [headerNode, toolbarNode]\n      : headerNode || toolbarNode || null;\n  }\n\n  renderFooter() {\n    const {\n      footer,\n      footerClassName,\n      footerToolbar,\n      footerToolbarRender,\n      render,\n      showFooter,\n      store,\n      classnames: cx\n    } = this.props;\n\n    if (showFooter === false) {\n      return null;\n    }\n\n    const child = footerToolbarRender\n      ? footerToolbarRender(\n          {\n            ...this.props,\n            selectedItems: store.selectedItems.map(item => item.data),\n            items: store.items.map(item => item.data),\n            unSelectedItems: store.unSelectedItems.map(item => item.data)\n          },\n          this.renderToolbar\n        )\n      : null;\n    const actions = this.renderActions('footer');\n\n    const toolbarNode =\n      actions || child ? (\n        <div className={cx('Cards-toolbar')} key=\"footer-toolbar\">\n          {actions}\n          {child}\n        </div>\n      ) : null;\n    const footerNode = footer ? (\n      <div className={cx('Cards-footer', footerClassName)} key=\"footer\">\n        {render('footer', footer)}\n      </div>\n    ) : null;\n    return footerNode && toolbarNode\n      ? [toolbarNode, footerNode]\n      : footerNode || toolbarNode || null;\n  }\n\n  renderCheckAll() {\n    const {store, multiple, selectable, checkAll} = this.props;\n\n    if (\n      !store.selectable ||\n      !multiple ||\n      !selectable ||\n      store.dragging ||\n      !store.items.length ||\n      !checkAll\n    ) {\n      return null;\n    }\n\n    return (\n      <Button\n        key=\"checkall\"\n        tooltip=\"切换全选\"\n        onClick={this.handleCheckAll}\n        size=\"sm\"\n        level={store.allChecked ? 'info' : 'default'}\n      >\n        全选\n      </Button>\n    );\n  }\n\n  renderDragToggler() {\n    const {store, multiple, selectable, env, translate: __} = this.props;\n\n    if (!store.draggable || store.items.length < 2) {\n      return null;\n    }\n\n    return (\n      <Button\n        iconOnly\n        key=\"dragging-toggle\"\n        tooltip={__('Card.toggleDrag')}\n        tooltipContainer={\n          env && env.getModalContainer ? env.getModalContainer : undefined\n        }\n        size=\"sm\"\n        active={store.dragging}\n        onClick={(e: React.MouseEvent<any>) => {\n          e.preventDefault();\n          store.toggleDragging();\n          store.dragging && store.clear();\n        }}\n      >\n        <Icon icon=\"exchange\" className=\"icon r90\" />\n      </Button>\n    );\n  }\n\n  renderToolbar(toolbar: SchemaNode, index: number) {\n    const type = (toolbar as Schema).type || (toolbar as string);\n\n    if (type === 'drag-toggler') {\n      this.renderedToolbars.push(type);\n      return this.renderDragToggler();\n    } else if (type === 'check-all') {\n      this.renderedToolbars.push(type);\n      return this.renderCheckAll();\n    }\n\n    return void 0;\n  }\n\n  // editor中重写，请勿更改前两个参数\n  renderCard(index: number, card: any, item: IItem, itemClassName: string) {\n    const {\n      render,\n      classnames: cx,\n      store,\n      multiple,\n      checkOnItemClick,\n      hideCheckToggler\n    } = this.props;\n\n    let cardProps: Partial<CardProps | Card2Props> = {\n      className: cx((card && card.className) || '', {\n        'is-checked': item.checked,\n        'is-modified': item.modified,\n        'is-moved': item.moved\n      }),\n      item,\n      itemIndex: item.index,\n      multiple,\n      selectable: store.selectable,\n      checkable: item.checkable,\n      draggable: item.draggable,\n      selected: item.checked,\n      onSelect: item.toggle,\n      dragging: store.dragging,\n      data: item.locals,\n      onAction: this.handleAction,\n      onCheck: this.handleCheck,\n      onQuickChange: store.dragging ? null : this.handleQuickChange\n    };\n\n    // card2属性与card有区别\n    if (card?.type === 'card2') {\n      cardProps = {\n        ...cardProps,\n        item: item.locals,\n        onCheck: item.toggle\n      };\n    }\n\n    return (\n      <div key={item.index} className={cx(itemClassName)}>\n        {render(\n          `card/${index}`,\n          {\n            // @ts-ignore\n            type: card.type || 'card',\n            hideCheckToggler,\n            checkOnItemClick,\n            ...card\n          },\n          cardProps\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      store,\n      columnsCount,\n      itemClassName,\n      placeholder,\n      card,\n      render,\n      affixHeader,\n      masonryLayout,\n      itemsClassName,\n      classnames: cx,\n      translate: __\n    } = this.props;\n\n    this.renderedToolbars = []; // 用来记录哪些 toolbar 已经渲染了，已经渲染了就不重复渲染了。\n    const itemFinalClassName: string = columnsCount\n      ? `Grid-col--sm${Math.round(12 / columnsCount)}`\n      : itemClassName || '';\n\n    const header = this.renderHeader();\n    const heading = this.renderHeading();\n    const footer = this.renderFooter();\n    let masonryClassName = '';\n\n    if (masonryLayout) {\n      masonryClassName =\n        'Cards--masonry ' +\n        itemFinalClassName\n          .split(/\\s/)\n          .map(item => {\n            if (/^Grid-col--(xs|sm|md|lg)(\\d+)/.test(item)) {\n              return `Cards--masonry${ucFirst(RegExp.$1)}${RegExp.$2}`;\n            }\n\n            return item;\n          })\n          .join(' ');\n    }\n\n    return (\n      <div\n        ref={this.bodyRef}\n        className={cx('Cards', className, {\n          'Cards--unsaved': !!store.modified || !!store.moved\n        })}\n      >\n        {affixHeader ? (\n          <div className={cx('Cards-fixedTop')}>\n            {header}\n            {heading}\n          </div>\n        ) : null}\n        {header}\n        {heading}\n        {store.items.length ? (\n          <div\n            ref={this.itemsRef}\n            className={cx('Cards-body Grid', itemsClassName, masonryClassName)}\n          >\n            {store.items.map((item, index) =>\n              this.renderCard(index, card, item, itemFinalClassName)\n            )}\n          </div>\n        ) : (\n          <div className={cx('Cards-placeholder')}>\n            {render('placeholder', __(placeholder))}\n          </div>\n        )}\n\n        {footer}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:crud\\/body\\/grid|cards)$/,\n  name: 'cards',\n  storeType: ListStore.name,\n  weight: -100 // 默认的 grid 不是这样，这个只识别 crud 下面的 grid\n})\nexport class CardsRenderer extends Cards {\n  dragging: boolean;\n  selectable: boolean;\n  selected: boolean;\n  onSelect: boolean;\n  title?: string;\n  subTitle?: string;\n  desc?: string;\n  avatar?: string;\n  avatarClassName?: string;\n  body?: SchemaNode;\n  actions?: Array<Action>;\n}\n"
    ]
}