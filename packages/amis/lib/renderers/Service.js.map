{
    "version": 3,
    "file": "Service.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Service.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Renderer, RendererProps} from '../factory';\nimport {ServiceStore, IServiceStore} from '../store/service';\nimport {Api, SchemaNode, ApiObject, RendererData, Action} from '../types';\nimport {filter, evalExpression} from '../utils/tpl';\nimport cx from 'classnames';\nimport Scoped, {ScopedContext, IScopedContext} from '../Scoped';\nimport {observer} from 'mobx-react';\nimport {\n  buildApi,\n  isApiOutdated,\n  isEffectiveApi,\n  str2AsyncFunction\n} from '../utils/api';\nimport {Spinner} from '../components';\nimport {\n  autobind,\n  isEmpty,\n  isObjectShallowModified,\n  isVisible,\n  qsstringify\n} from '../utils/helper';\nimport {\n  BaseSchema,\n  SchemaApi,\n  SchemaCollection,\n  SchemaExpression,\n  SchemaMessage,\n  SchemaName\n} from '../Schema';\nimport {IIRendererStore} from '../store';\n\nimport type {ScopedComponentType} from '../Scoped';\nimport type {ListenerAction} from '../actions/Action';\n\n/**\n * Service 服务类控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/service\n */\nexport interface ServiceSchema extends BaseSchema {\n  /**\n   * 指定为 Service 数据拉取控件。\n   */\n  type: 'service';\n\n  /**\n   * 页面初始化的时候，可以设置一个 API 让其取拉取，发送数据会携带当前 data 数据（包含地址栏参数），获取得数据会合并到 data 中，供组件内使用。\n   */\n  api?: SchemaApi;\n\n  /**\n   * WebScocket 地址，用于实时获取数据\n   */\n  ws?: string;\n\n  /**\n   * 通过调用外部函数来获取数据\n   */\n  dataProvider?: string | Function;\n\n  /**\n   * 内容区域\n   */\n  body?: SchemaCollection;\n\n  /**\n   * @deprecated 改成 api 的 sendOn。\n   */\n  fetchOn?: SchemaExpression;\n\n  /**\n   * 是否默认就拉取？\n   */\n  initFetch?: boolean;\n\n  /**\n   * 是否默认就拉取？通过表达式来决定.\n   *\n   * @deprecated 改成 api 的 sendOn。\n   */\n  initFetchOn?: SchemaExpression;\n\n  /**\n   * 用来获取远程 Schema 的 api\n   */\n  schemaApi?: SchemaApi;\n\n  /**\n   * 是否默认加载 schemaApi\n   */\n  initFetchSchema?: boolean;\n\n  /**\n   * 用表达式来配置。\n   * @deprecated 改成 api 的 sendOn。\n   */\n  initFetchSchemaOn?: SchemaExpression;\n\n  /**\n   * 是否轮询拉取\n   */\n  interval?: number;\n\n  /**\n   * 是否静默拉取\n   */\n  silentPolling?: boolean;\n\n  /**\n   * 关闭轮询的条件。\n   */\n  stopAutoRefreshWhen?: SchemaExpression;\n\n  messages?: SchemaMessage;\n\n  name?: SchemaName;\n}\n\nexport interface ServiceProps\n  extends RendererProps,\n    Omit<ServiceSchema, 'type' | 'className'> {\n  store: IServiceStore;\n  messages: SchemaMessage;\n}\nexport default class Service extends React.Component<ServiceProps> {\n  timer: ReturnType<typeof setTimeout>;\n  mounted: boolean;\n\n  // 主要是用于关闭 socket\n  socket: any;\n\n  dataProviderUnsubscribe?: Function;\n\n  static defaultProps: Partial<ServiceProps> = {\n    messages: {\n      fetchFailed: 'fetchFailed'\n    }\n  };\n\n  static propsList: Array<string> = [];\n\n  constructor(props: ServiceProps) {\n    super(props);\n\n    this.handleQuery = this.handleQuery.bind(this);\n    this.handleAction = this.handleAction.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.reload = this.reload.bind(this);\n    this.silentReload = this.silentReload.bind(this);\n    this.initInterval = this.initInterval.bind(this);\n    this.afterDataFetch = this.afterDataFetch.bind(this);\n    this.afterSchemaFetch = this.afterSchemaFetch.bind(this);\n    this.runDataProvider = this.runDataProvider.bind(this);\n    this.dataProviderSetData = this.dataProviderSetData.bind(this);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.initFetch();\n  }\n\n  componentDidUpdate(prevProps: ServiceProps) {\n    const props = this.props;\n    const store = props.store;\n\n    const {fetchSuccess, fetchFailed} = props.messages!;\n\n    isApiOutdated(prevProps.api, props.api, prevProps.data, props.data) &&\n      store\n        .fetchData(props.api as Api, store.data, {\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterDataFetch);\n\n    isApiOutdated(\n      prevProps.schemaApi,\n      props.schemaApi,\n      prevProps.data,\n      props.data\n    ) &&\n      store\n        .fetchSchema(props.schemaApi as Api, store.data, {\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterSchemaFetch);\n\n    if (props.ws && prevProps.ws !== props.ws) {\n      if (this.socket) {\n        this.socket.close();\n      }\n      this.socket = this.fetchWSData(props.ws, store.data);\n    }\n\n    if (isObjectShallowModified(prevProps.defaultData, props.defaultData)) {\n      store.reInitData(props.defaultData);\n    }\n\n    if (props.dataProvider !== prevProps.dataProvider) {\n      this.runDataProvider();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    this.runDataProviderUnsubscribe();\n    clearTimeout(this.timer);\n    if (this.socket && this.socket.close) {\n      this.socket.close();\n    }\n  }\n\n  doAction(action: ListenerAction, args: any) {\n    if (action?.actionType === 'rebuild') {\n      const {\n        schemaApi,\n        store,\n        dataProvider,\n        messages: {fetchSuccess, fetchFailed}\n      } = this.props;\n\n      store.updateData(args);\n      clearTimeout(this.timer);\n      if (isEffectiveApi(schemaApi, store.data)) {\n        store\n          .fetchSchema(schemaApi, store.data, {\n            successMessage: fetchSuccess,\n            errorMessage: fetchFailed\n          })\n          .then(this.afterSchemaFetch);\n      }\n\n      if (dataProvider) {\n        this.runDataProvider();\n      }\n    }\n  }\n\n  @autobind\n  initFetch() {\n    const {\n      schemaApi,\n      initFetchSchema,\n      api,\n      ws,\n      initFetch,\n      initFetchOn,\n      dataProvider,\n      store,\n      messages: {fetchSuccess, fetchFailed}\n    } = this.props;\n\n    if (isEffectiveApi(schemaApi, store.data, initFetchSchema)) {\n      store\n        .fetchSchema(schemaApi, store.data, {\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterSchemaFetch);\n    }\n\n    if (isEffectiveApi(api, store.data, initFetch, initFetchOn)) {\n      store\n        .fetchInitData(api, store.data, {\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterDataFetch);\n    }\n\n    if (ws) {\n      this.socket = this.fetchWSData(ws, store.data);\n    }\n\n    if (dataProvider) {\n      this.runDataProvider();\n    }\n  }\n\n  // 使用外部函数获取数据\n  async runDataProvider() {\n    this.runDataProviderUnsubscribe();\n    const {dataProvider, store} = this.props;\n    let dataProviderFunc = dataProvider;\n\n    if (typeof dataProvider === 'string' && dataProvider) {\n      dataProviderFunc = str2AsyncFunction(\n        dataProvider,\n        'data',\n        'setData',\n        'env'\n      )!;\n    }\n    if (typeof dataProviderFunc === 'function') {\n      const unsubscribe = await dataProviderFunc(\n        store.data,\n        this.dataProviderSetData,\n        this.props.env\n      );\n      if (typeof unsubscribe === 'function') {\n        this.dataProviderUnsubscribe = unsubscribe;\n      }\n    }\n  }\n\n  // 运行销毁外部函数的方法\n  runDataProviderUnsubscribe() {\n    if (typeof this.dataProviderUnsubscribe === 'function') {\n      try {\n        this.dataProviderUnsubscribe();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  // 外部函数回调更新数据\n  dataProviderSetData(data: any) {\n    if (!this.mounted) {\n      return;\n    }\n    const {store} = this.props;\n    store.updateData(data, undefined, false);\n    store.setHasRemoteData();\n  }\n\n  // 使用 websocket 获取使用，因为有异步所以放这里而不是 store 实现\n  fetchWSData(ws: string | Api, data: any) {\n    const {env, store} = this.props;\n    const wsApi = buildApi(ws, data);\n\n    env.wsFetcher(\n      wsApi,\n      (data: any) => {\n        let returndata = data;\n        if ('status' in data && 'data' in data) {\n          returndata = data.data;\n          if (data.status !== 0) {\n            store.updateMessage(data.msg, true);\n            env.notify('error', data.msg);\n            return;\n          }\n        }\n        store.updateData(returndata, undefined, false);\n        store.setHasRemoteData();\n        // 因为 WebSocket 只会获取纯数据，所以没有 msg 之类的\n        this.afterDataFetch({ok: true, data: returndata});\n      },\n      (error: any) => {\n        store.updateMessage(error, true);\n        env.notify('error', error);\n      }\n    );\n  }\n\n  afterDataFetch(result: any) {\n    // todo 应该统一这块\n    // 初始化接口返回的是整个 response，\n    // 保存 ajax 请求的时候返回时数据部分。\n    const data = result?.hasOwnProperty('ok') ? result.data : result;\n    const {onBulkChange, dispatchEvent} = this.props;\n\n    dispatchEvent?.('fetchInited', data);\n\n    if (!isEmpty(data) && onBulkChange) {\n      onBulkChange(data);\n    }\n\n    this.initInterval(data);\n  }\n\n  afterSchemaFetch(schema: any) {\n    const {onBulkChange, formStore, dispatchEvent} = this.props;\n\n    dispatchEvent?.('fetchSchemaInited', schema);\n\n    if (formStore && schema?.data && onBulkChange) {\n      onBulkChange && onBulkChange(schema.data);\n    }\n\n    this.initInterval(schema);\n  }\n\n  initInterval(value: any) {\n    const {interval, silentPolling, stopAutoRefreshWhen, data} = this.props;\n\n    clearTimeout(this.timer);\n\n    interval &&\n      this.mounted &&\n      (!stopAutoRefreshWhen || !evalExpression(stopAutoRefreshWhen, data)) &&\n      (this.timer = setTimeout(\n        silentPolling ? this.silentReload : this.reload,\n        Math.max(interval, 1000)\n      ));\n    return value;\n  }\n\n  reload(subpath?: string, query?: any, ctx?: RendererData, silent?: boolean) {\n    if (query) {\n      return this.receive(query);\n    }\n\n    const {\n      schemaApi,\n      initFetchSchema,\n      api,\n      initFetch,\n      initFetchOn,\n      store,\n      dataProvider,\n      messages: {fetchSuccess, fetchFailed}\n    } = this.props;\n\n    clearTimeout(this.timer);\n\n    if (isEffectiveApi(schemaApi, store.data)) {\n      store\n        .fetchSchema(schemaApi, store.data, {\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterSchemaFetch);\n    }\n\n    if (isEffectiveApi(api, store.data)) {\n      store\n        .fetchData(api, store.data, {\n          silent,\n          successMessage: fetchSuccess,\n          errorMessage: fetchFailed\n        })\n        .then(this.afterDataFetch);\n    }\n\n    if (dataProvider) {\n      this.runDataProvider();\n    }\n  }\n\n  silentReload(target?: string, query?: any) {\n    this.reload(target, query, undefined, true);\n  }\n\n  receive(values: object) {\n    const {store} = this.props;\n\n    store.updateData(values);\n    this.reload();\n  }\n\n  handleQuery(query: any) {\n    if (this.props.api || this.props.schemaApi) {\n      this.receive(query);\n    } else {\n      this.props.onQuery?.(query);\n    }\n  }\n\n  reloadTarget(target: string, data?: any) {\n    // 会被覆写\n  }\n\n  @autobind\n  handleDialogConfirm(\n    values: object[],\n    action: Action,\n    ctx: any,\n    targets: Array<any>\n  ) {\n    const {store} = this.props;\n    store.closeDialog(true);\n  }\n\n  @autobind\n  handleDialogClose(confirmed = false) {\n    const {store} = this.props;\n    store.closeDialog(confirmed);\n  }\n\n  openFeedback(dialog: any, ctx: any) {\n    return new Promise(resolve => {\n      const {store} = this.props;\n\n      store.setCurrentAction({\n        type: 'button',\n        actionType: 'dialog',\n        dialog: dialog\n      });\n      store.openDialog(ctx, undefined, confirmed => {\n        resolve(confirmed);\n      });\n    });\n  }\n\n  handleAction(\n    e: React.UIEvent<any> | void,\n    action: Action,\n    data: object,\n    throwErrors: boolean = false,\n    delegate?: IScopedContext\n  ) {\n    const {onAction, store, env, api, translate: __} = this.props;\n\n    if (api && action.actionType === 'ajax') {\n      store.setCurrentAction(action);\n      store\n        .saveRemote(action.api as string, data, {\n          successMessage: __(action.messages && action.messages.success),\n          errorMessage: __(action.messages && action.messages.failed)\n        })\n        .then(async (payload: any) => {\n          this.afterDataFetch(payload);\n\n          if (action.feedback && isVisible(action.feedback, store.data)) {\n            await this.openFeedback(action.feedback, store.data);\n          }\n\n          const redirect =\n            action.redirect && filter(action.redirect, store.data);\n          redirect && env.jumpTo(redirect, action);\n          action.reload && this.reloadTarget(action.reload, store.data);\n        })\n        .catch((e) => {\n          if (throwErrors || action.countDown) {\n            throw e;\n          }\n        });\n    } else {\n      onAction(e, action, data, throwErrors, delegate || this.context);\n    }\n  }\n\n  handleChange(\n    value: any,\n    name: string,\n    submit?: boolean,\n    changePristine?: boolean\n  ) {\n    const {store, formStore, onChange} = this.props;\n\n    // form 触发的 onChange,直接忽略\n    if (typeof name !== 'string') {\n      return;\n    }\n\n    (store as IIRendererStore).changeValue?.(name, value);\n\n    // 如果在form底下，则继续向上派送。\n    formStore && onChange?.(value, name, submit, changePristine);\n  }\n\n  renderBody() {\n    const {render, store, body: schema, classnames: cx} = this.props;\n\n    return render('body', store.schema || schema, {\n      key: store.schemaKey || 'body',\n      onQuery: this.handleQuery,\n      onAction: this.handleAction,\n      onChange: this.handleChange\n    }) as JSX.Element;\n  }\n\n  render() {\n    const {\n      className,\n      store,\n      render,\n      classPrefix: ns,\n      classnames: cx\n    } = this.props;\n\n    return (\n      <div className={cx(`${ns}Service`, className)}>\n        {store.error ? (\n          <div className={cx(`Alert Alert--danger`)}>\n            <button\n              className={cx('Alert-close')}\n              onClick={() => store.updateMessage('')}\n              type=\"button\"\n            >\n              <span>×</span>\n            </button>\n            {store.msg}\n          </div>\n        ) : null}\n\n        {this.renderBody()}\n\n        <Spinner size=\"lg\" overlay key=\"info\" show={store.loading} />\n\n        {render(\n          // 单独给 feedback 服务的，handleAction 里面先不要处理弹窗\n          'modal',\n          {\n            ...((store.action as Action) &&\n              ((store.action as Action).dialog as object)),\n            type: 'dialog'\n          },\n          {\n            key: 'dialog',\n            data: store.dialogData,\n            onConfirm: this.handleDialogConfirm,\n            onClose: this.handleDialogClose,\n            show: store.dialogOpen\n          }\n        )}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'service',\n  storeType: ServiceStore.name,\n  isolateScope: true,\n  storeExtendsData: (props: any) => (props.formStore ? false : true)\n})\nexport class ServiceRenderer extends Service {\n  static contextType = ScopedContext;\n\n  constructor(props: ServiceProps, context: IScopedContext) {\n    super(props);\n\n    const scoped = context;\n    scoped.registerComponent(this as ScopedComponentType);\n  }\n\n  reload(subpath?: string, query?: any, ctx?: any, silent?: boolean) {\n    const scoped = this.context as IScopedContext;\n    if (subpath) {\n      return scoped.reload(\n        query ? `${subpath}?${qsstringify(query)}` : subpath,\n        ctx\n      );\n    }\n\n    return super.reload(subpath, query, ctx, silent);\n  }\n\n  receive(values: any, subPath?: string) {\n    const scoped = this.context as IScopedContext;\n    if (subPath) {\n      return scoped.send(subPath, values);\n    }\n\n    return super.receive(values);\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this as ScopedComponentType);\n  }\n\n  reloadTarget(target: string, data?: any) {\n    const scoped = this.context as IScopedContext;\n    scoped.reload(target, data);\n  }\n\n  setData(values: object) {\n    return this.props.store.updateData(values);\n  }\n}\n"
    ]
}