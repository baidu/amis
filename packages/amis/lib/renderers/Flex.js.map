{
    "version": 3,
    "file": "Flex.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Flex.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file 简化版 Flex 布局，主要用于不熟悉 CSS 的开发者\n */\n\nimport React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Schema} from '../types';\nimport {BaseSchema, SchemaCollection} from '../Schema';\n\n/**\n * Flex 布局\n * 文档：https://baidu.gitee.io/amis/docs/components/flex\n */\nexport interface FlexSchema extends BaseSchema {\n  /**\n   * 指定为 flex 展示类型\n   */\n  type: 'flex';\n\n  /**\n   * 水平分布\n   */\n  justify?:\n    | 'start'\n    | 'flex-start'\n    | 'center'\n    | 'end'\n    | 'flex-end'\n    | 'space-around'\n    | 'space-between'\n    | 'space-evenly';\n\n  /**\n   * 垂直布局\n   */\n  alignItems?:\n    | 'stretch'\n    | 'start'\n    | 'flex-start'\n    | 'flex-end'\n    | 'end'\n    | 'center'\n    | 'baseline';\n\n  /**\n   * 多行情况下的垂直分布\n   */\n  alignContent?:\n    | 'normal'\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n    | 'stretch';\n\n  /**\n   * 方向\n   */\n  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n\n  /**\n   * 每个 flex 的设置\n   */\n  items: SchemaCollection;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n}\n\nexport interface FlexProps\n  extends RendererProps,\n    Omit<FlexSchema, 'type' | 'className'> {}\n\nexport default class Flex extends React.Component<FlexProps, object> {\n  static defaultProps: Partial<FlexProps> = {\n    direction: 'row',\n    justify: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  };\n\n  constructor(props: FlexProps) {\n    super(props);\n  }\n\n  render() {\n    const {\n      items,\n      direction,\n      justify,\n      alignItems,\n      alignContent,\n      style,\n      className,\n      render,\n      disabled\n    } = this.props;\n\n    const flexStyle = {\n      display: 'flex',\n      flexDirection: direction,\n      justifyContent: justify,\n      alignItems,\n      alignContent,\n      ...style\n    };\n\n    return (\n      <div style={flexStyle} className={className}>\n        {(Array.isArray(items) ? items : items ? [items] : []).map(\n          (item, key) =>\n            render(`flexItem/${key}`, item, {\n              key: `flexItem/${key}`,\n              disabled\n            })\n        )}\n      </div>\n    );\n  }\n}\n\nexport interface FlexItemSchema extends BaseSchema {\n  /**\n   * 功能和 wrapper 类似，主要是给 flex 子节点用的\n   */\n  type: 'flex-item';\n\n  /**\n   * 内容\n   */\n  body: SchemaCollection;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n}\n\nexport interface FlexItemProps\n  extends RendererProps,\n    Omit<FlexItemSchema, 'className'> {\n  children?: JSX.Element | ((props?: any) => JSX.Element);\n}\n\nexport class FlexItem extends React.Component<FlexItemProps, object> {\n  static propsList: Array<string> = ['body', 'className', 'children'];\n\n  renderBody(): JSX.Element | null {\n    const {children, body, render, disabled} = this.props;\n\n    return children\n      ? typeof children === 'function'\n        ? (children(this.props) as JSX.Element)\n        : (children as JSX.Element)\n      : body\n      ? (render('body', body, {disabled}) as JSX.Element)\n      : null;\n  }\n\n  render() {\n    const {className, size, classnames: cx, style} = this.props;\n\n    return (\n      <div className={className} style={style}>\n        {this.renderBody()}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'flex'\n})\nexport class FlexRenderer extends Flex {}\n\n@Renderer({\n  type: 'flex-item'\n})\nexport class FlexItemRenderer extends FlexItem {}\n"
    ]
}