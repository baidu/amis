{
    "version": 3,
    "file": "Status.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Status.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {ServiceStore, IServiceStore} from '../store/service';\nimport {Api, SchemaNode, PlainObject} from '../types';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\nimport {Icon} from '../components/icons';\nimport {BaseSchema} from '../Schema';\nimport {getPropValue} from '../utils/helper';\n\n/**\n * 状态展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/status\n */\nexport interface StatusSchema extends BaseSchema {\n  /**\n   * 指定为状态展示控件\n   */\n  type: 'status';\n\n  /**\n   * 占位符\n   * @default -\n   */\n  placeholder?: string;\n\n  /**\n   * 状态图标映射关系\n   * @default {\n   *    0: 'svg-fail',\n   *    1: 'svg-success',\n   *    success: 'svg-success',\n   *    pending: 'rolling',\n   *    fail: 'svg-fail',\n   *    queue: 'svg-warning',\n   *    schedule: 'svg-schedule'\n   *  }\n   */\n  map?: {\n    [propName: string]: string;\n  };\n\n  /**\n   * 文字映射关系\n   *\n   * @default {\n   *     success: '成功',\n   *     pending: '运行中',\n   *     fail: '失败',\n   *     queue: '排队中',\n   *     schedule: '调度中'\n   * }\n   */\n  labelMap?: {\n    [propName: string]: string;\n  };\n}\n\nexport interface StatusProps\n  extends RendererProps,\n    Omit<StatusSchema, 'className'> {}\n\nexport class StatusField extends React.Component<StatusProps, object> {\n  static defaultProps: Partial<StatusProps> = {\n    placeholder: '-',\n    map: {\n      0: 'svg-fail',\n      1: 'svg-success',\n      success: 'svg-success',\n      pending: 'rolling',\n      fail: 'svg-fail',\n      queue: 'svg-warning',\n      schedule: 'svg-schedule'\n    },\n    labelMap: {\n      success: '成功',\n      pending: '运行中',\n      fail: '失败',\n      queue: '排队中',\n      schedule: '调度中'\n    }\n  };\n\n  render() {\n    const {\n      className,\n      placeholder,\n      map,\n      labelMap,\n      classnames: cx,\n      data\n    } = this.props;\n    let value = getPropValue(this.props);\n    let viewValue: React.ReactNode = (\n      <span className=\"text-muted\" key=\"status-value\">\n        {placeholder}\n      </span>\n    );\n    let wrapClassName: string = '';\n\n    if (value !== undefined && value !== '' && map) {\n      if (typeof value === 'boolean') {\n        value = value ? 1 : 0;\n      } else if (/^\\d+$/.test(value)) {\n        value = parseInt(value, 10) || 0;\n      }\n\n      wrapClassName = `StatusField--${value}`;\n      let itemClassName = map[value] || '';\n      let svgIcon: string = '';\n\n      itemClassName = itemClassName.replace(\n        /\\bsvg-([^\\s|$]+)\\b/g,\n        (_: string, icon: string) => {\n          svgIcon = icon;\n          return 'icon';\n        }\n      );\n\n      if (svgIcon) {\n        viewValue = (\n          <Icon\n            icon={svgIcon}\n            className={cx('Status-icon icon', itemClassName)}\n            key=\"icon\"\n          />\n        );\n      } else if (itemClassName) {\n        viewValue = (\n          <i className={cx('Status-icon', itemClassName)} key=\"icon\" />\n        );\n      }\n\n      if (labelMap && labelMap[value]) {\n        viewValue = [\n          viewValue,\n          <span className={cx('StatusField-label')} key=\"label\">\n            {filter(labelMap[value], data)}\n          </span>\n        ];\n      }\n    }\n\n    return (\n      <span className={cx('StatusField', wrapClassName, className)}>\n        {viewValue}\n      </span>\n    );\n  }\n}\n\n@Renderer({\n  type: 'status'\n})\nexport class StatusFieldRenderer extends StatusField {}\n"
    ]
}