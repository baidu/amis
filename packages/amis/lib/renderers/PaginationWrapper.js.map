{
    "version": 3,
    "file": "PaginationWrapper.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/PaginationWrapper.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sCAAmD;AAEnD,kDAAsE;AA+DtE;IAAuC,kDAAoC;IAQzE,2BAAY,KAA0B;QAAtC,YACE,kBAAM,KAAK,CAAC,SAOb;QANC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;YACtC,SAAS;YACT,MAAM;YACN,WAAW;YACX,YAAY;SACb,CAAC,CAAC;;IACL,CAAC;IAED,8CAAkB,GAAlB,UAAmB,SAA8B;QAC/C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE;YACrC,SAAS;YACT,MAAM;YACN,WAAW;YACX,YAAY;SACb,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACQ,IAAA,KAOF,IAAI,CAAC,KAAK,EANZ,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,KAAK,WAAA,EACO,EAAE,gBAAA,EACd,IAAI,UAAA,EACO,EAAE,eACD,CAAC;QAEf,IAAM,UAAU,GACd,QAAQ,KAAK,MAAM;YACjB,CAAC,CAAC,MAAM,CACJ,OAAO,EACP;gBACE,IAAI,EAAE,YAAY;aACnB,EACD;gBACE,UAAU,EAAE,KAAK,CAAC,IAAI;gBACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,YAAY,EAAE,KAAK,CAAC,QAAQ;gBAC5B,SAAS,EAAE,yBAAyB;aACrC,CACF;YACH,CAAC,CAAC,IAAI,CAAC;QAEX,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,mBAAmB,CAAC;YACpC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI;YACtC,IAAI,CAAC,CAAC,CAAC,CACN,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;gBACnB,IAAI,EAAE,KAAK,CAAC,MAAM;aACnB,CAAC,CACH,CAAC,CAAC,CAAC,CACF,4CAAO,EAAE,CAAC,+BAA+B,CAAC,CAAQ,CACnD;YACA,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CACtC,CACP,CAAC;IACJ,CAAC;IAnEM,8BAAY,GAAG;QACpB,SAAS,EAAE,OAAO;QAClB,UAAU,EAAE,OAAO;QACnB,OAAO,EAAE,EAAE;QACX,QAAQ,EAAE,KAAK;KAChB,CAAC;IA+DJ,wBAAC;CAAA,AArED,CAAuC,eAAK,CAAC,SAAS,GAqErD;AArEY,8CAAiB;AA2E9B;IAA+C,0DAAiB;IAAhE;;IAAkE,CAAC;IAAtD,yBAAyB;QAJrC,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,oBAAoB;YAC1B,SAAS,EAAE,4BAAe,CAAC,IAAI;SAChC,CAAC;OACW,yBAAyB,CAA6B;IAAD,gCAAC;CAAA,AAAnE,CAA+C,iBAAiB,GAAG;AAAtD,8DAAyB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {BaseSchema, SchemaCollection} from '../Schema';\nimport {IPaginationStore, PaginationStore} from '../store/pagination';\n\n/**\n * 分页容器功能性渲染器。详情请见：https://baidu.gitee.io/amis/docs/components/pagination-wrapper\n */\nexport interface PaginationWrapperSchema extends BaseSchema {\n  /**\n   * 指定为分页容器功能性渲染器\n   */\n  type: 'pagination-wrapper';\n\n  /**\n   * 是否显示快速跳转输入框\n   */\n  showPageInput?: boolean;\n\n  /**\n   * 最多显示多少个分页按钮。\n   *\n   * @default 5\n   */\n  maxButtons?: number;\n\n  /**\n   * 输入字段名\n   *\n   * @default items\n   */\n  inputName?: string;\n\n  /**\n   * 输出字段名\n   *\n   * @default items\n   */\n  outputName?: string;\n\n  /**\n   * 每页显示多条数据。\n   * @default 10\n   */\n  perPage?: number;\n\n  /**\n   * 分页显示位置，如果配置为 none 则需要自己在内容区域配置 pagination 组件，否则不显示。\n   */\n  position?: 'top' | 'bottom' | 'none';\n\n  /**\n   * 内容区域\n   */\n  body?: SchemaCollection;\n}\n\nexport interface PaginationWrapProps\n  extends RendererProps,\n    Omit<PaginationWrapperSchema, 'type' | 'className'> {\n  inputName: string;\n  outputName: string;\n  perPage: number;\n  store: IPaginationStore;\n}\n\nexport class PaginationWrapper extends React.Component<PaginationWrapProps> {\n  static defaultProps = {\n    inputName: 'items',\n    outputName: 'items',\n    perPage: 10,\n    position: 'top'\n  };\n\n  constructor(props: PaginationWrapProps) {\n    super(props);\n    props.store.syncProps(props, undefined, [\n      'perPage',\n      'mode',\n      'inputName',\n      'outputName'\n    ]);\n  }\n\n  componentDidUpdate(prevProps: PaginationWrapProps) {\n    const store = this.props.store;\n    store.syncProps(this.props, prevProps, [\n      'perPage',\n      'mode',\n      'inputName',\n      'outputName'\n    ]);\n  }\n\n  render() {\n    const {\n      position,\n      render,\n      store,\n      classnames: cx,\n      body,\n      translate: __\n    } = this.props;\n\n    const pagination =\n      position !== 'none'\n        ? render(\n            'pager',\n            {\n              type: 'pagination'\n            },\n            {\n              activePage: store.page,\n              lastPage: store.lastPage,\n              mode: store.mode,\n              onPageChange: store.switchTo,\n              className: 'PaginationWrapper-pager'\n            }\n          )\n        : null;\n\n    return (\n      <div className={cx('PaginationWrapper')}>\n        {position === 'top' ? pagination : null}\n        {body ? (\n          render('body', body, {\n            data: store.locals\n          })\n        ) : (\n          <span>{__('PaginationWrapper.placeholder')}</span>\n        )}\n        {position === 'bottom' ? pagination : null}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'pagination-wrapper',\n  storeType: PaginationStore.name\n})\nexport class PaginationWrapperRenderer extends PaginationWrapper {}\n"
    ]
}