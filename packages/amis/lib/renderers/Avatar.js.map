{
    "version": 3,
    "file": "Avatar.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Avatar.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA;;GAEG;AACH,6DAA0B;AAC1B,sCAAmD;AACnD,6EAA0C;AAC1C,6CAA2D;AAE3D,oDAA8E;AAiF9E;IAAiC,4CAA4B;IAA7D;;IA8DA,CAAC;IA5DC,4BAAM,GAAN;QACM,IAAA,KAgBA,IAAI,CAAC,KAAK,EAfZ,aAAU,EAAV,KAAK,mBAAG,EAAE,KAAA,EACV,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,GAAG,SAAA,EACH,YAAmB,EAAnB,IAAI,mBAAG,YAAY,KAAA,EACnB,GAAG,SAAA,EACH,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,GAAG,SAAA,EACH,GAAG,SAAA,EACH,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,OAAO,aAAA,EACP,IAAI,UACQ,CAAC;QAEf,IAAI,UAAU,GAAG,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC;QAE7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,IAAI;gBACF,UAAU,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAkB,CAAC;aAC9D;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAC1B;SACF;QAED,IAAI,IAAA,4BAAc,EAAC,GAAG,CAAC,EAAE;YACvB,GAAG,GAAG,IAAA,sCAAwB,EAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACpD;QAED,IAAI,IAAA,4BAAc,EAAC,IAAI,CAAC,EAAE;YACxB,IAAI,GAAG,IAAA,sCAAwB,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C;QAED,IAAI,IAAA,4BAAc,EAAC,IAAI,CAAC,EAAE;YACxB,IAAI,GAAG,IAAA,sCAAwB,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C;QAED,OAAO,CACL,8BAAC,gBAAM,IACL,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,EAAE,EACd,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,UAAU,GACnB,CACH,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AA9DD,CAAiC,eAAK,CAAC,SAAS,GA8D/C;AA9DY,kCAAW;AAoExB;IAAyC,oDAAW;IAApD;;IAAsD,CAAC;IAA1C,mBAAmB;QAJ/B,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,QAAQ;SACf,CAAC;QACD,iBAAS;OACG,mBAAmB,CAAuB;IAAD,0BAAC;CAAA,AAAvD,CAAyC,WAAW,GAAG;AAA1C,kDAAmB",
    "sourcesContent": [
        "/**\n * @file 用来展示用户头像\n */\nimport React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport Avatar from '../components/Avatar';\nimport {BadgeSchema, withBadge} from '../components/Badge';\nimport {BaseSchema, SchemaClassName} from '../Schema';\nimport {isPureVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\n\nexport interface AvatarSchema extends BaseSchema {\n  // 指定类型\n  type: 'avatar';\n\n  /**\n   * 类名\n   */\n  className?: SchemaClassName;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n\n  /**\n   * 角标\n   */\n  badge?: BadgeSchema;\n\n  /**\n   * 图片地址\n   */\n  src?: string;\n\n  /**\n   * 图标\n   */\n  icon?: string;\n\n  /**\n   * 图片相对于容器的缩放方式\n   */\n  fit?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';\n\n  /**\n   * 形状\n   */\n  shape?: 'circle' | 'square' | 'rounded';\n\n  /**\n   * 大小\n   */\n  size?: number | 'small' | 'default' | 'large';\n\n  /**\n   * 文本\n   */\n  text?: string;\n\n  /**\n   * 字符类型距离左右两侧边界单位像素\n   */\n  gap?: number;\n\n  /**\n   * 图片无法显示时的替换文字地址\n   */\n  alt?: string;\n\n  /**\n   * 图片是否允许拖动\n   */\n  draggable?: boolean;\n\n  /**\n   * 图片CORS属性\n   */\n  crossOrigin: 'anonymous' | 'use-credentials' | '';\n\n  /**\n   * 图片加载失败的是否默认处理，字符串函数\n   */\n  onError?: string\n}\n\nexport interface AvatarProps extends RendererProps, Omit<AvatarSchema, 'type' | 'className'> {}\n\nexport class AvatarField extends React.Component<AvatarProps> {\n\n  render() {\n    let {\n      style = {},\n      className,\n      classnames: cx,\n      src,\n      icon = 'fa fa-user',\n      fit,\n      shape,\n      size,\n      text,\n      gap,\n      alt,\n      draggable,\n      crossOrigin,\n      onError,\n      data\n    } = this.props;\n\n    let errHandler = () => false;\n\n    if (typeof onError === 'string') {\n      try {\n        errHandler = new Function('event', onError) as () => boolean;\n      } catch (e) {\n        console.warn(onError, e);\n      }\n    }\n\n    if (isPureVariable(src)) {\n      src = resolveVariableAndFilter(src, data, '| raw');\n    }\n\n    if (isPureVariable(text)) {\n      text = resolveVariableAndFilter(text, data);\n    }\n\n    if (isPureVariable(icon)) {\n      icon = resolveVariableAndFilter(icon, data);\n    }\n\n    return (\n      <Avatar\n        style={style}\n        className={className}\n        classnames={cx}\n        src={src}\n        icon={icon}\n        fit={fit}\n        shape={shape}\n        size={size}\n        text={text}\n        gap={gap}\n        alt={alt}\n        draggable={draggable}\n        crossOrigin={crossOrigin}\n        onError={errHandler}\n      />\n    );\n  }\n}\n\n@Renderer({\n  type: 'avatar'\n})\n@withBadge\nexport class AvatarFieldRenderer extends AvatarField {}\n"
    ]
}