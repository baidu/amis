{
    "version": 3,
    "file": "Grid.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Grid.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Schema} from '../types';\nimport pick from 'lodash/pick';\nimport {\n  BaseSchema,\n  SchemaClassName,\n  SchemaCollection,\n  SchemaObject\n} from '../Schema';\nimport {FormSchemaHorizontal} from './Form/index';\nimport {ucFirst} from '../utils/helper';\n\nexport const ColProps = ['lg', 'md', 'sm', 'xs'];\n\nexport type GridColumnObject = {\n  /**\n   * 极小屏（<768px）时宽度占比\n   */\n  xs?: number | 'auto';\n\n  /**\n   * 小屏时（>=768px）宽度占比\n   */\n  sm?: number | 'auto';\n\n  /**\n   * 中屏时(>=992px)宽度占比\n   */\n  md?: number | 'auto';\n\n  /**\n   * 大屏时(>=1200px)宽度占比\n   */\n  lg?: number | 'auto';\n\n  /**\n   * 垂直对齐方式\n   */\n  valign?: 'top' | 'middle' | 'bottom' | 'between';\n\n  /**\n   * 配置子表单项默认的展示方式。\n   */\n  mode?: 'normal' | 'inline' | 'horizontal';\n\n  /**\n   * 如果是水平排版，这个属性可以细化水平排版的左右宽度占比。\n   */\n  horizontal?: FormSchemaHorizontal;\n\n  body?: SchemaCollection;\n\n  /**\n   * 列类名\n   */\n  columnClassName?: SchemaClassName;\n};\n\nexport type GridColumn = GridColumnObject;\nexport type ColumnNode = GridColumn;\nexport interface ColumnArray extends Array<ColumnNode> {}\n\n/**\n * Grid 格子布局渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/grid\n */\nexport interface GridSchema extends BaseSchema {\n  /**\n   * 指定为 Grid 格子布局渲染器。\n   */\n  type: 'grid';\n\n  /**\n   * 列集合\n   */\n  columns: Array<GridColumn>;\n\n  /**\n   * 水平间距\n   */\n  gap?: 'xs' | 'sm' | 'base' | 'none' | 'md' | 'lg';\n\n  /**\n   * 垂直对齐方式\n   */\n  valign?: 'top' | 'middle' | 'bottom' | 'between';\n\n  /**\n   * 水平对齐方式\n   */\n  align?: 'left' | 'right' | 'between' | 'center';\n}\n\nexport interface GridProps\n  extends RendererProps,\n    Omit<GridSchema, 'type' | 'className' | 'columnClassName'> {\n  itemRender?: (item: any, length: number, props: any) => JSX.Element;\n}\n\nfunction fromBsClass(cn: string) {\n  if (typeof cn === 'string' && cn) {\n    return cn.replace(\n      /\\bcol-(xs|sm|md|lg)-(\\d+)\\b/g,\n      (_, bp, size) => `Grid-col--${bp}${size}`\n    );\n  }\n\n  return cn;\n}\n\nfunction copProps2Class(props: any): string {\n  const cns: Array<string> = [];\n  const modifiers = ColProps;\n\n  modifiers.forEach(\n    modifier =>\n      props &&\n      props[modifier] &&\n      cns.push(`Grid-col--${modifier}${ucFirst(props[modifier])}`)\n  );\n  cns.length || cns.push('Grid-col--md');\n  return cns.join(' ');\n}\n\nexport default class Grid<T> extends React.Component<GridProps & T, object> {\n  static propsList: Array<string> = ['columns'];\n  static defaultProps = {};\n\n  renderChild(\n    region: string,\n    node: SchemaCollection,\n    length: number,\n    props: any = {}\n  ) {\n    const {render, itemRender} = this.props;\n\n    return itemRender\n      ? itemRender(node, length, this.props)\n      : render(region, node, props);\n  }\n\n  renderColumn(column: ColumnNode, key: number, length: number) {\n    let colProps: {\n      [propName: string]: any;\n    } = pick(column, ColProps);\n\n    colProps = {\n      ...colProps\n    };\n\n    const {\n      classnames: cx,\n      formMode,\n      subFormMode,\n      subFormHorizontal,\n      formHorizontal,\n      translate: __,\n      disabled\n    } = this.props;\n\n    return (\n      <div\n        key={key}\n        className={cx(\n          copProps2Class(colProps),\n          fromBsClass((column as any).columnClassName!),\n          {\n            [`Grid-col--v${ucFirst(column.valign)}`]: column.valign\n          }\n        )}\n      >\n        {this.renderChild(`column/${key}`, (column as any).body || '', length, {\n          disabled,\n          formMode: column.mode || subFormMode || formMode,\n          formHorizontal:\n            column.horizontal || subFormHorizontal || formHorizontal\n        })}\n      </div>\n    );\n  }\n\n  renderColumns(columns: ColumnArray) {\n    return Array.isArray(columns)\n      ? columns.map((column, key) =>\n          this.renderColumn(column, key, columns.length)\n        )\n      : null;\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      gap,\n      valign: vAlign,\n      align: hAlign\n    } = this.props;\n    return (\n      <div\n        className={cx(\n          'Grid',\n          {\n            [`Grid--${gap}`]: gap,\n            [`Grid--v${ucFirst(vAlign)}`]: vAlign,\n            [`Grid--h${ucFirst(hAlign)}`]: hAlign\n          },\n          className\n        )}\n      >\n        {this.renderColumns(this.props.columns)}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'grid'\n})\nexport class GridRenderer extends Grid<{}> {}\n"
    ]
}