{
    "version": 3,
    "file": "Scoped.js",
    "sourceRoot": "",
    "sources": [
        "/src/Scoped.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file 用来创建一个域，在这个域里面会把里面的运行时实例注册进来，方便组件之间的通信。\n * @author fex\n */\n\nimport React from 'react';\nimport find from 'lodash/find';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {dataMapping} from './utils/tpl-builtin';\nimport {RendererEnv, RendererProps} from './factory';\nimport {\n  noop,\n  autobind,\n  qsstringify,\n  qsparse,\n  createObject,\n  findTree,\n  TreeItem\n} from './utils/helper';\nimport {RendererData, Action} from './types';\n\nexport interface ScopedComponentType extends React.Component<RendererProps> {\n  focus?: () => void;\n  doAction?: (\n    action: Action,\n    data: RendererData,\n    throwErrors?: boolean\n  ) => void;\n  receive?: (values: RendererData, subPath?: string) => void;\n  reload?: (\n    subPath?: string,\n    query?: RendererData | null,\n    ctx?: RendererData\n  ) => void;\n  context: any;\n}\n\nexport interface IScopedContext {\n  parent?: AliasIScopedContext;\n  children?: AliasIScopedContext[];\n  registerComponent: (component: ScopedComponentType) => void;\n  unRegisterComponent: (component: ScopedComponentType) => void;\n  getComponentByName: (name: string) => ScopedComponentType;\n  getComponentById: (id: string) => ScopedComponentType | undefined;\n  getComponents: () => Array<ScopedComponentType>;\n  reload: (target: string, ctx: RendererData) => void;\n  send: (target: string, ctx: RendererData) => void;\n  close: (target: string) => void;\n  closeById: (target: string) => void;\n}\ntype AliasIScopedContext = IScopedContext;\nexport const ScopedContext = React.createContext(createScopedTools(''));\n\nfunction createScopedTools(\n  path?: string,\n  parent?: AliasIScopedContext,\n  env?: RendererEnv\n): IScopedContext {\n  const components: Array<ScopedComponentType> = [];\n  const self = {\n    parent,\n    registerComponent(component: ScopedComponentType) {\n      // 不要把自己注册在自己的 Scoped 上，自己的 Scoped 是给子节点们注册的。\n      if (component.props.$path === path && parent) {\n        return parent.registerComponent(component);\n      }\n\n      if (!~components.indexOf(component)) {\n        components.push(component);\n      }\n    },\n\n    unRegisterComponent(component: ScopedComponentType) {\n      // 自己本身实际上注册在父级 Scoped 上。\n      if (component.props.$path === path && parent) {\n        return parent.unRegisterComponent(component);\n      }\n\n      const idx = components.indexOf(component);\n\n      if (~idx) {\n        components.splice(idx, 1);\n      }\n    },\n\n    getComponentByName(name: string) {\n      if (~name.indexOf('.')) {\n        const paths = name.split('.');\n        const len = paths.length;\n\n        return paths.reduce((scope, name, idx) => {\n          if (scope && scope.getComponentByName) {\n            const result: ScopedComponentType = scope.getComponentByName(name);\n            return result && idx < len - 1 ? result.context : result;\n          }\n\n          return null;\n        }, this);\n      }\n\n      const resolved = find(\n        components,\n        component =>\n          component.props.name === name || component.props.id === name\n      );\n      return resolved || (parent && parent.getComponentByName(name));\n    },\n\n    getComponentById(id: string) {\n      let root: AliasIScopedContext = this;\n      // 找到顶端scoped\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      // 向下查找\n      let component = undefined;\n      findTree([root], (item: TreeItem) =>\n        item.getComponents().find((cmpt: ScopedComponentType) => {\n          if (cmpt.props.id === id) {\n            component = cmpt;\n            return true;\n          }\n          return false;\n        })\n      ) as ScopedComponentType | undefined;\n      return component;\n    },\n\n    getComponents() {\n      return components.concat();\n    },\n\n    reload(target: string | Array<string>, ctx: any) {\n      const scoped = this;\n\n      let targets =\n        typeof target === 'string' ? target.split(/\\s*,\\s*/) : target;\n      targets.forEach(name => {\n        const idx2 = name.indexOf('?');\n        let query = null;\n\n        if (~idx2) {\n          const queryObj = qsparse(\n            name\n              .substring(idx2 + 1)\n              .replace(\n                /\\$\\{(.*?)\\}/,\n                (_, match) => '${' + encodeURIComponent(match) + '}'\n              )\n          );\n          query = dataMapping(queryObj, ctx);\n          name = name.substring(0, idx2);\n        }\n\n        const idx = name.indexOf('.');\n        let subPath = '';\n\n        if (~idx) {\n          subPath = name.substring(1 + idx);\n          name = name.substring(0, idx);\n        }\n\n        if (name === 'window') {\n          if (query) {\n            const link = location.pathname + '?' + qsstringify(query);\n            env ? env.updateLocation(link, true) : location.replace(link);\n          } else {\n            location.reload();\n          }\n        } else {\n          const component = scoped.getComponentByName(name);\n          component &&\n            component.reload &&\n            component.reload(subPath, query, ctx);\n        }\n      });\n    },\n\n    send(receive: string | Array<string>, values: object) {\n      const scoped = this;\n      let receives =\n        typeof receive === 'string' ? receive.split(/\\s*,\\s*/) : receive;\n\n      // todo 没找到做提示！\n      receives.forEach(name => {\n        const askIdx = name.indexOf('?');\n        if (~askIdx) {\n          const query = name.substring(askIdx + 1);\n          const queryObj = qsparse(\n            query.replace(\n              /\\$\\{(.*?)\\}/,\n              (_, match) => '${' + encodeURIComponent(match) + '}'\n            )\n          );\n\n          name = name.substring(0, askIdx);\n          values = dataMapping(queryObj, values);\n        }\n\n        const idx = name.indexOf('.');\n        let subPath = '';\n\n        if (~idx) {\n          subPath = name.substring(1 + idx);\n          name = name.substring(0, idx);\n        }\n\n        const component = scoped.getComponentByName(name);\n\n        if (component && component.receive) {\n          component.receive(values, subPath);\n        } else if (name === 'window' && env && env.updateLocation) {\n          const query = {\n            ...(location.search ? qsparse(location.search.substring(1)) : {}),\n            ...values\n          };\n          const link = location.pathname + '?' + qsstringify(query);\n          env.updateLocation(link, true);\n        }\n      });\n    },\n\n    /**\n     * 主要是用来关闭指定弹框的\n     *\n     * @param target 目标 name\n     */\n    close(target: string | boolean) {\n      const scoped = this;\n\n      if (typeof target === 'string') {\n        // 过滤已经关掉的，当用户 close 配置多个弹框 name 时会出现这种情况\n        target\n          .split(/\\s*,\\s*/)\n          .map(name => scoped.getComponentByName(name))\n          .filter(component => component && component.props.show)\n          .forEach(closeDialog);\n      }\n    },\n\n    /**\n     * 关闭指定id的弹窗\n     * @param id\n     */\n    closeById(id: string) {\n      const scoped = this;\n      const component: any = scoped.getComponentById(id);\n      if (component && component.props.show) {\n        closeDialog(component);\n      }\n    }\n  };\n\n  if (!parent) {\n    return self;\n  }\n\n  !parent.children && (parent.children = []);\n\n  // 把孩子带上\n  parent.children!.push(self);\n\n  return self;\n}\n\nfunction closeDialog(component: ScopedComponentType) {\n  (component.context as IScopedContext)\n    .getComponents()\n    .filter(\n      item =>\n        item &&\n        (item.props.type === 'dialog' || item.props.type === 'drawer') &&\n        item.props.show\n    )\n    .forEach(closeDialog);\n  component.props.onClose && component.props.onClose();\n}\n\nexport function HocScoped<\n  T extends {\n    $path?: string;\n    env: RendererEnv;\n  }\n>(\n  ComposedComponent: React.ComponentType<T>\n): React.ComponentType<\n  T & {\n    scopeRef?: (ref: any) => void;\n  }\n> & {\n  ComposedComponent: React.ComponentType<T>;\n} {\n  type ScopedProps = T & {\n    scopeRef?: (ref: any) => void;\n  };\n  class ScopedComponent extends React.Component<ScopedProps> {\n    static displayName = `Scoped(${\n      ComposedComponent.displayName || ComposedComponent.name\n    })`;\n    static contextType = ScopedContext;\n    static ComposedComponent = ComposedComponent;\n    ref: any;\n    scoped?: IScopedContext;\n\n    constructor(props: ScopedProps, context: IScopedContext) {\n      super(props);\n\n      this.scoped = createScopedTools(\n        this.props.$path,\n        context,\n        this.props.env\n      );\n\n      const scopeRef = props.scopeRef;\n      scopeRef && scopeRef(this.scoped);\n    }\n\n    getWrappedInstance() {\n      return this.ref;\n    }\n\n    @autobind\n    childRef(ref: any) {\n      while (ref && ref.getWrappedInstance) {\n        ref = ref.getWrappedInstance();\n      }\n\n      this.ref = ref;\n    }\n\n    componentWillUnmount() {\n      const scopeRef = this.props.scopeRef;\n      scopeRef && scopeRef(null);\n      delete this.scoped;\n    }\n\n    render() {\n      const {scopeRef, ...rest} = this.props;\n\n      return (\n        <ScopedContext.Provider value={this.scoped!}>\n          <ComposedComponent\n            {\n              ...(rest as any) /* todo */\n            }\n            ref={this.childRef}\n          />\n        </ScopedContext.Provider>\n      );\n    }\n  }\n\n  hoistNonReactStatic(ScopedComponent, ComposedComponent);\n  return ScopedComponent;\n}\n\nexport default HocScoped;\n"
    ]
}