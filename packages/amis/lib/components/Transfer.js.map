{
    "version": 3,
    "file": "Transfer.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Transfer.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {ThemeProps, themeable} from '../theme';\nimport {BaseSelectionProps, BaseSelection, ItemRenderStates} from './Selection';\nimport {Options, Option} from './Select';\nimport {uncontrollable} from 'uncontrollable';\nimport ResultList from './ResultList';\nimport TableSelection from './TableSelection';\nimport TreeSelection from './TreeSelection';\nimport {autobind, flattenTree} from '../utils/helper';\nimport InputBox from './InputBox';\nimport {Icon} from './icons';\nimport debounce from 'lodash/debounce';\nimport AssociatedSelection from './AssociatedSelection';\nimport {LocaleProps, localeable} from '../locale';\nimport GroupedSelection from './GroupedSelection';\nimport ChainedSelection from './ChainedSelection';\nimport {ItemRenderStates as ResultItemRenderStates} from './ResultList';\n\nexport interface TransferProps\n  extends ThemeProps,\n    LocaleProps,\n    Omit<BaseSelectionProps, 'itemRender'> {\n  inline?: boolean;\n  statistics?: boolean;\n  showArrow?: boolean;\n  multiple?: boolean;\n\n  selectTitle?: string;\n  selectMode?: 'table' | 'group' | 'list' | 'tree' | 'chained' | 'associated';\n  columns?: Array<{\n    name: string;\n    label: string;\n    [propName: string]: any;\n  }>;\n  cellRender?: (\n    column: {\n      name: string;\n      label: string;\n      [propName: string]: any;\n    },\n    option: Option,\n    colIndex: number,\n    rowIndex: number\n  ) => JSX.Element;\n  leftOptions?: Array<Option>;\n  leftMode?: 'tree' | 'list' | 'group';\n  leftDefaultValue?: any;\n  rightMode?: 'table' | 'list' | 'group' | 'tree' | 'chained';\n\n  // search 相关\n  searchResultMode?: 'table' | 'list' | 'group' | 'tree' | 'chained';\n  searchResultColumns?: Array<{\n    name: string;\n    label: string;\n    [propName: string]: any;\n  }>;\n  searchPlaceholder?: string;\n  noResultsText?: string;\n  onChange?: (value: Array<Option>, optionModified?: boolean) => void;\n  onSearch?: (\n    term: string,\n    setCancel: (cancel: () => void) => void\n  ) => Promise<Options | void>;\n\n  // 自定义选择框相关\n  selectRender?: (\n    props: Omit<TransferProps, 'onSearch'> & {\n      onSearch: (text: string) => void;\n      onSearchCancel: () => void;\n      searchResult: Options | null;\n    }\n  ) => JSX.Element;\n\n  resultTitle?: string;\n  optionItemRender?: (option: Option, states: ItemRenderStates) => JSX.Element;\n  resultItemRender?: (\n    option: Option,\n    states: ResultItemRenderStates\n  ) => JSX.Element;\n  sortable?: boolean;\n  onRef?: (ref: Transfer) => void;\n  onSelectAll?: (options: Options) => void;\n}\n\nexport interface TransferState {\n  inputValue: string;\n  searchResult: Options | null;\n}\n\nexport class Transfer<\n  T extends TransferProps = TransferProps\n> extends React.Component<T, TransferState> {\n  static defaultProps: Pick<TransferProps, 'multiple'> = {\n    multiple: true\n  };\n\n  state = {\n    inputValue: '',\n    searchResult: null\n  };\n\n  valueArray: Options;\n  availableOptions: Options;\n  unmounted = false;\n  cancelSearch?: () => void;\n\n  componentDidMount() {\n    this.props?.onRef?.(this);\n  }\n\n  componentWillUnmount() {\n    this.lazySearch.cancel();\n    this.unmounted = true;\n  }\n\n  @autobind\n  toggleAll() {\n    const {options, option2value, onChange, value, onSelectAll} = this.props;\n    let valueArray = BaseSelection.value2array(value, options, option2value);\n    const availableOptions = flattenTree(options).filter(\n      (option, index, list) =>\n        !option.disabled &&\n        option.value !== void 0 &&\n        list.indexOf(option) === index\n    );\n\n    if (valueArray.length < availableOptions.length) {\n      valueArray = availableOptions;\n    } else {\n      valueArray = [];\n    }\n\n    let newValue: string | Options = option2value\n      ? valueArray.map(item => option2value(item))\n      : valueArray;\n\n    // > 0 全选。TODO：由于未来可能有逻辑：禁用清空不了，这里判断全选，得完善下\n    newValue.length > 0 && onSelectAll?.(newValue);\n\n    onChange?.(newValue);\n  }\n\n  // 全选，给予动作全选使用\n  selectAll() {\n    const {options, option2value, onChange} = this.props;;\n    const availableOptions = flattenTree(options).filter(\n      (option, index, list) =>\n        !option.disabled &&\n        option.value !== void 0 &&\n        list.indexOf(option) === index\n    );\n    let newValue: string | Options = option2value\n      ? availableOptions.map(item => option2value(item))\n      : availableOptions;\n    onChange?.(newValue);\n  }\n\n  @autobind\n  clearAll() {\n    const {onChange} = this.props;\n    onChange && onChange([]);\n  }\n\n  @autobind\n  handleSearchKeyDown(e: React.KeyboardEvent<any>) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  @autobind\n  handleSearch(text: string) {\n    // text 有值的时候，走搜索否则直接走 handleSeachCancel ，等同于右侧的 clear 按钮\n    if (text) {\n      this.setState(\n        {\n          inputValue: text\n        },\n        () => {\n          // 如果有取消搜索，先取消掉。\n          this.cancelSearch && this.cancelSearch();\n          this.lazySearch(text);\n        }\n      );\n    } else {\n      this.handleSeachCancel();\n    }\n  }\n\n  @autobind\n  handleSeachCancel() {\n    this.setState({\n      inputValue: '',\n      searchResult: null\n    });\n  }\n\n  lazySearch = debounce(\n    (text: string) => {\n      (async (text: string) => {\n        const onSearch = this.props.onSearch!;\n        let result = await onSearch(\n          text,\n          (cancelExecutor: () => void) => (this.cancelSearch = cancelExecutor)\n        );\n\n        if (this.unmounted) {\n          return;\n        }\n\n        if (!Array.isArray(result)) {\n          throw new Error('onSearch 需要返回数组');\n        }\n\n        this.setState({\n          searchResult: result\n        });\n      })(text).catch(e => console.error(e));\n    },\n    250,\n    {\n      trailing: true,\n      leading: false\n    }\n  );\n\n  renderSelect(\n    props: TransferProps & {\n      onToggleAll?: () => void;\n    }\n  ) {\n    const {\n      selectRender,\n      selectMode,\n      classnames: cx,\n      selectTitle,\n      onSearch,\n      disabled,\n      options,\n      statistics,\n      translate: __\n    } = props;\n\n    if (selectRender) {\n      return selectRender({\n        ...props,\n        onSearch: this.handleSearch,\n        onSearchCancel: this.handleSeachCancel,\n        searchResult: this.state.searchResult\n      });\n    }\n\n    return (\n      <>\n        <div\n          className={cx(\n            'Transfer-title',\n            selectMode === 'table' ? 'Transfer-title--light' : ''\n          )}\n        >\n          <span>\n            {__(selectTitle || 'Transfer.available')}\n            {statistics !== false ? (\n              <span>\n                （{this.valueArray.length}/{this.availableOptions.length}）\n              </span>\n            ) : null}\n          </span>\n          {selectMode !== 'table' ? (\n            <a\n              onClick={props.onToggleAll || this.toggleAll}\n              className={cx(\n                'Transfer-checkAll',\n                disabled || !options.length ? 'is-disabled' : ''\n              )}\n            >\n              {__('Select.checkAll')}\n            </a>\n          ) : null}\n        </div>\n\n        {onSearch ? (\n          <div className={cx('Transfer-search')}>\n            <InputBox\n              value={this.state.inputValue}\n              onChange={this.handleSearch}\n              placeholder={__('Transfer.searchKeyword')}\n              clearable={false}\n              onKeyDown={this.handleSearchKeyDown}\n            >\n              {this.state.searchResult !== null ? (\n                <a onClick={this.handleSeachCancel}>\n                  <Icon icon=\"close\" className=\"icon\" />\n                </a>\n              ) : (\n                <Icon icon=\"search\" className=\"icon\" />\n              )}\n            </InputBox>\n          </div>\n        ) : null}\n\n        {this.state.searchResult !== null\n          ? this.renderSearchResult(props)\n          : this.renderOptions(props)}\n      </>\n    );\n  }\n\n  renderSearchResult(props: TransferProps) {\n    const {\n      searchResultMode,\n      selectMode,\n      noResultsText,\n      searchResultColumns,\n      columns,\n      classnames: cx,\n      value,\n      disabled,\n      onChange,\n      option2value,\n      optionItemRender,\n      cellRender,\n      multiple\n    } = props;\n    const options = this.state.searchResult || [];\n    const mode = searchResultMode || selectMode;\n    const resultColumns = searchResultColumns || columns;\n\n    return mode === 'table' ? (\n      <TableSelection\n        placeholder={noResultsText}\n        className={cx('Transfer-selection')}\n        columns={resultColumns!}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        cellRender={cellRender}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : mode === 'tree' ? (\n      <TreeSelection\n        placeholder={noResultsText}\n        className={cx('Transfer-selection')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : mode === 'chained' ? (\n      <ChainedSelection\n        placeholder={noResultsText}\n        className={cx('Transfer-selection')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : (\n      <GroupedSelection\n        placeholder={noResultsText}\n        className={cx('Transfer-selection')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    );\n  }\n\n  renderOptions(props: TransferProps) {\n    const {\n      selectMode,\n      columns,\n      options,\n      value,\n      disabled,\n      onChange,\n      option2value,\n      classnames: cx,\n      onDeferLoad,\n      leftOptions,\n      leftMode,\n      rightMode,\n      cellRender,\n      leftDefaultValue,\n      optionItemRender,\n      multiple\n    } = props;\n\n    return selectMode === 'table' ? (\n      <TableSelection\n        className={cx('Transfer-selection')}\n        columns={columns!}\n        options={options || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        cellRender={cellRender}\n        multiple={multiple}\n      />\n    ) : selectMode === 'tree' ? (\n      <TreeSelection\n        className={cx('Transfer-selection')}\n        options={options || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : selectMode === 'chained' ? (\n      <ChainedSelection\n        className={cx('Transfer-selection')}\n        options={options || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : selectMode === 'associated' ? (\n      <AssociatedSelection\n        className={cx('Transfer-selection')}\n        options={options || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        columns={columns}\n        leftOptions={leftOptions || []}\n        leftMode={leftMode}\n        rightMode={rightMode}\n        leftDefaultValue={leftDefaultValue}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    ) : (\n      <GroupedSelection\n        className={cx('Transfer-selection')}\n        options={options || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        itemRender={optionItemRender}\n        multiple={multiple}\n      />\n    );\n  }\n\n  render() {\n    const {\n      inline,\n      classnames: cx,\n      className,\n      value,\n      onChange,\n      resultTitle,\n      sortable,\n      options,\n      option2value,\n      disabled,\n      statistics,\n      showArrow,\n      resultItemRender,\n      translate: __\n    } = this.props;\n\n    this.valueArray = BaseSelection.value2array(value, options, option2value);\n    this.availableOptions = flattenTree(options).filter(\n      (option, index, list) =>\n        !option.disabled &&\n        option.value !== void 0 &&\n        list.indexOf(option) === index\n    );\n\n    return (\n      <div\n        className={cx('Transfer', className, inline ? 'Transfer--inline' : '')}\n      >\n        <div className={cx('Transfer-select')}>\n          {this.renderSelect(this.props)}\n        </div>\n        <div className={cx('Transfer-mid')}>\n          {showArrow /*todo 需要改成确认模式，即：点了按钮才到右边 */ ? (\n            <div className={cx('Transfer-arrow')}>\n              <Icon icon=\"right-arrow\" className=\"icon\" />\n            </div>\n          ) : null}\n        </div>\n        <div className={cx('Transfer-result')}>\n          <div className={cx('Transfer-title')}>\n            <span>\n              {__(resultTitle || 'Transfer.selectd')}\n              {statistics !== false ? (\n                <span>\n                  （{this.valueArray.length}/{this.availableOptions.length}）\n                </span>\n              ) : null}\n            </span>\n            <a\n              onClick={this.clearAll}\n              className={cx(\n                'Transfer-clearAll',\n                disabled || !this.valueArray.length ? 'is-disabled' : ''\n              )}\n            >\n              {__('clear')}\n            </a>\n          </div>\n          <ResultList\n            className={cx('Transfer-value')}\n            sortable={sortable}\n            disabled={disabled}\n            value={value}\n            onChange={onChange}\n            placeholder={__('Transfer.selectFromLeft')}\n            itemRender={resultItemRender}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(class extends Transfer {}, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}