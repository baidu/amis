{
    "version": 3,
    "file": "ArrayInput.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/ArrayInput.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {ThemeProps, themeable} from '../theme';\nimport {LocaleProps, localeable} from '../locale';\nimport InputBox from './InputBox';\nimport {Icon} from './icons';\nimport Button from './Button';\nimport {autobind, guid} from '../utils/helper';\nimport {uncontrollable} from 'uncontrollable';\nimport Sortable from 'sortablejs';\nimport {findDOMNode} from 'react-dom';\n\nexport interface ArrayInputProps extends ThemeProps, LocaleProps {\n  value?: Array<any>;\n  onChange?: (value: Array<any>) => void;\n  placeholder: string;\n  itemRender: (props: {\n    value: any;\n    onChange: (value: any) => void;\n    index: number;\n    disabled?: boolean;\n  }) => JSX.Element;\n  itemInitalValue?: any;\n  maxLength?: number;\n  minLength?: number;\n  disabled?: boolean;\n  sortable?: boolean;\n  removable?: boolean;\n  addable?: boolean;\n  editable?: boolean;\n  sortTip?: string;\n}\n\nexport class ArrayInput extends React.Component<ArrayInputProps> {\n  static defaultProps = {\n    placeholder: 'empty',\n    itemRender: ({\n      value,\n      onChange\n    }: {\n      value: any;\n      onChange: (value: any) => void;\n      index: number;\n      disabled?: boolean;\n    }) => <InputBox value={value} onChange={onChange} />\n  };\n\n  id: string = guid();\n  dragTip?: HTMLElement;\n  sortable?: Sortable;\n\n  handleItemOnChange(index: number, itemValue: any) {\n    const {onChange} = this.props;\n    const value = this.props.value;\n    const newValue = Array.isArray(value) ? value.concat() : [];\n    newValue.splice(index, 1, itemValue);\n    onChange?.(newValue);\n  }\n\n  @autobind\n  dragTipRef(ref: any) {\n    if (!this.dragTip && ref) {\n      this.initDragging();\n    } else if (this.dragTip && !ref) {\n      this.destroyDragging();\n    }\n\n    this.dragTip = ref;\n  }\n\n  @autobind\n  handleAdd() {\n    const {value, onChange, itemInitalValue} = this.props;\n    const newValue = Array.isArray(value) ? value.concat() : [];\n\n    newValue.push(itemInitalValue);\n\n    onChange?.(newValue);\n  }\n\n  @autobind\n  handleRemove(e: React.MouseEvent<HTMLElement>) {\n    const indx = parseInt(e.currentTarget.getAttribute('data-index')!, 10);\n    const {value, onChange, itemInitalValue} = this.props;\n    const newValue = Array.isArray(value) ? value.concat() : [];\n    newValue.splice(indx, 1);\n    onChange?.(newValue);\n  }\n\n  initDragging() {\n    const onChange = this.props.onChange;\n    const ns = this.props.classPrefix;\n    const dom = findDOMNode(this) as HTMLElement;\n    this.sortable = new Sortable(\n      dom.querySelector(`.drag-group`) as HTMLElement,\n      {\n        group: `array-input-${this.id}`,\n        animation: 150,\n        handle: `.drag-bar`,\n        ghostClass: `${ns}ArrayInput-item--dragging`,\n        onEnd: (e: any) => {\n          // 没有移动\n          if (e.newIndex === e.oldIndex) {\n            return;\n          }\n\n          // 换回来\n          const parent = e.to as HTMLElement;\n          if (\n            e.newIndex < e.oldIndex &&\n            e.oldIndex < parent.childNodes.length - 1\n          ) {\n            parent.insertBefore(e.item, parent.childNodes[e.oldIndex + 1]);\n          } else if (e.oldIndex < parent.childNodes.length - 1) {\n            parent.insertBefore(e.item, parent.childNodes[e.oldIndex]);\n          } else {\n            parent.appendChild(e.item);\n          }\n\n          const value = this.props.value;\n          if (!Array.isArray(value)) {\n            return;\n          }\n          const newValue = value.concat();\n          newValue.splice(e.newIndex, 0, newValue.splice(e.oldIndex, 1)[0]);\n          onChange?.(newValue);\n        }\n      }\n    );\n  }\n\n  destroyDragging() {\n    this.sortable && this.sortable.destroy();\n  }\n\n  renderItem(value: any, index: number, collection: Array<any>) {\n    const {\n      itemRender,\n      disabled,\n      classnames: cx,\n      sortable,\n      removable,\n      minLength\n    } = this.props;\n\n    return (\n      <div className={cx('ArrayInput-item')} key={index}>\n        {sortable && collection.length > 1 && !disabled ? (\n          <a className={cx('ArrayInput-itemDrager drag-bar')}>\n            <Icon icon=\"drag-bar\" className=\"icon\" />\n          </a>\n        ) : null}\n\n        {itemRender({\n          value,\n          onChange: this.handleItemOnChange.bind(this, index),\n          index,\n          disabled\n        })}\n\n        {removable !== false &&\n        !disabled &&\n        (!minLength || collection.length > minLength) ? (\n          <a\n            data-index={index}\n            className={cx('ArrayInput-itemRemove')}\n            onClick={this.handleRemove}\n          >\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n        ) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      value,\n      placeholder,\n      translate: __,\n      maxLength,\n      sortable,\n      sortTip,\n      disabled\n    } = this.props;\n\n    return (\n      <div className={cx('ArrayInput')}>\n        {Array.isArray(value) && value.length ? (\n          <div className={cx('ArrayInput-items drag-group')}>\n            {value.map((item, index) => this.renderItem(item, index, value))}\n          </div>\n        ) : (\n          <div className={cx('ArrayInput-placeholder')}>{__(placeholder)}</div>\n        )}\n\n        <div\n          className={cx(\n            'ArrayInput-toolbar',\n            sortable && Array.isArray(value) && value.length > 1\n              ? 'ArrayInput-toolbar--dnd'\n              : ''\n          )}\n        >\n          {!Array.isArray(value) || !maxLength || value.length < maxLength ? (\n            <Button\n              className={cx('ArrayInput-addBtn')}\n              onClick={this.handleAdd}\n              level=\"\"\n              disabled={disabled}\n            >\n              <Icon icon=\"plus\" className=\"icon\" />\n              <span>{__('Combo.add')}</span>\n            </Button>\n          ) : null}\n\n          {sortable && Array.isArray(value) && value.length ? (\n            <span className={cx(`ArrayInput-sortTip`)} ref={this.dragTipRef}>\n              {Array.isArray(value) && value.length > 1 ? __(sortTip) : ''}\n            </span>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(ArrayInput, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}