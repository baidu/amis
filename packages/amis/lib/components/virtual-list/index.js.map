{
    "version": 3,
    "file": "index.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/virtual-list/index.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 基于 https://github.com/clauderic/react-tiny-virtual-list 改造，主要是加了宽度自适应\n */\n\nimport * as React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport SizeAndPositionManager, {ItemSize} from './SizeAndPositionManager';\nimport {\n  ALIGNMENT,\n  DIRECTION,\n  SCROLL_CHANGE_REASON,\n  marginProp,\n  oppositeMarginProp,\n  positionProp,\n  scrollProp,\n  sizeProp\n} from './constants';\n\nexport {DIRECTION as ScrollDirection} from './constants';\n\nexport type ItemPosition = 'absolute' | 'sticky';\n\nexport interface ItemStyle {\n  position: ItemPosition;\n  top?: number;\n  left: number;\n  width: string | number;\n  height?: number;\n  marginTop?: number;\n  marginLeft?: number;\n  marginRight?: number;\n  marginBottom?: number;\n  zIndex?: number;\n}\n\ninterface StyleCache {\n  [id: number]: ItemStyle;\n}\n\nexport interface ItemInfo {\n  index: number;\n  style: ItemStyle;\n}\n\nexport interface RenderedRows {\n  startIndex: number;\n  stopIndex: number;\n}\n\nexport interface Props {\n  className?: string;\n  estimatedItemSize?: number;\n  height: number | string;\n  itemCount: number;\n  itemSize: ItemSize;\n  overscanCount?: number;\n  scrollOffset?: number;\n  scrollToIndex?: number;\n  scrollToAlignment?: ALIGNMENT;\n  scrollDirection?: DIRECTION;\n  stickyIndices?: number[];\n  style?: React.CSSProperties;\n  width?: number | string;\n  onItemsRendered?({startIndex, stopIndex}: RenderedRows): void;\n  onScroll?(offset: number, event: UIEvent): void;\n  renderItem(itemInfo: ItemInfo): React.ReactNode;\n}\n\nexport interface State {\n  offset: number;\n  scrollChangeReason: SCROLL_CHANGE_REASON;\n}\n\nconst STYLE_WRAPPER: React.CSSProperties = {\n  overflow: 'auto',\n  willChange: 'transform',\n  WebkitOverflowScrolling: 'touch'\n};\n\nconst STYLE_INNER: React.CSSProperties = {\n  position: 'relative',\n  width: 'auto',\n  whiteSpace: 'nowrap',\n  minHeight: '100%'\n};\n\nconst STYLE_ITEM: {\n  position: ItemStyle['position'];\n  top: ItemStyle['top'];\n  left: ItemStyle['left'];\n  width: ItemStyle['width'];\n} = {\n  position: 'absolute' as ItemPosition,\n  top: 0,\n  left: 0,\n  width: '100%'\n};\n\nconst STYLE_STICKY_ITEM = {\n  ...STYLE_ITEM,\n  position: 'sticky' as ItemPosition\n};\n\nexport default class VirtualList extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    overscanCount: 3,\n    scrollDirection: DIRECTION.VERTICAL,\n    width: '100%'\n  };\n\n  static propTypes = {\n    estimatedItemSize: PropTypes.number,\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n      .isRequired,\n    itemCount: PropTypes.number.isRequired,\n    itemSize: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.array,\n      PropTypes.func\n    ]).isRequired,\n    onScroll: PropTypes.func,\n    onItemsRendered: PropTypes.func,\n    overscanCount: PropTypes.number,\n    renderItem: PropTypes.func.isRequired,\n    scrollOffset: PropTypes.number,\n    scrollToIndex: PropTypes.number,\n    scrollToAlignment: PropTypes.oneOf([\n      ALIGNMENT.AUTO,\n      ALIGNMENT.START,\n      ALIGNMENT.CENTER,\n      ALIGNMENT.END\n    ]),\n    scrollDirection: PropTypes.oneOf([\n      DIRECTION.HORIZONTAL,\n      DIRECTION.VERTICAL\n    ]),\n    stickyIndices: PropTypes.arrayOf(PropTypes.number),\n    style: PropTypes.object,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  };\n\n  itemSizeGetter = (itemSize: Props['itemSize']) => {\n    return (index: any) => this.getSize(index, itemSize);\n  };\n\n  sizeAndPositionManager = new SizeAndPositionManager({\n    itemCount: this.props.itemCount,\n    itemSizeGetter: this.itemSizeGetter(this.props.itemSize),\n    estimatedItemSize: this.getEstimatedItemSize()\n  });\n\n  readonly state: State = {\n    offset:\n      this.props.scrollOffset ||\n      (this.props.scrollToIndex != null &&\n        this.getOffsetForIndex(this.props.scrollToIndex)) ||\n      0,\n    scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n  };\n\n  private rootNode: HTMLElement;\n\n  private styleCache: StyleCache = {};\n\n  componentDidMount() {\n    const {scrollOffset, scrollToIndex} = this.props;\n    this.rootNode.addEventListener('scroll', this.handleScroll, {\n      passive: true\n    });\n    this.updateRootWidth();\n    if (scrollOffset != null) {\n      this.scrollTo(scrollOffset);\n    } else if (scrollToIndex != null) {\n      this.scrollTo(this.getOffsetForIndex(scrollToIndex));\n    }\n  }\n\n  // 自适应宽度\n  updateRootWidth() {\n    const itemsDom = this.rootNode.children[0].children;\n    const scrollbarWidth =\n      window.innerWidth - document.documentElement.clientWidth || 15;\n    const containerWidth =\n      this.rootNode.parentElement!.getBoundingClientRect().width;\n    let maxItemWidth = 0;\n    for (let i = 0; i < itemsDom.length; i++) {\n      let itemWidth = itemsDom[i].getBoundingClientRect().width;\n      if (itemWidth > maxItemWidth) {\n        maxItemWidth = itemWidth;\n      }\n    }\n    if (maxItemWidth > containerWidth) {\n      this.rootNode.style.width = maxItemWidth + scrollbarWidth + 'px';\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const props = this.props;\n    const {\n      estimatedItemSize,\n      itemCount,\n      itemSize,\n      scrollOffset,\n      scrollToAlignment,\n      scrollToIndex\n    } = prevProps;\n    const scrollPropsHaveChanged =\n      props.scrollToIndex !== scrollToIndex ||\n      props.scrollToAlignment !== scrollToAlignment;\n    const itemPropsHaveChanged =\n      props.itemCount !== itemCount ||\n      props.itemSize !== itemSize ||\n      props.estimatedItemSize !== estimatedItemSize;\n\n    if (props.itemSize !== itemSize) {\n      this.sizeAndPositionManager.updateConfig({\n        itemSizeGetter: this.itemSizeGetter(props.itemSize)\n      });\n    }\n\n    if (\n      props.itemCount !== itemCount ||\n      props.estimatedItemSize !== estimatedItemSize\n    ) {\n      this.sizeAndPositionManager.updateConfig({\n        itemCount: props.itemCount,\n        estimatedItemSize: this.getEstimatedItemSize(props)\n      });\n    }\n\n    if (itemPropsHaveChanged) {\n      this.recomputeSizes();\n    }\n\n    if (props.scrollOffset !== scrollOffset) {\n      this.setState({\n        offset: props.scrollOffset || 0,\n        scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n      });\n    } else if (\n      typeof props.scrollToIndex === 'number' &&\n      (scrollPropsHaveChanged || itemPropsHaveChanged)\n    ) {\n      this.setState({\n        offset: this.getOffsetForIndex(\n          props.scrollToIndex,\n          props.scrollToAlignment,\n          props.itemCount\n        ),\n        scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n      });\n    }\n\n    const {offset, scrollChangeReason} = this.state;\n    if (\n      prevState.offset !== offset &&\n      scrollChangeReason === SCROLL_CHANGE_REASON.REQUESTED\n    ) {\n      this.scrollTo(offset);\n    }\n  }\n\n  componentWillUnmount() {\n    this.rootNode.removeEventListener('scroll', this.handleScroll);\n  }\n\n  scrollTo(value: number) {\n    const {scrollDirection = DIRECTION.VERTICAL} = this.props;\n\n    (this.rootNode as any)[scrollProp[scrollDirection]] = value;\n  }\n\n  getOffsetForIndex(\n    index: number,\n    scrollToAlignment = this.props.scrollToAlignment,\n    itemCount: number = this.props.itemCount\n  ): number {\n    const {scrollDirection = DIRECTION.VERTICAL} = this.props;\n\n    if (index < 0 || index >= itemCount) {\n      index = 0;\n    }\n\n    return this.sizeAndPositionManager.getUpdatedOffsetForIndex({\n      align: scrollToAlignment,\n      containerSize: this.props[sizeProp[scrollDirection] as 'scrollOffset']!,\n      currentOffset: (this.state && this.state.offset) || 0,\n      targetIndex: index\n    });\n  }\n\n  recomputeSizes(startIndex = 0) {\n    this.styleCache = {};\n    this.sizeAndPositionManager.resetItem(startIndex);\n  }\n\n  render() {\n    const {\n      estimatedItemSize,\n      height,\n      overscanCount = 3,\n      renderItem,\n      itemCount,\n      itemSize,\n      onItemsRendered,\n      onScroll,\n      scrollDirection = DIRECTION.VERTICAL,\n      scrollOffset,\n      scrollToIndex,\n      scrollToAlignment,\n      stickyIndices,\n      style,\n      width,\n      ...props\n    } = this.props;\n    const {offset} = this.state;\n    const {start, stop} = this.sizeAndPositionManager.getVisibleRange({\n      containerSize: (this as any).props[sizeProp[scrollDirection]] || 0,\n      offset,\n      overscanCount\n    });\n    const items: React.ReactNode[] = [];\n    const wrapperStyle = {...STYLE_WRAPPER, ...style, height, width};\n    const innerStyle = {\n      ...STYLE_INNER,\n      [sizeProp[scrollDirection]]: this.sizeAndPositionManager.getTotalSize()\n    };\n\n    if (stickyIndices != null && stickyIndices.length !== 0) {\n      stickyIndices.forEach((index: number) =>\n        items.push(\n          renderItem({\n            index,\n            style: this.getStyle(index, true)\n          })\n        )\n      );\n\n      if (scrollDirection === DIRECTION.HORIZONTAL) {\n        innerStyle.display = 'flex';\n      }\n    }\n\n    if (typeof start !== 'undefined' && typeof stop !== 'undefined') {\n      for (let index = start; index <= stop; index++) {\n        if (stickyIndices != null && ~stickyIndices.indexOf(index)) {\n          continue;\n        }\n\n        items.push(\n          renderItem({\n            index,\n            style: this.getStyle(index, false)\n          })\n        );\n      }\n\n      if (typeof onItemsRendered === 'function') {\n        onItemsRendered({\n          startIndex: start,\n          stopIndex: stop\n        });\n      }\n    }\n\n    return (\n      <div ref={this.getRef} {...props} style={wrapperStyle}>\n        <div style={innerStyle}>{items}</div>\n      </div>\n    );\n  }\n\n  private getRef = (node: HTMLDivElement): void => {\n    this.rootNode = node;\n  };\n\n  private handleScroll = (event: UIEvent) => {\n    const {onScroll} = this.props;\n    const offset = this.getNodeOffset();\n\n    if (\n      offset < 0 ||\n      this.state.offset === offset ||\n      event.target !== this.rootNode\n    ) {\n      return;\n    }\n\n    this.setState({\n      offset,\n      scrollChangeReason: SCROLL_CHANGE_REASON.OBSERVED\n    });\n\n    if (typeof onScroll === 'function') {\n      onScroll(offset, event);\n    }\n  };\n\n  private getNodeOffset() {\n    const {scrollDirection = DIRECTION.VERTICAL} = this.props;\n\n    return (this as any).rootNode[scrollProp[scrollDirection]];\n  }\n\n  private getEstimatedItemSize(props = this.props) {\n    return (\n      props.estimatedItemSize ||\n      (typeof props.itemSize === 'number' && props.itemSize) ||\n      50\n    );\n  }\n\n  private getSize(index: number, itemSize: any) {\n    if (typeof itemSize === 'function') {\n      return itemSize(index);\n    }\n\n    return Array.isArray(itemSize) ? itemSize[index] : itemSize;\n  }\n\n  private getStyle(index: number, sticky: boolean) {\n    const style = this.styleCache[index];\n\n    if (style) {\n      return style;\n    }\n\n    const {scrollDirection = DIRECTION.VERTICAL} = this.props;\n    const {size, offset} =\n      this.sizeAndPositionManager.getSizeAndPositionForIndex(index);\n\n    return (this.styleCache[index] = sticky\n      ? {\n          ...STYLE_STICKY_ITEM,\n          [sizeProp[scrollDirection]]: size,\n          [marginProp[scrollDirection]]: offset,\n          [oppositeMarginProp[scrollDirection]]: -(offset + size),\n          zIndex: 1\n        }\n      : {\n          ...STYLE_ITEM,\n          [sizeProp[scrollDirection]]: size,\n          [positionProp[scrollDirection]]: offset\n        });\n  }\n}\n"
    ]
}