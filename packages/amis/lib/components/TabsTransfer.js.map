{
    "version": 3,
    "file": "TabsTransfer.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/TabsTransfer.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {autobind} from '../utils/helper';\nimport Tabs, {Tab} from './Tabs';\nimport InputBox from './InputBox';\nimport TableCheckboxes from './TableSelection';\nimport TreeCheckboxes from './TreeSelection';\nimport ChainedCheckboxes from './ChainedSelection';\nimport ListCheckboxes from './GroupedSelection';\nimport {Options, Option} from './Select';\nimport Transfer, {TransferProps} from './Transfer';\nimport {themeable} from '../theme';\nimport AssociatedCheckboxes from './AssociatedSelection';\nimport {localeable} from '../locale';\nimport {ItemRenderStates} from './Selection';\nimport {Icon} from './icons';\nimport debounce from 'lodash/debounce';\n\nexport interface TabsTransferProps\n  extends Omit<\n    TransferProps,\n    | 'selectMode'\n    | 'columns'\n    | 'selectRender'\n    | 'statistics'\n    | 'onSearch'\n    | 'optionItemRender'\n  > {\n  onSearch: (\n    term: string,\n    option: Option,\n    setCancel: (cancel: () => void) => void\n  ) => Promise<Options | void>;\n  optionItemRender?: (\n    option: Option,\n    states: ItemRenderStates,\n    tab: Option\n  ) => JSX.Element;\n  cellRender?: (\n    column: {\n      name: string;\n      label: string;\n      [propName: string]: any;\n    },\n    option: Option,\n    colIndex: number,\n    rowIndex: number\n  ) => JSX.Element;\n  onTabChange: (key: number) => void;\n  activeKey: number\n}\n\nexport interface TabsTransferState {\n  inputValue: string;\n  searchResult: Options | null;\n}\n\nexport class TabsTransfer extends React.Component<\n  TabsTransferProps,\n  TabsTransferState\n> {\n  state = {\n    inputValue: '',\n    searchResult: null\n  };\n\n  unmounted = false;\n  cancelSearch?: () => void;\n\n  componentWillUnmount() {\n    this.lazySearch.cancel();\n    this.unmounted = true;\n  }\n\n  @autobind\n  handleSearch(text: string, option: Option) {\n    // text 有值的时候，走搜索否则直接走 handleSeachCancel ，等同于右侧的 clear 按钮\n    if (text) {\n      this.setState(\n        {\n          inputValue: text\n        },\n        () => {\n          // 如果有取消搜索，先取消掉。\n          this.cancelSearch && this.cancelSearch();\n          this.lazySearch(text, option);\n        }\n      );\n    } else {\n      this.handleSeachCancel();\n    }\n  }\n\n  @autobind\n  handleSeachCancel() {\n    this.setState({\n      inputValue: '',\n      searchResult: null\n    });\n  }\n\n  lazySearch = debounce(\n    (text: string, option: Option) => {\n      (async (text: string) => {\n        const onSearch = this.props.onSearch;\n        let result = await onSearch(\n          text,\n          option,\n          (cancelExecutor: () => void) => (this.cancelSearch = cancelExecutor)\n        );\n\n        if (this.unmounted) {\n          return;\n        }\n\n        if (!Array.isArray(result)) {\n          throw new Error('onSearch 需要返回数组');\n        }\n\n        this.setState({\n          searchResult: result\n        });\n      })(text).catch(e => console.error(e));\n    },\n    250,\n    {\n      trailing: true,\n      leading: false\n    }\n  );\n\n  @autobind\n  handleSearchKeyDown(e: React.KeyboardEvent<any>) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  @autobind\n  handleTabChange(key: number) {\n    this.props?.onTabChange?.(key);\n\n    this.handleSeachCancel();\n  }\n\n  renderSearchResult(searchResult: Options | null) {\n    const {\n      searchResultMode,\n      noResultsText,\n      searchResultColumns,\n      classnames: cx,\n      value,\n      disabled,\n      onChange,\n      option2value,\n      cellRender,\n      optionItemRender\n    } = this.props;\n    const options = searchResult || [];\n    const mode = searchResultMode;\n\n    return mode === 'table' ? (\n      <TableCheckboxes\n        placeholder={noResultsText}\n        className={cx('Transfer-checkboxes')}\n        columns={searchResultColumns!}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        cellRender={cellRender}\n      />\n    ) : mode === 'tree' ? (\n      <TreeCheckboxes\n        placeholder={noResultsText}\n        className={cx('Transfer-checkboxes')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'result'\n                })\n            : undefined\n        }\n      />\n    ) : mode === 'chained' ? (\n      <ChainedCheckboxes\n        placeholder={noResultsText}\n        className={cx('Transfer-checkboxes')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'result'\n                })\n            : undefined\n        }\n      />\n    ) : (\n      <ListCheckboxes\n        placeholder={noResultsText}\n        className={cx('Transfer-checkboxes')}\n        options={options}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'result'\n                })\n            : undefined\n        }\n      />\n    );\n  }\n\n  @autobind\n  renderSelect() {\n    const {options, placeholder, activeKey, classnames: cx, translate: __} = this.props;\n    const showOptions = options.filter(item => item.visible !== false);\n\n    if (!Array.isArray(options) || !options.length) {\n      return (\n        <div className={cx('TabsTransfer-placeholder')}>\n          {__(placeholder || 'placeholder.noOption')}\n        </div>\n      );\n    }\n\n    return (\n      <Tabs\n        mode=\"line\"\n        className={cx('TabsTransfer-tabs')}\n        onSelect={this.handleTabChange}\n        activeKey={activeKey}\n      >\n        {showOptions.map((option, index) => (\n          <Tab\n            eventKey={index}\n            key={index}\n            title={option.label || option.title}\n            className=\"TabsTransfer-tab\"\n          >\n            {option.searchable ? (\n              <div className={cx('TabsTransfer-search')}>\n                <InputBox\n                  value={this.state.inputValue}\n                  onChange={(text: string) => this.handleSearch(text, option)}\n                  placeholder={__('Transfer.searchKeyword')}\n                  clearable={false}\n                  onKeyDown={this.handleSearchKeyDown}\n                >\n                  {this.state.searchResult !== null ? (\n                    <a onClick={this.handleSeachCancel}>\n                      <Icon icon=\"close\" className=\"icon\" />\n                    </a>\n                  ) : (\n                    <Icon icon=\"search\" className=\"icon\" />\n                  )}\n                </InputBox>\n              </div>\n            ) : null}\n            {this.state.searchResult !== null\n              ? this.renderSearchResult(this.state.searchResult)\n              : this.renderOptions(option)}\n          </Tab>\n        ))}\n      </Tabs>\n    );\n  }\n\n  @autobind\n  renderOptions(option: Option) {\n    const {\n      classnames: cx,\n      value,\n      disabled,\n      onChange,\n      option2value,\n      onDeferLoad,\n      onLeftDeferLoad,\n      cellRender,\n      translate: __,\n      optionItemRender\n    } = this.props;\n    return option.selectMode === 'table' ? (\n      <TableCheckboxes\n        className={cx('Transfer-checkboxes')}\n        columns={option.columns as any}\n        options={option.children || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        cellRender={cellRender}\n      />\n    ) : option.selectMode === 'tree' ? (\n      <TreeCheckboxes\n        className={cx('Transfer-checkboxes')}\n        options={option.children || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'tab',\n                  tag: option\n                })\n            : undefined\n        }\n      />\n    ) : option.selectMode === 'chained' ? (\n      <ChainedCheckboxes\n        className={cx('Transfer-checkboxes')}\n        options={option.children || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        defaultSelectedIndex={option.defaultSelectedIndex}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'tab',\n                  tag: option\n                })\n            : undefined\n        }\n      />\n    ) : option.selectMode === 'associated' ? (\n      <AssociatedCheckboxes\n        className={cx('Transfer-checkboxes')}\n        options={option.children || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        onLeftDeferLoad={onLeftDeferLoad}\n        leftMode={option.leftMode}\n        leftOptions={option.leftOptions}\n        leftDefaultValue={option.leftDefaultValue}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'tab',\n                  tag: option\n                })\n            : undefined\n        }\n      />\n    ) : (\n      <ListCheckboxes\n        className={cx('Transfer-checkboxes')}\n        options={option.children || []}\n        value={value}\n        disabled={disabled}\n        onChange={onChange}\n        option2value={option2value}\n        onDeferLoad={onDeferLoad}\n        itemRender={\n          optionItemRender\n            ? (item: Option, states: ItemRenderStates) =>\n                optionItemRender(item, states, {\n                  panel: 'tab',\n                  tag: option\n                })\n            : undefined\n        }\n      />\n    );\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      optionItemRender,\n      onSearch,\n      ...reset\n    } = this.props;\n\n    return (\n      <Transfer\n        {...reset}\n        statistics={false}\n        classnames={cx}\n        className={cx('TabsTransfer', className)}\n        selectRender={this.renderSelect}\n      />\n    );\n  }\n}\n\nexport default themeable(localeable(TabsTransfer));\n"
    ]
}