{
    "version": 3,
    "file": "CodeMirror.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/CodeMirror.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\n// import 'codemirror/lib/codemirror.css';\nimport type CodeMirror from 'codemirror';\nimport {autobind} from '../utils/helper';\nimport {resizeSensor} from '../utils/resize-sensor';\n\nexport interface CodeMirrorEditorProps {\n  className?: string;\n  value?: string;\n  onChange?: (value: string) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  editorFactory?: (\n    dom: HTMLElement,\n    cm: typeof CodeMirror,\n    props?: any\n  ) => CodeMirror.Editor;\n  editorDidMount?: (cm: typeof CodeMirror, editor: CodeMirror.Editor) => void;\n  editorWillUnMount?: (\n    cm: typeof CodeMirror,\n    editor: CodeMirror.Editor\n  ) => void;\n}\n\nexport class CodeMirrorEditor extends React.Component<CodeMirrorEditorProps> {\n  dom = React.createRef<HTMLDivElement>();\n\n  editor?: CodeMirror.Editor;\n  toDispose: Array<() => void> = [];\n  unmounted = false;\n  async componentDidMount() {\n    const cm = (await import('codemirror')).default;\n    // @ts-ignore\n    await import('codemirror/mode/javascript/javascript');\n    // @ts-ignore\n    await import('codemirror/mode/htmlmixed/htmlmixed');\n    await import('codemirror/addon/mode/simple');\n    await import('codemirror/addon/mode/multiplex');\n    if (this.unmounted) {\n      return;\n    }\n\n    this.editor =\n      this.props.editorFactory?.(this.dom.current!, cm, this.props) ??\n      cm(this.dom.current!, {\n        value: this.props.value || ''\n      });\n\n    this.props.editorDidMount?.(cm, this.editor);\n    this.editor.on('change', this.handleChange);\n\n    this.toDispose.push(\n      resizeSensor(this.dom.current as HTMLElement, () =>\n        this.editor?.refresh()\n      )\n    );\n    // todo 以后优化这个，解决弹窗里面默认光标太小的问题\n    setTimeout(() => this.editor?.refresh(), 350);\n    this.toDispose.push(() => {\n      this.props.editorWillUnMount?.(cm, this.editor!);\n    });\n  }\n\n  componentDidUpdate(prevProps: CodeMirrorEditorProps) {\n    const props = this.props;\n\n    if (props.value !== prevProps.value) {\n      this.editor && this.setValue(props.value);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.editor?.off('change', this.handleChange);\n    this.toDispose.forEach(fn => fn());\n    this.toDispose = [];\n  }\n\n  @autobind\n  handleChange(editor: any) {\n    this.props.onChange?.(editor.getValue());\n  }\n\n  setValue(value?: string) {\n    const doc = this.editor!.getDoc();\n    if (value && value !== doc.getValue()) {\n      const cursor = doc.getCursor();\n      doc.setValue(value);\n      doc.setCursor(cursor);\n    }\n  }\n\n  render() {\n    const {className} = this.props;\n    return <div className={className} ref={this.dom}></div>;\n  }\n}\n\nexport default CodeMirrorEditor;\n"
    ]
}