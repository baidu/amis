{
    "version": 3,
    "file": "FormField.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/FormField.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file 给组件用的，渲染器里面不要用这个\n */\nimport React from 'react';\nimport {themeable, ThemeProps} from '../theme';\nimport {\n  ControllerProps as ReactHookFormControllerProps,\n  Controller as ReactHookFormController,\n  RegisterOptions\n} from 'react-hook-form';\nimport {method} from 'lodash';\n\nexport interface FormFieldProps extends ThemeProps {\n  mode?: 'normal' | 'horizontal';\n  horizontal?: {\n    left?: number;\n    right?: number;\n    leftFixed?: boolean | number | 'xs' | 'sm' | 'md' | 'lg';\n    justify?: boolean; // 两端对齐\n  };\n  label?: string;\n  description?: string;\n  isRequired?: boolean;\n  hasError?: boolean;\n  errors?: string | Array<string>;\n  children?: JSX.Element;\n}\n\nfunction FormField(props: FormFieldProps) {\n  const {\n    mode,\n    children,\n    classnames: cx,\n    className,\n    hasError,\n    isRequired,\n    label,\n    description\n  } = props;\n\n  const errors = Array.isArray(props.errors)\n    ? props.errors\n    : props.errors\n    ? [props.errors]\n    : [];\n\n  if (mode === 'horizontal') {\n  }\n\n  return (\n    <div\n      data-role=\"form-item\"\n      className={cx(`Form-item Form-item--normal`, className, {\n        'is-error': hasError,\n        [`is-required`]: isRequired\n      })}\n    >\n      {label ? (\n        <label className={cx(`Form-label`)}>\n          <span>\n            {label}\n            {isRequired && label ? (\n              <span className={cx(`Form-star`)}>*</span>\n            ) : null}\n          </span>\n        </label>\n      ) : null}\n\n      {children}\n\n      {hasError && errors.length ? (\n        <ul className={cx(`Form-feedback`)}>\n          {errors.map((msg: string, key: number) => (\n            <li key={key}>{msg}</li>\n          ))}\n        </ul>\n      ) : null}\n\n      {description ? (\n        <div className={cx(`Form-description`)}>{description}</div>\n      ) : null}\n    </div>\n  );\n}\n\nconst ThemedFormField = themeable(FormField);\n\nexport default ThemedFormField;\n\nexport interface ControllerProps\n  extends ReactHookFormControllerProps,\n    Omit<FormFieldProps, keyof ThemeProps> {\n  rules?: Omit<\n    RegisterOptions,\n    'valueAsNumber' | 'valueAsDate' | 'setValueAs' | 'disabled'\n  > & {\n    [propName: string]: any;\n  };\n}\nexport function Controller(props: ControllerProps) {\n  const {render, name, shouldUnregister, defaultValue, control, ...rest} =\n    props;\n  let rules = {...props.rules};\n\n  if (rest.isRequired) {\n    rules.required = true;\n  }\n\n  return (\n    <ReactHookFormController\n      name={name}\n      rules={rules}\n      shouldUnregister={shouldUnregister}\n      defaultValue={defaultValue}\n      control={control}\n      render={methods => (\n        <ThemedFormField\n          {...rest}\n          hasError={!!methods.fieldState.error}\n          errors={methods.fieldState.error?.message}\n        >\n          {render(methods)}\n        </ThemedFormField>\n      )}\n    />\n  );\n}\n"
    ]
}