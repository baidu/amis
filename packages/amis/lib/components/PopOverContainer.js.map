{
    "version": 3,
    "file": "PopOverContainer.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/PopOverContainer.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,0CAAmD;AACnD,mEAAgC;AAChC,mEAAgC;AAChC,+DAA4B;AAC5B,uCAAsC;AAkBtC;IAAsC,iDAGrC;IAHD;QAAA,qEAwFC;QApFC,WAAK,GAA0B;YAC7B,QAAQ,EAAE,KAAK;SAChB,CAAC;;IAkFJ,CAAC;IA7EC,oCAAS,GAAT,UAAU,MAAW;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,IAAA,uBAAW,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpD,CAAC;IAGD,sCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAGD,gCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;IACL,CAAC;IAGD,oCAAS,GAAT;QACE,OAAO,IAAI,CAAC,MAAM,IAAK,IAAA,uBAAW,EAAC,IAAI,CAAiB,CAAC;IAC3D,CAAC;IAGD,oCAAS,GAAT;;QACE,OAAO,MAAA,IAAI,CAAC,SAAS,EAAE,0CAAE,aAAa,CAAC;IACzC,CAAC;IAED,iCAAM,GAAN;QACQ,IAAA,KAMF,IAAI,CAAC,KAAK,EALZ,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,gBAAgB,sBAAA,EAChB,gBAAgB,sBAAA,EACD,cAAc,mBACjB,CAAC;QACf,IAAM,QAAQ,GAAG,WAAW,IAAI,IAAA,iBAAQ,GAAE,CAAC;QAC3C,OAAO,CACL;YACG,QAAQ,CAAC;gBACR,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,OAAO,EAAE,IAAI,CAAC,WAAW;gBACzB,GAAG,EAAE,IAAI,CAAC,SAAS;aACpB,CAAC;YACD,QAAQ,CAAC,CAAC,CAAC,CACV,8BAAC,eAAK,IACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC3B,SAAS,EAAE,gBAAgB,EAC3B,SAAS,EAAE,gBAAgB,EAC3B,MAAM,EAAE,IAAI,CAAC,KAAK,IAEjB,cAAc,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAChC,CACT,CAAC,CAAC,CAAC,CACF,8BAAC,iBAAO,IACN,SAAS,EAAE,gBAAgB,IAAI,IAAI,CAAC,SAAS,EAC7C,MAAM,EAAE,IAAI,CAAC,SAAS,EACtB,SAAS,EAAE,MAAM,EACjB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAEzB,8BAAC,iBAAO,IACN,OAAO,QACP,SAAS,EAAE,gBAAgB,EAC3B,KAAK,EAAE;wBACL,QAAQ,EAAE,IAAI,CAAC,MAAM;4BACnB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC;4BACxC,CAAC,CAAC,MAAM;qBACX,EACD,MAAM,EAAE,IAAI,CAAC,KAAK,IAEjB,cAAc,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAC9B,CACF,CACX,CACA,CACJ,CAAC;IACJ,CAAC;IA5ED;QADC,iBAAQ;;;;qDAGR;IAGD;QADC,iBAAQ;;;;uDAKR;IAGD;QADC,iBAAQ;;;;iDAKR;IAGD;QADC,iBAAQ;;;;qDAGR;IAGD;QADC,iBAAQ;;;;qDAGR;IAmDH,uBAAC;CAAA,AAxFD,CAAsC,eAAK,CAAC,SAAS,GAwFpD;AAxFY,4CAAgB;AA0F7B,kBAAe,gBAAgB,CAAC",
    "sourcesContent": [
        "import React from 'react';\nimport {autobind, isMobile} from '../utils/helper';\nimport Overlay from './Overlay';\nimport PopOver from './PopOver';\nimport PopUp from './PopUp';\nimport {findDOMNode} from 'react-dom';\n\nexport interface PopOverContainerProps {\n  children: (props: {\n    onClick: (e: React.MouseEvent) => void;\n    isOpened: boolean;\n    ref: any;\n  }) => JSX.Element;\n  popOverRender: (props: {onClose: () => void}) => JSX.Element;\n  popOverContainer?: any;\n  popOverClassName?: string;\n  useMobileUI?: boolean;\n}\n\nexport interface PopOverContainerState {\n  isOpened: boolean;\n}\n\nexport class PopOverContainer extends React.Component<\n  PopOverContainerProps,\n  PopOverContainerState\n> {\n  state: PopOverContainerState = {\n    isOpened: false\n  };\n\n  target: any;\n\n  @autobind\n  targetRef(target: any) {\n    this.target = target ? findDOMNode(target) : null;\n  }\n\n  @autobind\n  handleClick() {\n    this.setState({\n      isOpened: true\n    });\n  }\n\n  @autobind\n  close() {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  @autobind\n  getTarget() {\n    return this.target || (findDOMNode(this) as HTMLElement);\n  }\n\n  @autobind\n  getParent() {\n    return this.getTarget()?.parentElement;\n  }\n\n  render() {\n    const {\n      useMobileUI,\n      children,\n      popOverContainer,\n      popOverClassName,\n      popOverRender: dropdownRender\n    } = this.props;\n    const mobileUI = useMobileUI && isMobile();\n    return (\n      <>\n        {children({\n          isOpened: this.state.isOpened,\n          onClick: this.handleClick,\n          ref: this.targetRef\n        })}\n        {mobileUI ? (\n          <PopUp\n            isShow={this.state.isOpened}\n            container={popOverContainer}\n            className={popOverClassName}\n            onHide={this.close}\n          >\n            {dropdownRender({onClose: this.close})}\n          </PopUp>\n        ) : (\n          <Overlay\n            container={popOverContainer || this.getParent}\n            target={this.getTarget}\n            placement={'auto'}\n            show={this.state.isOpened}\n          >\n            <PopOver\n              overlay\n              className={popOverClassName}\n              style={{\n                minWidth: this.target\n                  ? Math.max(this.target.offsetWidth, 100)\n                  : 'auto'\n              }}\n              onHide={this.close}\n            >\n              {dropdownRender({onClose: this.close})}\n            </PopOver>\n          </Overlay>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PopOverContainer;\n"
    ]
}