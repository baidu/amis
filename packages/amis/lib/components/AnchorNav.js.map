{
    "version": 3,
    "file": "AnchorNav.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/AnchorNav.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file AnchorNav\n * @description 锚点导航\n * @author hsm-lv\n */\n\nimport React from 'react';\nimport {Schema} from '../types';\nimport {ThemeProps, themeable} from '../theme';\nimport {PlainObject} from '../types';\nimport {autobind} from '../utils/helper';\nimport {uncontrollable} from 'uncontrollable';\nimport find from 'lodash/find';\n\nexport interface AnchorNavSectionProps extends ThemeProps {\n  title?: string; // 标题\n  name: string | number; // 标识\n  body?: Schema; // Schema\n  className?: string; // 样式名\n}\n\nclass AnchorNavSectionComponent extends React.PureComponent<AnchorNavSectionProps> {\n  contentDom: any;\n  contentRef = (ref: any) => (this.contentDom = ref);\n\n  render() {\n    const {classnames: cx, children, className} = this.props;\n\n    return (\n      <div ref={this.contentRef} className={cx('AnchorNav-section', className)}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport const AnchorNavSection = themeable(AnchorNavSectionComponent);\n\nexport interface AnchorNavProps extends ThemeProps {\n  links?: Array<AnchorNavSectionProps>; // 锚点数据\n  active?: string | number; // 激活标识\n  linkClassName?: string; // 导航 CSS类名\n  sectionClassName?: string; // 区域 CSS类名\n  sectionRender?: (\n    section: AnchorNavSectionProps,\n    props?: AnchorNavProps\n  ) => JSX.Element; // 锚点区域渲染器\n  onSelect?: (key: string | number) => void; // 选中回调方法\n  direction?: 'vertical' | 'horizontal'; // 导航方向\n}\n\nexport interface AnchorNavState {\n  offsetArr: PlainObject[]; // 记录每个段落的offsetTop\n  fromSelect: boolean; // 标识滚动触发来源\n}\n\nexport class AnchorNav extends React.Component<AnchorNavProps, AnchorNavState> {\n  static defaultProps: Pick<\n    AnchorNavProps,\n    'linkClassName' | 'sectionClassName' | 'direction'\n  > = {\n    linkClassName: '',\n    sectionClassName: '',\n    direction: 'vertical'\n  };\n\n  // 滚动区域DOM\n  contentDom: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    // 初始化\b滚动标识\n    this.setState({fromSelect: false});\n\n    // add scroll event\n    const sectionRootDom =\n      this.contentDom && (this.contentDom.current as HTMLElement);\n    sectionRootDom.addEventListener('scroll', this.scrollToNav);\n    let offsetArr: Array<object> = [];\n    const {children, active} = this.props;\n\n    // 收集段落区域offsetTop\n    children &&\n      React.Children.forEach(\n        children,\n        (section: AnchorNavSectionComponent, index: number) => {\n          offsetArr.push({\n            key: section.props.name,\n            offsetTop: (sectionRootDom.children[index] as HTMLElement).offsetTop\n          });\n        }\n      );\n\n    this.setState(\n      {\n        offsetArr\n      },\n      () => active && this.scrollToSection(active)\n    );\n  }\n\n  @autobind\n  scrollToNav(e: Event) {\n    if (this.state.fromSelect) {\n      return;\n    }\n\n    // 获取滚动的scrollTop\n    const scrollTop: number = (e.target as HTMLElement).scrollTop;\n\n    // 判断scrollTop所在区域\n    const offsetArr = this.state.offsetArr;\n    const firstSection = offsetArr[0];\n    const lastSection = offsetArr[offsetArr.length - 1];\n    // 首层偏移\n    const offset = scrollTop + firstSection.offsetTop;\n\n    // 首层\n    if (offset <= firstSection.offsetTop) {\n      this.fireSelect(firstSection.key);\n    }\n    // 最后一层\n    else if (offset >= lastSection.offsetTop) {\n      this.fireSelect(lastSection.key);\n    } else {\n      // 段落区间判断\n      offsetArr.forEach((item, index) => {\n        if (\n          offset >= item.offsetTop &&\n          offset < offsetArr[index + 1].offsetTop\n        ) {\n          this.fireSelect(item.key);\n        }\n      });\n    }\n  }\n\n  scrollToSection(key: string | number) {\n    // 获取指定段落的offsettop\n    const offsetArr = this.state.offsetArr;\n    const section = find(offsetArr, item => item.key === key);\n    const sectionRootDom =\n      this.contentDom && (this.contentDom.current as HTMLElement);\n\n    // 滚动到指定段落\n    section &&\n      (sectionRootDom.scrollTop = section.offsetTop - offsetArr[0].offsetTop);\n  }\n\n  handleSelect(key: string | number) {\n    // 标记滚动来自导航选择\n    this.setState({fromSelect: true});\n    // 滚动到对应段落\n    this.scrollToSection(key);\n\n    const sectionRootDom =\n      this.contentDom && (this.contentDom.current as HTMLElement);\n\n    // 如果已经滚到底就不去更新导航选中了\n    if (\n      sectionRootDom.scrollHeight - sectionRootDom.scrollTop <\n      sectionRootDom.clientHeight\n    ) {\n      // fire event\n      this.fireSelect(key);\n    }\n\n    // 取消标记\n    this.setState({fromSelect: false});\n  }\n\n  fireSelect(key: string | number) {\n    const {onSelect} = this.props;\n    onSelect && onSelect(key);\n  }\n\n  renderLink(link: any, index: number) {\n    if (!link) {\n      return;\n    }\n\n    const {classnames: cx, active: activeProp} = this.props;\n    const {title, name} = link.props;\n    const active = activeProp === undefined && index === 0 ? name : activeProp;\n\n    return (\n      <li\n        className={cx('AnchorNav-link', active === name ? 'is-active' : '')}\n        key={index}\n        onClick={() => this.handleSelect(name)}\n      >\n        <a>{title}</a>\n      </li>\n    );\n  }\n\n  renderSection(section: any, index: number) {\n    if (!section) {\n      return;\n    }\n\n    const {active: activeProp, classnames} = this.props;\n    const name = section.props.name;\n    const active = activeProp === undefined && index === 0 ? name : activeProp;\n\n    return React.cloneElement(section, {\n      ...section.props,\n      key: index,\n      classnames,\n      active\n    });\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      className,\n      linkClassName,\n      sectionClassName,\n      children,\n      direction\n    } = this.props;\n\n    if (!Array.isArray(children)) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cx(\n          'AnchorNav',\n          {\n            [`AnchorNav--${direction}`]: direction\n          },\n          className\n        )}\n      >\n        <ul\n          className={cx('AnchorNav-link-wrap', linkClassName)}\n          role=\"anchorlist\"\n        >\n          {children.map((link, index) => this.renderLink(link, index))}\n        </ul>\n\n        <div\n          className={cx('AnchorNav-section-wrap', sectionClassName)}\n          ref={this.contentDom}\n        >\n          {children.map((section, index) => {\n            return this.renderSection(section, index);\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ThemedAnchorNav = themeable(\n  uncontrollable(AnchorNav, {\n    active: 'onSelect'\n  })\n);\n\nexport default ThemedAnchorNav as typeof ThemedAnchorNav & {\n  AnchorNavSection: typeof AnchorNavSection;\n};\n"
    ]
}