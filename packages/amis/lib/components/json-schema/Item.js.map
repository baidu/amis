{
    "version": 3,
    "file": "Item.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/json-schema/Item.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,sEAAmC;AACnC,4EAAyC;AACzC,kEAA+B;AAC/B,iCAA6C;AAE7C,mCAA+C;AAE/C,SAAgB,mBAAmB,CAAC,KAA+B;IACjE,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC5B,OAAO,8BAAC,8BAAqB,4BAAK,KAAK,EAAI,CAAC;KAC7C;SAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;QAClC,OAAO,8BAAC,4BAAoB,4BAAK,KAAK,EAAI,CAAC;KAC5C;SAAM,IAAI,KAAK,CAAC,WAAW,EAAE;QAC5B,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACtE;SAAM,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;QAClC,OAAO,CACL,8BAAC,qBAAW,IACV,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,WAAW,EAAE,KAAK,CAAC,WAAW,GAC9B,CACH,CAAC;KACH;SAAM,IAAI,MAAM,CAAC,IAAI,IAAI,SAAS,EAAE;QACnC,OAAO,CACL,8BAAC,qBAAW,IACV,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,CAAC,EACZ,WAAW,EAAE,KAAK,CAAC,WAAW,GAC9B,CACH,CAAC;KACH;SAAM,IAAI,MAAM,CAAC,IAAI,IAAI,SAAS,EAAE;QACnC,OAAO,CACL,8BAAC,gBAAM,IAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAC,MAAM,GAAG,CAC1E,CAAC;KACH;IAED,OAAO,CACL,8BAAC,kBAAQ,IACP,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,WAAW,EAAE,KAAK,CAAC,WAAW,GAC9B,CACH,CAAC;AACJ,CAAC;AAtCD,kDAsCC",
    "sourcesContent": [
        "import React from 'react';\nimport InputBox from '../InputBox';\nimport NumberInput from '../NumberInput';\nimport Switch from '../Switch';\nimport {InputJSONSchemaArray} from './Array';\nimport type {InputJSONSchemaItemProps} from './index';\nimport {InputJSONSchemaObject} from './Object';\n\nexport function InputJSONSchemaItem(props: InputJSONSchemaItemProps) {\n  const schema = props.schema;\n  if (schema.type === 'object') {\n    return <InputJSONSchemaObject {...props} />;\n  } else if (schema.type === 'array') {\n    return <InputJSONSchemaArray {...props} />;\n  } else if (props.renderValue) {\n    return props.renderValue(props.value, props.onChange, schema, props);\n  } else if (schema.type == 'number') {\n    return (\n      <NumberInput\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n      />\n    );\n  } else if (schema.type == 'integer') {\n    return (\n      <NumberInput\n        value={props.value}\n        onChange={props.onChange}\n        precision={0}\n        placeholder={props.placeholder}\n      />\n    );\n  } else if (schema.type == 'boolean') {\n    return (\n      <Switch value={props.value} onChange={props.onChange} className=\"mt-2\" />\n    );\n  }\n\n  return (\n    <InputBox\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n    />\n  );\n}\n"
    ]
}