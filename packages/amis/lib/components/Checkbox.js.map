{
    "version": 3,
    "file": "Checkbox.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Checkbox.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;GAGG;;;;AAEH,6DAA0B;AAC1B,kCAAiD;AACjD,0CAAyC;AAEzC,IAAM,YAAY,GAAG,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,eAAe,EAAE,EAAnB,CAAmB,CAAC;AAwBrD;IAA8B,yCAAmC;IAAjE;;IAiFA,CAAC;IAtEC,8BAAW,GAAX,UAAY,CAAyB;QAC7B,IAAA,KAAoC,IAAI,CAAC,KAAK,EAA7C,SAAS,eAAA,EAAE,UAAU,gBAAA,EAAE,QAAQ,cAAc,CAAC;QAErD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,QAAQ,CACN,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAC/C,CAAC,CAAC,WAA0B,CAAC,QAAQ,CACvC,CAAC;IACJ,CAAC;IAED,yBAAM,GAAN;;QACM,IAAA,KAiBA,IAAI,CAAC,KAAK,EAhBZ,IAAI,UAAA,EACJ,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,KAAK,WAAA,EACL,OAAO,aAAA,EACP,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,cAAc,oBAAA,EACd,UAAU,gBACE,CAAC;QAEf,OAAO,CACL,yCACE,SAAS,EAAE,EAAE,CAAC,6BAAsB,IAAI,CAAE,EAAE,SAAS;oBACnD,gBAAgB,EAAE,CAAC,OAAO;;gBAC1B,+BAA+B;gBAC/B,GAAC,oBAAa,IAAI,CAAE,IAAG,IAAI;gBAC3B,sBAAkB,GAAE,UAAU,KAAK,QAAQ;gBAC3C,+BAA2B,GAAE,UAAU,KAAK,QAAQ,IAAI,OAAO;gBAC/D,2CAAuC,GACrC,UAAU,KAAK,QAAQ,IAAI,QAAQ,IAAI,CAAC,OAAO;oBACjD;YAEF,yCACE,IAAI,EAAE,IAAI,EACV,OAAO,EACL,OAAO,OAAO,KAAK,WAAW;oBAC5B,CAAC,CAAC,OAAO;oBACT,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW;wBAC9B,CAAC,CAAC,KAAK;wBACP,CAAC,CAAC,KAAK,IAAI,SAAS,EAExB,QAAQ,EAAE,IAAI,CAAC,WAAW,EAC1B,OAAO,EACL,YAAY,CAAC,oCAAoC;kBAEnD,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,GACV;YACF,wCAAK;YACL,wCAAM,SAAS,EAAE,EAAE,CAAC,cAAc,CAAC,IAAG,QAAQ,IAAI,KAAK,CAAQ;YAC9D,WAAW,CAAC,CAAC,CAAC,CACb,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAAG,WAAW,CAAO,CACzD,CAAC,CAAC,CAAC,IAAI,CACF,CACT,CAAC;IACJ,CAAC;;IA/EM,qBAAY,GAGf;QACF,SAAS,EAAE,IAAI;QACf,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,UAAU;KACjB,CAAC;IAGF;QADC,iBAAQ;;0EACM,eAAK,oBAAL,eAAK,CAAC,WAAW;;+CAW/B;IA2DH,eAAC;CAAA,AAjFD,CAA8B,eAAK,CAAC,SAAS,GAiF5C;AAjFY,4BAAQ;AAmFrB,kBAAe,IAAA,iBAAS,EAAC,QAAQ,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file Checkbox\n * @author fex\n */\n\nimport React from 'react';\nimport {ClassNamesFn, themeable} from '../theme';\nimport {autobind} from '../utils/helper';\n\nconst preventEvent = (e: any) => e.stopPropagation();\n\ninterface CheckboxProps {\n  type: 'checkbox' | 'radio';\n  size?: 'sm' | 'lg' | 'small' | 'large';\n  label?: string;\n  labelClassName?: string;\n  className?: string;\n  onChange?: (value: any, shift?: boolean) => void;\n  value?: boolean | string | number;\n  inline?: boolean;\n  trueValue?: boolean | string | number;\n  falseValue?: boolean | string | number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  checked?: boolean;\n  name?: string;\n  description?: string;\n  classPrefix: string;\n  classnames: ClassNamesFn;\n  partial?: boolean;\n  optionType?: 'default' | 'button';\n}\n\nexport class Checkbox extends React.Component<CheckboxProps, any> {\n  static defaultProps: Pick<\n    CheckboxProps,\n    'trueValue' | 'falseValue' | 'type'\n  > = {\n    trueValue: true,\n    falseValue: false,\n    type: 'checkbox'\n  };\n\n  @autobind\n  handleCheck(e: React.ChangeEvent<any>) {\n    const {trueValue, falseValue, onChange} = this.props;\n\n    if (!onChange) {\n      return;\n    }\n\n    onChange(\n      e.currentTarget.checked ? trueValue : falseValue,\n      (e.nativeEvent as MouseEvent).shiftKey\n    );\n  }\n\n  render() {\n    let {\n      size,\n      className,\n      classnames: cx,\n      value,\n      label,\n      partial,\n      trueValue,\n      children,\n      disabled,\n      description,\n      readOnly,\n      checked,\n      type,\n      name,\n      labelClassName,\n      optionType\n    } = this.props;\n\n    return (\n      <label\n        className={cx(`Checkbox Checkbox--${type}`, className, {\n          'Checkbox--full': !partial,\n          // 'Checkbox--partial': partial\n          [`Checkbox--${size}`]: size,\n          'Checkbox--button': optionType === 'button',\n          'Checkbox--button--checked': optionType === 'button' && checked,\n          'Checkbox--button--disabled--unchecked':\n            optionType === 'button' && disabled && !checked\n        })}\n      >\n        <input\n          type={type}\n          checked={\n            typeof checked !== 'undefined'\n              ? checked\n              : typeof value === 'undefined'\n              ? value\n              : value == trueValue\n          }\n          onChange={this.handleCheck}\n          onClick={\n            preventEvent // 当点击 i 的时候，这个地方也会触发 click，很奇怪，干脆禁掉\n          }\n          disabled={disabled}\n          readOnly={readOnly}\n          name={name}\n        />\n        <i />\n        <span className={cx(labelClassName)}>{children || label}</span>\n        {description ? (\n          <div className={cx('Checkbox-desc')}>{description}</div>\n        ) : null}\n      </label>\n    );\n  }\n}\n\nexport default themeable(Checkbox);\n"
    ]
}