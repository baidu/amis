{
    "version": 3,
    "file": "VariableList.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/formula/VariableList.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\n\nimport {themeable, ThemeProps} from '../../theme';\nimport GroupedSelection from '../GroupedSelection';\nimport Tabs, {Tab} from '../Tabs';\nimport TreeSelection from '../TreeSelection';\nimport SearchBox from '../SearchBox';\nimport {filterTree, flattenTree} from '../../utils/helper';\n\nimport type {VariableItem} from './Editor';\nimport type {ItemRenderStates} from '../Selection';\nimport type {Option} from '../Select';\nimport type {TabsMode} from '../Tabs';\n\nexport interface VariableListProps extends ThemeProps {\n  className?: string;\n  itemClassName?: string;\n  value?: any;\n  data: Array<VariableItem>;\n  selectMode?: 'list' | 'tree' | 'tabs';\n  tabsMode?: TabsMode;\n  itemRender?: (option: Option, states: ItemRenderStates) => JSX.Element;\n  onSelect?: (item: VariableItem) => void;\n}\n\nfunction VariableList(props: VariableListProps) {\n  const {\n    data: list,\n    className,\n    classnames: cx,\n    tabsMode = 'line',\n    classPrefix: themePrefix,\n    itemClassName,\n    selectMode,\n    onSelect\n  } = props;\n  const [filterVars, setFilterVars] = React.useState(list);\n  const classPrefix = `${themePrefix}FormulaEditor-VariableList`;\n  const itemRender =\n    props.itemRender && typeof props.itemRender === 'function'\n      ? props.itemRender\n      : (option: Option, states: ItemRenderStates): JSX.Element => {\n          return (\n            <span className={cx(`${classPrefix}-item`, itemClassName)}>\n              <label>{option.label}</label>\n              {option?.tag ? (\n                <span className={cx(`${classPrefix}-item-tag`)}>\n                  {option.tag}\n                </span>\n              ) : null}\n            </span>\n          );\n        };\n\n  function onSearch(term: string) {\n    const flatten = flattenTree(list);\n    const filtered = flatten.filter(item => ~item.label.indexOf(term));\n\n    setFilterVars(!term ? list : filtered);\n  }\n\n  function renderSearchBox() {\n    return (\n      <div className={cx('FormulaEditor-VariableList-searchBox')}>\n        <SearchBox mini={false} onSearch={onSearch} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cx(\n        className,\n        'FormulaEditor-VariableList',\n        selectMode && `FormulaEditor-VariableList-${selectMode}`\n      )}\n    >\n      {selectMode === 'tabs' ? (\n        <Tabs\n          tabsMode={tabsMode}\n          className={cx(`${classPrefix}-base ${classPrefix}-tabs`)}\n        >\n          {filterVars.map((item, index) => (\n            <Tab\n              className={cx(`${classPrefix}-tab`)}\n              eventKey={index}\n              key={index}\n              title={item.label}\n            >\n              <VariableList\n                classnames={cx}\n                classPrefix={`${classPrefix}-sub-`}\n                className={cx(`${classPrefix}-sub`)}\n                itemRender={itemRender}\n                selectMode={item.selectMode}\n                data={item.children!}\n                onSelect={onSelect}\n              />\n            </Tab>\n          ))}\n        </Tabs>\n      ) : selectMode === 'tree' ? (\n        <div className={cx('FormulaEditor-VariableList-body')}>\n          {renderSearchBox()}\n          <TreeSelection\n            itemRender={itemRender}\n            className={cx(`${classPrefix}-base`, 'is-scrollable')}\n            multiple={false}\n            options={filterVars}\n            onChange={(item: any) => onSelect?.(item)}\n          />\n        </div>\n      ) : (\n        <div className={cx('FormulaEditor-VariableList-body')}>\n          {renderSearchBox()}\n          <GroupedSelection\n            itemRender={itemRender}\n            className={cx(`${classPrefix}-base`, 'is-scrollable')}\n            multiple={false}\n            options={filterVars}\n            onChange={(item: any) => onSelect?.(item)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default themeable(VariableList);\n"
    ]
}