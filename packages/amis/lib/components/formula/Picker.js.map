{
    "version": 3,
    "file": "Picker.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/formula/Picker.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {uncontrollable} from 'uncontrollable';\nimport React from 'react';\nimport {\n  FormulaEditor,\n  FormulaEditorProps,\n  FuncGroup,\n  VariableItem\n} from './Editor';\nimport {autobind, noop} from '../../utils/helper';\nimport {generateIcon} from '../../utils/icon';\nimport Editor from './Editor';\nimport ResultBox from '../ResultBox';\nimport Button from '../Button';\nimport {Icon} from '../icons';\nimport Modal from '../Modal';\nimport {themeable} from '../../theme';\nimport {localeable} from '../../locale';\nimport type {SchemaIcon} from '../../Schema';\nimport {parse, Evaluator} from 'amis-formula';\n\nexport interface FormulaPickerProps extends FormulaEditorProps {\n  // 新的属性？\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\n\n  /**\n   * 编辑器标题\n   */\n  title?: string;\n\n  /**\n   * 按钮图标\n   */\n  icon?: SchemaIcon;\n\n  /**\n   * 控件模式\n   */\n  mode?: 'button' | 'input-button';\n\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n\n  /**\n   * 按钮Label，inputMode为button时生效\n   */\n  btnLabel?: string;\n\n  /**\n   * 按钮样式\n   */\n  level?:\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'danger'\n    | 'link'\n    | 'primary'\n    | 'dark'\n    | 'light';\n\n  /**\n   * 按钮大小\n   */\n  btnSize?: 'xs' | 'sm' | 'md' | 'lg';\n\n  /**\n   * 禁用状态\n   */\n  disabled?: boolean;\n\n  /**\n   * 是否允许输入，否需要点击fx在弹窗中输入\n   */\n  allowInput?: boolean;\n\n  /**\n   * 占位文本\n   */\n  placeholder?: string;\n\n  /**\n   * 可清除\n   */\n  clearable?: boolean;\n\n  /**\n   * 支持通过上下文变量配置value\n   */\n  source?: string;\n\n  /**\n   * 外层透传的 data，和source配合使用\n   */\n  data?: any;\n\n  /**\n   * 公式弹出的时候，可以外部设置 variables 和 functions\n   */\n  onPickerOpen?: (props: FormulaPickerProps) => any;\n\n  children?: (props: {\n    onClick: (e: React.MouseEvent) => void;\n    setState: (state: any) => void;\n    isOpened: boolean;\n  }) => JSX.Element;\n\n  onConfirm?: (value?: any) => void;\n\n  onRef?: (node: any) => void;\n}\n\nexport interface FormulaPickerState {\n  isOpened: boolean;\n  value: string;\n  editorValue: string;\n  isError: boolean | string;\n\n  variables?: Array<VariableItem>;\n  functions?: Array<FuncGroup>;\n  variableMode?: any;\n}\n\nexport class FormulaPicker extends React.Component<\n  FormulaPickerProps,\n  FormulaPickerState\n> {\n  constructor(props: FormulaPickerProps) {\n    super(props);\n    this.props.onRef && this.props.onRef(this);\n  }\n\n  static defaultProps = {\n    evalMode: true\n  };\n\n  state: FormulaPickerState = {\n    isOpened: false,\n    value: this.props.value!,\n    editorValue: this.props.value!,\n    isError: false\n  };\n\n  @autobind\n  handleConfirm() {\n    const value = this.state.value;\n\n    if (this.props.onConfirm) {\n      this.props.onConfirm(value);\n    } else {\n      this.props.onChange?.(value);\n    }\n  }\n\n  @autobind\n  renderFormulaValue(item: any) {\n    const {allowInput, classnames: cx} = this.props;\n    const html = {__html: item.html};\n    if (allowInput) {\n      return '';\n    }\n    return (\n      <div\n        className={cx('FormulaPicker-ResultBox')}\n        dangerouslySetInnerHTML={html}\n      ></div>\n    );\n  }\n\n  @autobind\n  handleInputChange(value: string) {\n    this.setState({value}, () => this.handleConfirm());\n  }\n\n  @autobind\n  handleEditorChange(value: string) {\n    this.setState({\n      editorValue: value,\n      isError: false\n    });\n  }\n\n  @autobind\n  handleEditorConfirm() {\n    const {translate: __} = this.props;\n    const value = this.state.editorValue;\n    const validate = this.validate(value);\n\n    if (validate === true) {\n      this.setState({value}, () => {\n        this.close(undefined, () => this.handleConfirm());\n      });\n    } else {\n      this.setState({isError: validate});\n    }\n  }\n\n  @autobind\n  async handleClick() {\n    const state = {\n      ...(await this.props.onPickerOpen?.(this.props)),\n      editorValue: this.props.value,\n      isOpened: true\n    };\n\n    this.setState(state);\n  }\n\n  @autobind\n  close(e?: any, callback?: () => void) {\n    this.setState(\n      {\n        isOpened: false,\n        isError: false\n      },\n      () => {\n        if (callback) {\n          callback();\n          return;\n        }\n      }\n    );\n  }\n\n  @autobind\n  updateState(state: any = {}) {\n    const {isOpened, ...rest} = state;\n    this.setState({\n      ...this.state,\n      ...rest\n    });\n  }\n\n  @autobind\n  validate(value: string) {\n    const {translate: __} = this.props;\n\n    try {\n      const ast = parse(value, {\n        evalMode: this.props.evalMode,\n        allowFilter: false\n      });\n\n      new Evaluator({}).evalute(ast);\n\n      return true;\n    } catch (e) {\n      if (/\\s(\\d+:\\d+)$/.test(e.message)) {\n        const [, position] = /\\s(\\d+:\\d+)$/.exec(e.message) || [];\n        return position;\n      }\n      return e.message;\n    }\n  }\n\n  render() {\n    let {\n      classnames: cx,\n      translate: __,\n      disabled,\n      allowInput,\n      className,\n      onChange,\n      size,\n      borderMode,\n      placeholder,\n      mode,\n      btnLabel,\n      level,\n      btnSize,\n      icon,\n      title,\n      clearable,\n      variables,\n      functions,\n      children,\n      variableMode,\n      ...rest\n    } = this.props;\n    const {isOpened, value, editorValue, isError} = this.state;\n\n    const iconElement = generateIcon(cx, icon, 'Icon');\n\n    return (\n      <>\n        {children ? (\n          children({\n            isOpened: this.state.isOpened,\n            onClick: this.handleClick,\n            setState: this.updateState\n          })\n        ) : (\n          <div className={cx('FormulaPicker', className)}>\n            {mode === 'button' ? (\n              <Button\n                className={cx('FormulaPicker-action', 'w-full')}\n                level={level}\n                size={btnSize}\n                onClick={this.handleClick}\n              >\n                {iconElement ? (\n                  React.cloneElement(iconElement, {\n                    className: cx(\n                      iconElement?.props?.className ?? '',\n                      'FormulaPicker-icon',\n                      {\n                        ['is-filled']: !!value\n                      }\n                    )\n                  })\n                ) : (\n                  <Icon\n                    icon=\"function\"\n                    className={cx('FormulaPicker-icon', 'icon', {\n                      ['is-filled']: !!value\n                    })}\n                  />\n                )}\n                <span className={cx('FormulaPicker-label')}>\n                  {__(btnLabel || 'FormulaEditor.btnLabel')}\n                </span>\n              </Button>\n            ) : (\n              <>\n                <ResultBox\n                  className={cx(\n                    'FormulaPicker-input',\n                    isOpened ? 'is-active' : '',\n                    !!isError ? 'is-error' : ''\n                  )}\n                  allowInput={allowInput}\n                  clearable={clearable}\n                  value={value}\n                  result={\n                    allowInput\n                      ? void 0\n                      : FormulaEditor.highlightValue(\n                          value,\n                          variables!,\n                          this.props.evalMode\n                        )\n                  }\n                  itemRender={this.renderFormulaValue}\n                  onResultChange={noop}\n                  onChange={this.handleInputChange}\n                  disabled={disabled}\n                  borderMode={borderMode}\n                  placeholder={placeholder}\n                />\n\n                <Button\n                  className={cx('FormulaPicker-action')}\n                  onClick={this.handleClick}\n                >\n                  <Icon\n                    icon=\"function\"\n                    className={cx('FormulaPicker-icon', 'icon', {\n                      ['is-filled']: !!value\n                    })}\n                  />\n                </Button>\n              </>\n            )}\n          </div>\n        )}\n        <Modal\n          size=\"md\"\n          closeOnEsc\n          show={this.state.isOpened}\n          onHide={this.close}\n        >\n          <Modal.Header onClose={this.close} className=\"font-bold\">\n            {__(title || 'FormulaEditor.title')}\n          </Modal.Header>\n          <Modal.Body>\n            <Editor\n              {...rest}\n              variables={this.state.variables ?? variables}\n              functions={this.state.functions ?? functions}\n              variableMode={this.state.variableMode ?? variableMode}\n              value={editorValue}\n              onChange={this.handleEditorChange}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            {!!isError ? (\n              <div className={cx('Dialog-info')} key=\"info\">\n                <span className={cx('Dialog-error')}>\n                  {__('FormulaEditor.invalidData', {err: isError})}\n                </span>\n              </div>\n            ) : null}\n            <Button onClick={this.close}>{__('cancel')}</Button>\n            <Button onClick={this.handleEditorConfirm} level=\"primary\">\n              {__('confirm')}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(FormulaPicker, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}