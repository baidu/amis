{
    "version": 3,
    "file": "Pagination.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Pagination.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/*\n * @Description: Pagination分页组件\n * @Author: wangfeilong02@baidu.com\n * @Date: 2021-11-01 16:57:38\n */\nimport React from 'react';\nimport {localeable, LocaleProps} from '../locale';\nimport {themeable, ThemeProps} from '../theme';\nimport {autobind} from '../utils/helper';\nimport {Icon} from './icons';\nimport Select from './Select';\n\nexport type MODE_TYPE = 'simple' | 'normal';\n\nexport const enum PaginationWidget {\n  Pager = 'pager',\n  PerPage = 'perpage',\n  Total = 'total',\n  Go = 'go'\n}\n\nexport interface BasicPaginationProps {\n  /**\n   * 通过控制layout属性的顺序，调整分页结构 total,perPage,pager,go\n   * @default ['pager']\n   */\n  layout?: string | Array<string>;\n\n  /**\n   * 最多显示多少个分页按钮。\n   *\n   * @default 5\n   */\n  maxButtons: number;\n\n  /**\n   * 模式，默认normal，如果只想简单显示可以配置成 `simple`。\n   * @default 'normal'\n   */\n  mode?: MODE_TYPE;\n\n  /**\n   * 当前页数\n   */\n  activePage: number;\n\n  /**\n   * 总条数\n   */\n  total?: number;\n\n  /**\n   * 最后一页，总页数（如果传入了total，会重新计算lastPage）\n   */\n  lastPage?: number;\n\n  /**\n   * 每页显示条数\n   * @default 10\n   */\n  perPage?: number;\n\n  /**\n   * 是否展示分页切换，也同时受layout控制\n   * @default false\n   */\n  showPerPage?: boolean;\n\n  /**\n   * 指定每页可以显示多少条\n   * @default [10, 20, 50, 100]\n   */\n  perPageAvailable?: Array<number>;\n\n  /**\n   * 是否显示快速跳转输入框\n   * @default false\n   */\n  showPageInput?: boolean;\n\n  /**\n   * 是否禁用\n   * @default false\n   */\n  disabled?: boolean;\n\n  hasNext?: boolean;\n  onPageChange?: (page: number, perPage?: number) => void;\n}\nexport interface PaginationProps\n  extends BasicPaginationProps,\n    ThemeProps,\n    LocaleProps {}\nexport interface PaginationState {\n  pageNum: string;\n  perPage: number;\n}\nexport class Pagination extends React.Component<\n  PaginationProps,\n  PaginationState\n> {\n  static defaultProps = {\n    layout: [PaginationWidget.Pager],\n    maxButtons: 5,\n    mode: 'normal' as MODE_TYPE,\n    activePage: 1,\n    perPage: 10,\n    perPageAvailable: [10, 20, 50, 100]\n  };\n\n  state = {\n    pageNum: '',\n    perPage: Number(this.props.perPage)\n  };\n\n  constructor(props: PaginationProps) {\n    super(props);\n\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n    this.renderPageItem = this.renderPageItem.bind(this);\n    this.renderEllipsis = this.renderEllipsis.bind(this);\n    this.handlePageNums = this.handlePageNums.bind(this);\n  }\n\n  handlePageNumChange(page: number, perPage?: number) {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    props.onPageChange && props.onPageChange(page, perPage);\n  }\n\n  /**\n   * 渲染每个页码li\n   *\n   * @param page 页码\n   */\n  renderPageItem(page: number) {\n    const {classnames: cx, activePage} = this.props;\n    const {perPage} = this.state;\n\n    return (\n      <li\n        onClick={() => this.handlePageNumChange(page, perPage)}\n        key={page}\n        className={cx('Pagination-pager-item', {\n          'is-active': page === activePage\n        })}\n      >\n        <a role=\"button\">{page}</a>\n      </li>\n    );\n  }\n\n  /**\n   * 渲染...\n   *\n   * @param key 类型 'prev-ellipsis' | 'next-ellipsis'\n   * @param page 页码\n   */\n  renderEllipsis(key: string) {\n    const {classnames: cx} = this.props;\n    return (\n      <li key={key} className={cx('ellipsis')}>\n        <a role=\"button\">...</a>\n      </li>\n    );\n  }\n\n  /**\n   * 渲染器事件方法装饰器\n   *\n   * @param cur 当前页数\n   * @param counts 总共页码按钮数\n   * @param min 最小页码\n   * @param max 最大页码\n   */\n  handlePageNums(\n    cur: number,\n    counts: number,\n    min: number,\n    max: number\n  ): Array<any> {\n    const pageButtons: Array<any> = [];\n    if (counts === 0) {\n      return pageButtons;\n    }\n\n    let step = 0;\n    let page = cur;\n    while (true) {\n      if (pageButtons.length >= counts) {\n        return pageButtons;\n      }\n      if (cur - step < min && cur + step > max) {\n        return pageButtons;\n      }\n      page = cur - step;\n      if (pageButtons.length < counts && page >= min) {\n        pageButtons.unshift(this.renderPageItem(page));\n      }\n      page = cur + step;\n      if (step !== 0 && pageButtons.length < counts && page <= max) {\n        pageButtons.push(this.renderPageItem(page));\n      }\n      step++;\n    }\n  }\n\n  getLastPage() {\n    const {total, perPage, lastPage, activePage, hasNext} = this.props;\n    // 输入total，重新计算lastPage\n    if (total || total === 0) {\n      return Math.ceil(total / (perPage as number));\n    }\n    if (lastPage) {\n      return Number(lastPage);\n    }\n    if (hasNext) {\n      return Number(activePage + 1);\n    }\n    return Number(activePage);\n  }\n\n  @autobind\n  handlePageChange(e: React.ChangeEvent<any>) {\n    const lastPage = this.getLastPage();\n    let value = e.currentTarget.value;\n\n    if (/^\\d+$/.test(value) && parseInt(value, 10) > lastPage) {\n      value = String(lastPage);\n    }\n\n    this.setState({pageNum: value});\n  }\n\n  render() {\n    const {\n      layout,\n      maxButtons,\n      mode,\n      activePage,\n      total,\n      showPerPage,\n      perPageAvailable,\n      classnames: cx,\n      showPageInput,\n      className,\n      disabled,\n      hasNext,\n      translate: __\n    } = this.props;\n    const {pageNum, perPage} = this.state;\n    const lastPage = this.getLastPage();\n\n    // 简易模式\n    if (mode === 'simple') {\n      return (\n        <div\n          className={cx(\n            'Pagination-wrap',\n            'Pagination-simple',\n            {disabled: disabled},\n            className\n          )}\n        >\n          <ul\n            key=\"pager-items\"\n            className={cx(\n              'Pagination',\n              'Pagination--sm',\n              'Pagination-pager-items',\n              'Pagination-item'\n            )}\n          >\n            <li\n              className={cx('Pagination-prev', {\n                'is-disabled': activePage < 2\n              })}\n              onClick={(e: any) => {\n                if (activePage < 2) {\n                  return e.preventDefault();\n                }\n                return this.handlePageNumChange(activePage - 1);\n              }}\n              key=\"prev\"\n            >\n              <span>\n                <Icon icon=\"left-arrow\" className=\"icon\" />\n              </span>\n            </li>\n            <li\n              className={cx('Pagination-next', {\n                'is-disabled': !hasNext\n              })}\n              onClick={(e: any) => {\n                if (!hasNext) {\n                  return e.preventDefault();\n                }\n                return this.handlePageNumChange(activePage + 1, perPage);\n              }}\n              key=\"next\"\n            >\n              <span>\n                <Icon icon=\"right-arrow\" className=\"icon\" />\n              </span>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n    let pageButtons: any = [];\n    let layoutList: Array<string> = Array.isArray(layout)\n      ? layout\n      : typeof layout === 'string'\n      ? layout.split(',')\n      : [];\n\n    /** 分页组件至少要包含页码 */\n    if (!layoutList.includes(PaginationWidget.Pager)) {\n      layoutList.unshift(PaginationWidget.Pager);\n    }\n    /** 统一使用小写格式，外部属性case insensitive */\n    layoutList = layoutList.map(widget => widget.trim().toLowerCase());\n\n    /** 兼容showPageInput属性，默认展示跳转页面 */\n    if (showPageInput && !layoutList.includes(PaginationWidget.Go)) {\n      layoutList.push(PaginationWidget.Go);\n    }\n\n    if (showPerPage && !layoutList.includes(PaginationWidget.PerPage)) {\n      layoutList.unshift(PaginationWidget.PerPage);\n    }\n\n    // 页码全部显示 [1, 2, 3, 4]\n    if (lastPage <= maxButtons) {\n      pageButtons = this.handlePageNums(\n        activePage,\n        maxButtons,\n        1,\n        Math.min(maxButtons, lastPage)\n      );\n    }\n    //当前为1234页时， [1, 2, 3, 4, 5, ... 12]\n    else if (activePage <= maxButtons - 3) {\n      pageButtons = this.handlePageNums(\n        activePage,\n        maxButtons - 2,\n        1,\n        Math.min(maxButtons - 2, lastPage)\n      );\n      pageButtons.push(this.renderEllipsis('next-ellipsis'));\n      pageButtons.push(this.renderPageItem(lastPage));\n    }\n    // [1, ..., 5, 6, 7, 8, 9]\n    else if (activePage > lastPage - (maxButtons - 3)) {\n      const min = lastPage - (maxButtons - 3);\n      pageButtons = this.handlePageNums(\n        activePage,\n        maxButtons - 2,\n        min,\n        lastPage\n      );\n      pageButtons.unshift(this.renderEllipsis('prev-ellipsis'));\n      pageButtons.unshift(this.renderPageItem(1));\n    }\n    // [1, ... 4, 5, 6, ... 10]\n    else {\n      pageButtons = this.handlePageNums(\n        activePage,\n        maxButtons - 2,\n        3,\n        lastPage - 3\n      );\n      pageButtons.unshift(this.renderEllipsis('prev-ellipsis'));\n      pageButtons.unshift(this.renderPageItem(1));\n      pageButtons.push(this.renderEllipsis('next-ellipsis'));\n      pageButtons.push(this.renderPageItem(lastPage));\n    }\n\n    pageButtons.unshift(\n      <li\n        className={cx('Pagination-prev', {\n          'is-disabled': activePage < 2\n        })}\n        onClick={(e: any) => {\n          if (activePage < 2) {\n            return e.preventDefault();\n          }\n          return this.handlePageNumChange(activePage - 1, perPage);\n        }}\n        key=\"prev\"\n      >\n        <span>\n          <Icon icon=\"left-arrow\" className=\"icon\" />\n        </span>\n      </li>\n    );\n\n    pageButtons.push(\n      <li\n        className={cx('Pagination-next', {\n          'is-disabled': activePage === lastPage\n        })}\n        onClick={(e: any) => {\n          if (activePage === lastPage) {\n            return e.preventDefault();\n          }\n          return this.handlePageNumChange(activePage + 1, perPage);\n        }}\n        key=\"next\"\n      >\n        <span>\n          <Icon icon=\"right-arrow\" className=\"icon\" />\n        </span>\n      </li>\n    );\n\n    const go = (\n      <div className={cx('Pagination-inputGroup Pagination-item')} key=\"go\">\n        <span className={cx('Pagination-inputGroup-left')} key=\"go-left\">\n          {__('Pagination.goto')}\n        </span>\n        <input\n          className={cx('Pagination-inputGroup-input')}\n          key=\"go-input\"\n          type=\"text\"\n          disabled={disabled}\n          onChange={this.handlePageChange}\n          onFocus={(e: any) => e.currentTarget.select()}\n          onKeyUp={(e: any) => {\n            const v: number = parseInt(e.currentTarget.value, 10);\n            if (!v || e.code != 'Enter') {\n              return;\n            }\n            this.setState({pageNum: ''});\n            this.handlePageNumChange(v, perPage);\n          }}\n          value={pageNum}\n        />\n        <span\n          className={cx('Pagination-inputGroup-right')}\n          key=\"go-right\"\n          onClick={(e: any) => {\n            if (!pageNum) {\n              return;\n            }\n            this.setState({pageNum: ''});\n            this.handlePageNumChange(+pageNum, perPage);\n          }}\n        >\n          {__('Pagination.go')}\n        </span>\n      </div>\n    );\n    const selection = (perPageAvailable as Array<number>)\n      .filter(v => !!v)\n      .map(v => ({label: __('Pagination.select', {count: v}), value: v}));\n    const perPageEle = (\n      <Select\n        key=\"perpage\"\n        className={cx('Pagination-perpage', 'Pagination-item')}\n        overlayPlacement=\"right-bottom-right-top\"\n        clearable={false}\n        disabled={disabled}\n        value={perPage}\n        options={selection}\n        onChange={(p: any) => {\n          this.setState({\n            perPage: p.value,\n            pageNum: ''\n          });\n          this.handlePageNumChange(1, p.value);\n        }}\n      />\n    );\n    // total或者lastpage不存在，不渲染总数\n    const totalPage = !(total || lastPage) ? null : (\n      <div className={cx('Pagination-total Pagination-item')} key=\"total\">\n        {total || total === 0\n          ? __('Pagination.totalCount', {total})\n          : __('Pagination.totalPage', {lastPage})}\n      </div>\n    );\n    return (\n      <div className={cx('Pagination-wrap', {disabled: disabled}, className)}>\n        {layoutList.map(layoutItem => {\n          if (layoutItem === PaginationWidget.Pager) {\n            return (\n              <ul\n                key=\"pager-items\"\n                className={cx(\n                  'Pagination',\n                  'Pagination--sm',\n                  'Pagination-item'\n                )}\n              >\n                {pageButtons}\n              </ul>\n            );\n          } else if (layoutItem === PaginationWidget.Go) {\n            return go;\n          } else if (layoutItem === PaginationWidget.PerPage) {\n            return perPageEle;\n          } else if (layoutItem === PaginationWidget.Total) {\n            return totalPage;\n          } else {\n            return null;\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nexport default themeable(localeable(Pagination));\n"
    ]
}