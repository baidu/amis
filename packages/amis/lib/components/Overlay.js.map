{
    "version": 3,
    "file": "Overlay.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Overlay.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Overlay\n * @description\n * @author fex\n */\n\nimport Portal from 'react-overlays/Portal';\nimport classNames from 'classnames';\nimport ReactDOM, {findDOMNode} from 'react-dom';\nimport React, {cloneElement} from 'react';\nimport {calculatePosition, getContainer, ownerDocument} from '../utils/dom';\nimport {autobind, getScrollParent, noop} from '../utils/helper';\nimport {resizeSensor, getComputedStyle} from '../utils/resize-sensor';\nimport {RootClose} from '../utils/RootClose';\n\nfunction onScroll(elem: HTMLElement, callback: () => void) {\n  const handler = () => {\n    requestAnimationFrame(callback);\n  };\n  elem.addEventListener('scroll', handler);\n  return function () {\n    elem.removeEventListener('scroll', handler);\n  };\n}\n\nclass Position extends React.Component<any, any> {\n  props: any;\n  _lastTarget: any;\n  resizeDispose: Array<() => void>;\n  watchedTarget: any;\n  setState: (state: any) => void;\n\n  static defaultProps = {\n    containerPadding: 0,\n    placement: 'right',\n    shouldUpdatePosition: false\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      positionLeft: 0,\n      positionTop: 0,\n      arrowOffsetLeft: null,\n      arrowOffsetTop: null\n    };\n\n    this._lastTarget = null;\n  }\n\n  updatePosition(target: any) {\n    this._lastTarget = target;\n\n    if (!target) {\n      return this.setState({\n        positionLeft: 0,\n        positionTop: 0,\n        arrowOffsetLeft: null,\n        arrowOffsetTop: null\n      });\n    }\n\n    const watchTargetSizeChange = this.props.watchTargetSizeChange;\n    const overlay = findDOMNode(this as any) as HTMLElement;\n    const container = getContainer(\n      this.props.container,\n      ownerDocument(this).body\n    );\n\n    if (\n      (!this.watchedTarget || this.watchedTarget !== target) &&\n      getComputedStyle(target, 'position') !== 'static'\n    ) {\n      this.resizeDispose?.forEach(fn => fn());\n      this.watchedTarget = target;\n      this.resizeDispose = [\n        watchTargetSizeChange !== false\n          ? resizeSensor(target, () => this.updatePosition(target))\n          : noop,\n        resizeSensor(overlay, () => this.updatePosition(target))\n      ];\n\n      const scrollParent = getScrollParent(target);\n      if (scrollParent && container.contains(scrollParent)) {\n        this.resizeDispose.push(\n          onScroll(scrollParent, () => {\n            this.updatePosition(target);\n          })\n        );\n      }\n    }\n\n    this.setState(\n      calculatePosition(\n        this.props.placement,\n        overlay,\n        target,\n        container,\n        this.props.containerPadding,\n        this.props.offset\n      )\n    );\n  }\n\n  componentDidMount() {\n    this.updatePosition(this.getTarget());\n  }\n\n  getTarget = () => {\n    const {target} = this.props;\n    const targetElement = typeof target === 'function' ? target() : target;\n    return (targetElement && ReactDOM.findDOMNode(targetElement)) || null;\n  };\n\n  componentDidUpdate(prevProps: any) {\n    this.maybeUpdatePosition(this.props.placement !== prevProps.placement);\n  }\n\n  maybeUpdatePosition = (placementChanged: any) => {\n    const target = this.getTarget();\n\n    if (\n      !this.props.shouldUpdatePosition &&\n      target === this._lastTarget &&\n      !placementChanged\n    ) {\n      return;\n    }\n\n    this.updatePosition(target);\n  };\n\n  componentWillUnmount() {\n    this.resizeDispose?.forEach(fn => fn());\n  }\n\n  render() {\n    const {children, className, ...props} = this.props;\n    const {positionLeft, positionTop, ...arrowPosition} = this.state;\n\n    // These should not be forwarded to the child.\n    delete props.target;\n    delete props.container;\n    delete props.containerPadding;\n    delete props.shouldUpdatePosition;\n\n    const child = React.Children.only(children);\n    return cloneElement(child, {\n      ...props,\n      ...arrowPosition,\n      // FIXME: Don't forward `positionLeft` and `positionTop` via both props\n      // and `props.style`.\n      positionLeft,\n      positionTop,\n      className: classNames(className, child.props.className),\n      style: {\n        ...child.props.style,\n        left: positionLeft,\n        top: positionTop\n      }\n    });\n  }\n}\n\ninterface OverlayProps {\n  placement?: string;\n  show?: boolean;\n  transition?: React.ElementType;\n  containerPadding?: number;\n  shouldUpdatePosition?: boolean;\n  rootClose?: boolean;\n  onHide?(props: any, ...args: any[]): any;\n  container?: React.ReactNode | Function;\n  target?: React.ReactNode | Function;\n  watchTargetSizeChange?: boolean;\n  offset?: [number, number];\n  onEnter?(node: HTMLElement): any;\n  onEntering?(node: HTMLElement): any;\n  onEntered?(node: HTMLElement): any;\n  onExit?(node: HTMLElement): any;\n  onExiting?(node: HTMLElement): any;\n  onExited?(node: HTMLElement): any;\n}\ninterface OverlayState {\n  exited: boolean;\n}\nexport default class Overlay extends React.Component<\n  OverlayProps,\n  OverlayState\n> {\n  static defaultProps = {\n    placement: 'auto'\n  };\n  constructor(props: OverlayProps) {\n    super(props as any);\n\n    this.state = {\n      exited: !props.show\n    };\n  }\n\n  position: any = null;\n  positionRef = (position: any) => {\n    this.position = position;\n  };\n\n  updatePosition() {\n    this.position?.maybeUpdatePosition(true);\n  }\n\n  componentDidUpdate(prevProps: OverlayProps) {\n    const props = this.props;\n    if (prevProps.show !== props.show && props.show) {\n      this.setState({exited: false});\n    } else if (props.transition !== prevProps.transition && !props.transition) {\n      // Otherwise let handleHidden take care of marking exited.\n      this.setState({exited: true});\n    }\n  }\n\n  @autobind\n  onHiddenListener(node: HTMLElement) {\n    this.setState({exited: true});\n\n    if (this.props.onExited) {\n      this.props.onExited(node);\n    }\n  }\n\n  render() {\n    const {\n      container,\n      containerPadding,\n      target,\n      placement,\n      shouldUpdatePosition,\n      rootClose,\n      children,\n      watchTargetSizeChange,\n      transition: Transition,\n      offset,\n      ...props\n    } = this.props;\n\n    const mountOverlay = props.show || (Transition && !this.state.exited);\n    if (!mountOverlay) {\n      // Don't bother showing anything if we don't have to.\n      return null;\n    }\n\n    let child = children;\n\n    // Position is be inner-most because it adds inline styles into the child,\n    // which the other wrappers don't forward correctly.\n    child = (\n      // @ts-ignore\n      <Position\n        {...{\n          container,\n          containerPadding,\n          target,\n          placement,\n          shouldUpdatePosition,\n          offset\n        }}\n        ref={this.positionRef}\n      >\n        {child}\n      </Position>\n    );\n\n    if (Transition) {\n      let {onExit, onExiting, onEnter, onEntering, onEntered} = props;\n\n      // This animates the child node by injecting props, so it must precede\n      // anything that adds a wrapping div.\n      child = (\n        <Transition\n          in={props.show}\n          appear\n          onExit={onExit}\n          onExiting={onExiting}\n          onExited={this.onHiddenListener}\n          onEnter={onEnter}\n          onEntering={onEntering}\n          onEntered={onEntered}\n        >\n          {child}\n        </Transition>\n      );\n    }\n\n    // This goes after everything else because it adds a wrapping div.\n    if (rootClose) {\n      return (\n        // @ts-ignore\n        <Portal container={container}>\n          <RootClose onRootClose={props.onHide}>\n            {(ref: any) => {\n              if (React.isValidElement(child)) {\n                return React.cloneElement(child, {\n                  ref: ref\n                });\n              }\n\n              return <div ref={ref}>{child}</div>;\n            }}\n          </RootClose>\n        </Portal>\n      );\n    }\n\n    // @ts-ignore\n    return <Portal container={container}>{child}</Portal>;\n  }\n}\n"
    ]
}