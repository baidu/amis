{
    "version": 3,
    "file": "InputBox.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/InputBox.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {ThemeProps, themeable} from '../theme';\nimport Input from './Input';\nimport {autobind, ucFirst} from '../utils/helper';\nimport {Icon} from './icons';\n\nexport interface InputBoxProps\n  extends ThemeProps,\n    Omit<React.DOMAttributes<HTMLInputElement>, 'prefix' | 'onChange'> {\n  value?: string;\n  readOnly?: boolean;\n  onChange?: (value: string) => void;\n  onClear?: (e: React.MouseEvent<any>) => void;\n  clearable?: boolean;\n  disabled?: boolean;\n  hasError?: boolean;\n  placeholder?: string;\n  prefix?: JSX.Element;\n  children?: JSX.Element;\n  borderMode?: 'full' | 'half' | 'none';\n}\n\nexport interface InputBoxState {\n  isFocused: boolean;\n}\n\nexport class InputBox extends React.Component<InputBoxProps, InputBoxState> {\n  static defaultProps = {\n    clearable: true,\n    placeholder: ''\n  };\n\n  state = {\n    isFocused: false\n  };\n\n  @autobind\n  clearValue(e: any) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const onClear = this.props.onClear;\n    const onChange = this.props.onChange;\n    onClear?.(e);\n    onChange?.('');\n  }\n\n  @autobind\n  handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const onChange = this.props.onChange;\n    onChange && onChange(e.currentTarget.value);\n  }\n\n  @autobind\n  handleFocus(e: any) {\n    const onFocus = this.props.onFocus;\n    onFocus && onFocus(e);\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  @autobind\n  handleBlur(e: any) {\n    const onBlur = this.props.onBlur;\n    onBlur && onBlur(e);\n    this.setState({\n      isFocused: false\n    });\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      classPrefix,\n      clearable,\n      disabled,\n      hasError,\n      value,\n      placeholder,\n      prefix: result,\n      children,\n      borderMode,\n      onClick,\n      ...rest\n    } = this.props;\n    const isFocused = this.state.isFocused;\n\n    return (\n      <div\n        className={cx('InputBox', className, {\n          'is-focused': isFocused,\n          'is-disabled': disabled,\n          'is-error': hasError,\n          'is-clickable': onClick,\n          [`InputBox--border${ucFirst(borderMode)}`]: borderMode\n        })}\n        onClick={onClick}\n      >\n        {result}\n\n        <Input\n          {...rest}\n          value={value || ''}\n          onChange={this.handleChange}\n          placeholder={placeholder}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          size={12}\n          disabled={disabled}\n        />\n\n        {children}\n\n        {clearable && !disabled && value ? (\n          <a onClick={this.clearValue} className={cx('InputBox-clear')}>\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default themeable(InputBox);\n"
    ]
}