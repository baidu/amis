{
    "version": 3,
    "file": "index.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/schema-editor/index.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 用来定义数据结构的编辑器\n */\n\nimport React from 'react';\nimport {localeable, LocaleProps} from '../../locale';\nimport {themeable, ThemeProps} from '../../theme';\nimport type {JSONSchema} from '../../utils/DataScope';\nimport {uncontrollable} from 'uncontrollable';\nimport {SchemaEditorItem} from './Item';\nimport type {JSONSchema7TypeName} from 'json-schema';\nimport {autobind} from '../../utils/helper';\n\nexport interface SchemaEditorProps extends LocaleProps, ThemeProps {\n  value?: JSONSchema;\n  onChange: (value: JSONSchema) => void;\n  disabled?: boolean;\n  defaultType: JSONSchema7TypeName;\n  renderExtraProps?: (\n    value: JSONSchema,\n    onChange: (value: JSONSchema) => void\n  ) => JSX.Element;\n  renderModalProps?: (\n    value: JSONSchema,\n    onChange: (value: JSONSchema) => void\n  ) => JSX.Element;\n\n  disabledTypes?: Array<string>;\n\n  /**\n   * 预设模板\n   */\n  definitions?: {\n    [propName: string]: {\n      type:\n        | 'string'\n        | 'number'\n        | 'integer'\n        | 'object'\n        | 'array'\n        | 'boolean'\n        | 'null';\n      title: string;\n      [propName: string]: any;\n    };\n  };\n\n  /**\n   * 顶层是否允许修改类型\n   */\n  rootTypeMutable: boolean;\n\n  /**\n   * 顶层类型信息是否隐藏\n   */\n  showRootInfo: boolean;\n\n  /**\n   * 是否开启高级配置\n   */\n  enableAdvancedSetting?: boolean;\n}\n\nexport class SchemaEditor extends React.Component<SchemaEditorProps> {\n  static defaultProps: Pick<\n    SchemaEditorProps,\n    'defaultType' | 'rootTypeMutable' | 'showRootInfo' | 'disabledTypes'\n  > = {\n    defaultType: 'object',\n    rootTypeMutable: false,\n    showRootInfo: false,\n    disabledTypes: ['null']\n  };\n\n  defaultTypes: Array<any>;\n\n  constructor(props: SchemaEditorProps) {\n    super(props);\n\n    const __ = props.translate;\n    this.defaultTypes = [\n      {\n        label: __('SchemaType.string'),\n        value: 'string'\n      },\n\n      {\n        label: __('SchemaType.number'),\n        value: 'number'\n      },\n\n      {\n        label: __('SchemaType.integer'),\n        value: 'integer'\n      },\n\n      {\n        label: __('SchemaType.boolean'),\n        value: 'boolean'\n      },\n\n      {\n        label: __('SchemaType.null'),\n        value: 'null'\n      },\n\n      {\n        label: __('SchemaType.object'),\n        value: 'object'\n      },\n\n      {\n        label: __('SchemaType.array'),\n        value: 'array'\n      }\n    ];\n  }\n\n  @autobind\n  handleTypeChange(type: string, value: any, origin: any) {\n    const {definitions} = this.props;\n\n    if (type === 'array') {\n      value.items = {\n        type: 'string'\n      };\n    }\n\n    if (definitions?.[type]) {\n      value = {\n        ...value,\n        ...definitions[type],\n        $ref: type\n      };\n    }\n\n    return value;\n  }\n\n  render() {\n    const {\n      defaultType,\n      classnames: cx,\n      onChange,\n      renderExtraProps,\n      renderModalProps,\n      translate,\n      locale,\n      classPrefix,\n      rootTypeMutable,\n      showRootInfo,\n      disabled,\n      definitions,\n      enableAdvancedSetting\n    } = this.props;\n    const value: JSONSchema = this.props.value || {\n      type: defaultType || 'object'\n    };\n\n    const disabledTypes = Array.isArray(this.props.disabledTypes)\n      ? this.props.disabledTypes\n      : [];\n    let types = this.defaultTypes.concat();\n\n    if (definitions) {\n      const keys = Object.keys(definitions);\n      keys.forEach(key => {\n        const definition = definitions[key];\n\n        if (\n          definition?.type &&\n          definition.title &&\n          [\n            'string',\n            'number',\n            'integer',\n            'object',\n            'array',\n            'boolean',\n            'null'\n          ].includes(definition.type)\n        ) {\n          types.push({\n            value: key,\n            label: translate(definition.title)\n          });\n        }\n      });\n    }\n\n    if (disabledTypes.length) {\n      types = types.filter(item => !~disabledTypes.indexOf(item.value));\n    }\n\n    return (\n      <div className={cx('SchemaEditor')}>\n        <SchemaEditorItem\n          types={types}\n          typeMutable={rootTypeMutable}\n          showInfo={showRootInfo}\n          value={value}\n          onChange={onChange}\n          renderExtraProps={renderExtraProps}\n          renderModalProps={renderModalProps}\n          locale={locale}\n          translate={translate}\n          classnames={cx}\n          classPrefix={classPrefix}\n          disabled={disabled}\n          onTypeChange={this.handleTypeChange}\n          enableAdvancedSetting={enableAdvancedSetting}\n        />\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(SchemaEditor, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}