{
    "version": 3,
    "file": "NumberInput.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/NumberInput.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\n// @ts-ignore\nimport InputNumber from 'rc-input-number';\nimport getMiniDecimal, {\n  DecimalClass,\n  toFixed\n} from 'rc-input-number/lib/utils/MiniDecimal';\nimport {getNumberPrecision} from 'rc-input-number/lib/utils/numberUtil';\n\nimport {Icon} from './icons';\nimport {ThemeProps, themeable} from '../theme';\nimport {autobind, ucFirst} from '../utils/helper';\n\nexport interface NumberProps extends ThemeProps {\n  placeholder?: string;\n  max?: number;\n  min?: number;\n  step?: number;\n  showSteps?: boolean;\n  precision?: number;\n  disabled?: boolean;\n  /**\n   * 只读\n   */\n  readOnly?: boolean;\n  value?: number;\n  onChange?: (value: number) => void;\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n  /**\n   * 指定输入框展示值的格式\n   */\n  formatter?: Function;\n  /**\n   * 指定从 formatter 里转换回数字的方式，和 formatter 搭配使用\n   */\n  parser?: Function;\n  inputRef?: Function;\n  /**\n   * 获取焦点事件\n   */\n  onFocus?: Function;\n  /**\n   * 失去焦点事件\n   */\n  onBlur?: Function;\n  /**\n   * 指定输入框是基础输入框，增强输入框\n   */\n  displayMode?: 'base' | 'enhance';\n  keyboard?: Boolean;\n}\n\nexport class NumberInput extends React.Component<NumberProps, any> {\n  static defaultProps: Pick<NumberProps, 'step' | 'readOnly' | 'borderMode'> = {\n    step: 1,\n    readOnly: false,\n    borderMode: 'full'\n  };\n\n  @autobind\n  handleChange(value: any) {\n    const {min, max, onChange} = this.props;\n\n    if (typeof value === 'number') {\n      if (typeof min === 'number') {\n        value = Math.max(value, min);\n      }\n\n      if (typeof max === 'number') {\n        value = Math.min(value, max);\n      }\n    }\n\n    onChange?.(value);\n  }\n  @autobind\n  handleFocus(e: React.SyntheticEvent<HTMLElement>) {\n    const {onFocus} = this.props;\n    onFocus && onFocus(e);\n  }\n\n  @autobind\n  handleBlur(e: React.SyntheticEvent<HTMLElement>) {\n    const {onBlur} = this.props;\n    onBlur && onBlur(e);\n  }\n  @autobind\n  handleEnhanceModeChange(action: 'add' | 'subtract'): void {\n    const {value, step, disabled, readOnly, precision} = this.props;\n    // value为undefined会导致溢出错误\n    let val = Number(value) || 0;\n    if (disabled || readOnly) {\n      return;\n    }\n    if (isNaN(Number(step)) || !Number(step)) {\n      return;\n    }\n    let stepDecimal = getMiniDecimal(Number(step));\n    if (action !== 'add') {\n      stepDecimal = stepDecimal.negate();\n    }\n    const target = getMiniDecimal(val).add(stepDecimal.toString());\n    const getPrecision = (numStr: string) => {\n      if (precision! >= 0) {\n        return precision;\n      }\n      return Math.max(getNumberPrecision(numStr), getNumberPrecision(Number(step) || 1));\n    };\n    const triggerValueUpdate = (newValue: DecimalClass, userTyping: boolean): DecimalClass => {\n      let updateValue = newValue;\n      const numStr = updateValue.toString();\n      const mergedPrecision = getPrecision(numStr);\n      if (mergedPrecision! >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision));\n      }\n\n      return updateValue;\n\n    };\n    const updatedValue = triggerValueUpdate(target, false);\n    val = Number(updatedValue.toString());\n    this.handleChange(val);\n  }\n  @autobind\n  renderBase() {\n    const {\n      className,\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      step,\n      precision,\n      max,\n      min,\n      disabled,\n      placeholder,\n      onChange,\n      showSteps,\n      formatter,\n      parser,\n      borderMode,\n      readOnly,\n      displayMode,\n      inputRef,\n      keyboard\n    } = this.props;\n\n    let precisionProps: any = {};\n\n    if (typeof precision === 'number') {\n      precisionProps.precision = precision;\n    }\n    return <InputNumber\n      className={cx(className, showSteps === false ? 'no-steps' : '',\n        displayMode === 'enhance' ? 'Number--enhance-input' : '', {\n        [`Number--border${ucFirst(borderMode)}`]: borderMode\n      })}\n      ref={inputRef}\n      readOnly={readOnly}\n      prefixCls={`${ns}Number`}\n      value={value}\n      step={step}\n      max={max}\n      min={min}\n      formatter={formatter}\n      parser={parser}\n      onChange={this.handleChange}\n      disabled={disabled}\n      placeholder={placeholder}\n      onFocus={this.handleFocus}\n      onBlur={this.handleBlur}\n      keyboard={keyboard}\n      {...precisionProps}\n    />\n  }\n  render(): JSX.Element {\n    const {\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      precision,\n      max,\n      min,\n      disabled,\n      showSteps,\n      borderMode,\n      readOnly,\n      displayMode\n    } = this.props;\n\n    let precisionProps: any = {};\n\n    if (typeof precision === 'number') {\n      precisionProps.precision = precision;\n    }\n    return (\n      <>\n        {displayMode === 'enhance' ?\n          <div className={cx('Number--enhance',\n            disabled ? 'Number--enhance-disabled' : '',\n            showSteps === false ? 'Number--enhance-no-steps' : '',\n            {\n              [`Number--enhance-border${ucFirst(borderMode)}`]: borderMode\n            })}>\n            <div\n              className={cx('Number--enhance-left-icon',\n              value && value === min ? 'Number--enhance-border-min': '',\n              disabled ? 'Number--enhance-border-disabled': '',\n              readOnly ? 'Number--enhance-border-readOnly': '')} onClick={() => this.handleEnhanceModeChange('subtract')}>\n              <Icon icon=\"minus\" className=\"icon\" />\n            </div>\n            {this.renderBase()}\n            <div\n              className={cx('Number--enhance-right-icon',\n              value && value === max ? 'Number--enhance-border-max': '',\n              disabled ? 'Number--enhance-border-disabled': '',\n              readOnly ? 'Number--enhance-border-readOnly': '')} onClick={() => this.handleEnhanceModeChange('add')}>\n              <Icon icon=\"plus\" className=\"icon \" />\n            </div>\n          </div> : this.renderBase()}\n      </>\n    );\n  }\n}\n\nexport default themeable(NumberInput);\n"
    ]
}