{
    "version": 3,
    "file": "PopUp.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/PopUp.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file PopUp\n * @description\n * @author fex\n */\n\nimport React from 'react';\nimport {themeable, ThemeProps} from '../theme';\nimport {localeable, LocaleProps} from '../locale';\nimport Transition, {\n  ENTERED,\n  EXITING,\n  EXITED,\n  ENTERING\n} from 'react-transition-group/Transition';\nimport Portal from 'react-overlays/Portal';\nimport {Icon} from './icons';\nimport Button from './Button';\n\nexport interface PopUpPorps extends ThemeProps, LocaleProps {\n  title?: string;\n  className?: string;\n  style?: {\n    [styleName: string]: string;\n  };\n  overlay?: boolean;\n  onHide?: () => void;\n  isShow?: boolean;\n  container?: any;\n  showConfirm?: boolean;\n  onConfirm?: (value: any) => void;\n  showClose?: boolean;\n  placement?: 'left' | 'center' | 'right';\n  header?: JSX.Element;\n}\n\nconst fadeStyles: {\n  [propName: string]: string;\n} = {\n  [ENTERED]: '',\n  [EXITING]: 'out',\n  [EXITED]: '',\n  [ENTERING]: 'in'\n};\nexport class PopUp extends React.PureComponent<PopUpPorps> {\n  scrollTop: number = 0;\n  static defaultProps = {\n    className: '',\n    overlay: true,\n    isShow: false,\n    container: document.body,\n    showClose: true,\n    onConfirm: () => {}\n  };\n  componentDidUpdate() {\n    if (this.props.isShow) {\n      this.scrollTop =\n        document.body.scrollTop || document.documentElement.scrollTop;\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n      document.body.scrollTop = this.scrollTop;\n    }\n  }\n  componentWillUnmount() {\n    document.body.style.overflow = 'auto';\n    document.body.scrollTop = this.scrollTop;\n  }\n  handleClick(e: React.MouseEvent) {\n    e.stopPropagation();\n  }\n\n  render() {\n    const {\n      style,\n      title,\n      children,\n      overlay,\n      onHide,\n      onConfirm,\n      classPrefix: ns,\n      classnames: cx,\n      className,\n      isShow,\n      container,\n      showConfirm,\n      translate: __,\n      showClose,\n      header,\n      placement = 'center',\n      ...rest\n    } = this.props;\n\n    const outerStyle: any = {\n      ...style\n    };\n    delete outerStyle.top;\n    return (\n      <Portal container={container}>\n        <Transition mountOnEnter unmountOnExit in={isShow} timeout={500} appear>\n          {(status: string) => {\n            return (\n              <div\n                className={cx(`${ns}PopUp`, className, fadeStyles[status])}\n                style={outerStyle}\n                {...rest}\n                onClick={this.handleClick}\n              >\n                {overlay && (\n                  <div className={`${ns}PopUp-overlay`} onClick={onHide} />\n                )}\n                <div className={cx(`${ns}PopUp-inner`)}>\n                  {!showConfirm && showClose ? (\n                    <div className={cx(`${ns}PopUp-closeWrap`)}>\n                      {header}\n                      <span className={cx(`PopUp-closeBox`)} onClick={onHide}>\n                        <Icon\n                          icon=\"close\"\n                          className={cx('icon', `${ns}PopUp-close`)}\n                        />\n                      </span>\n                    </div>\n                  ) : null}\n                  {showConfirm && (\n                    <div className={cx(`${ns}PopUp-toolbar`)}>\n                      <Button\n                        className={cx(`${ns}PopUp-cancel`)}\n                        level=\"text\"\n                        onClick={onHide}\n                      >\n                        {__('cancel')}\n                      </Button>\n                      {title && (\n                        <span className={cx(`${ns}PopUp-title`)}>{title}</span>\n                      )}\n                      <Button\n                        className={cx(`${ns}PopUp-confirm`)}\n                        level=\"text\"\n                        onClick={onConfirm}\n                      >\n                        {__('confirm')}\n                      </Button>\n                    </div>\n                  )}\n                  <div\n                    className={cx(`${ns}PopUp-content`, `justify-${placement}`)}\n                  >\n                    {isShow ? children : null}\n                  </div>\n                  <div className={cx(`PopUp-safearea`)}></div>\n                </div>\n              </div>\n            );\n          }}\n        </Transition>\n      </Portal>\n    );\n  }\n}\n\nexport default themeable(localeable(PopUp));\n"
    ]
}