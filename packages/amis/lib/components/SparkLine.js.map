{
    "version": 3,
    "file": "SparkLine.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/SparkLine.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {localeable, LocaleProps} from '../locale';\nimport {themeable, ThemeProps} from '../theme';\nimport {PlainObject} from '../types';\n\nexport interface SparkLineProps extends ThemeProps, LocaleProps {\n  className?: string;\n  width: number;\n  height: number;\n  value?: Array<\n    | number\n    | {\n        value: number;\n        label?: string;\n      }\n  >;\n  placeholder?: string;\n  onClick?: (e: React.MouseEvent, value?: PlainObject) => void;\n}\n\nexport class SparkLine extends React.Component<SparkLineProps> {\n  static defaultProps = {\n    width: 100,\n    height: 50\n  };\n\n  normalizeValue(item: any): number {\n    if (typeof item === 'number') {\n      return item;\n    } else if (item && typeof item.value === 'number') {\n      return item.value;\n    } else {\n      return Number(item) || 0;\n    }\n  }\n\n  renderLines() {\n    const {width, height, value, classnames: cx} = this.props;\n\n    const values = value!.map(item => this.normalizeValue(item));\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const duration = max - min || 1;\n\n    const gap = width / (values.length - 1);\n    const points: Array<{\n      x: number;\n      y: number;\n    }> = [];\n\n    values.forEach((value, index) => {\n      points.push({\n        x: index * gap,\n        y: height - ((value - min) * height) / duration\n      });\n    });\n\n    const lineD = points\n      .map((value, index) => `${index === 0 ? 'M' : 'L'} ${value.x} ${value.y}`)\n      .join(' ');\n    const areaD = `${lineD} V ${height} L 0 ${height} Z`;\n\n    // todo 支持鼠标 hover 显示对应数据。\n\n    return (\n      <g>\n        <path className={cx(`Sparkline-area`)} d={areaD} stroke=\"none\" />\n        <path className={cx(`Sparkline-line`)} d={lineD} fill=\"none\" />\n      </g>\n    );\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      className,\n      value,\n      width,\n      height,\n      placeholder,\n      translate: __,\n      onClick\n    } = this.props;\n\n    return (\n      <div\n        className={cx(\n          'Sparkline',\n          className,\n          onClick ? 'Sparkline--clickable' : ''\n        )}\n        onClick={onClick}\n      >\n        {Array.isArray(value) && value.length > 1 ? (\n          <svg\n            className={cx('Sparkline-svg')}\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n          >\n            {this.renderLines()}\n          </svg>\n        ) : (\n          placeholder ?? __('placeholder.empty')\n        )}\n      </div>\n    );\n  }\n}\n\nexport default themeable(localeable(SparkLine));\n"
    ]
}