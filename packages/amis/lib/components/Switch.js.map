{
    "version": 3,
    "file": "Switch.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Switch.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Switch\n * @description\n * @author fex\n */\n\nimport React from 'react';\nimport {ClassNamesFn, themeable} from '../theme';\nimport {classPrefix, classnames} from '../themes/default';\n\nconst sizeMap = {\n  md: 'i-switch-md',\n  lg: 'i-switch-lg',\n  middle: 'i-switch-md',\n  large: 'i-switch-lg'\n};\n\nconst levelMap = {\n  info: 'bg-info',\n  primary: 'bg-primary',\n  danger: 'bg-danger'\n};\n\ninterface SwitchProps {\n  id?: string;\n  size?: 'md' | 'lg' | 'middle' | 'large';\n  level?: 'info' | 'primary' | 'danger';\n  className?: string;\n  classPrefix: string;\n  classnames: ClassNamesFn;\n  onChange?: (checked: boolean | string | number) => void;\n  value?: boolean | string | number;\n  inline?: boolean;\n  trueValue?: boolean | string | number;\n  falseValue?: boolean | string | number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  onText?: React.ReactNode;\n  offText?: React.ReactNode;\n  checked?: boolean;\n}\n\nexport class Switch extends React.PureComponent<SwitchProps, any> {\n  static defaultProps = {\n    trueValue: true,\n    falseValue: false\n  };\n\n  constructor(props: SwitchProps) {\n    super(props);\n\n    this.hanldeCheck = this.hanldeCheck.bind(this);\n  }\n\n  hanldeCheck(e: React.ChangeEvent<HTMLInputElement>) {\n    const {trueValue, falseValue, onChange} = this.props;\n\n    if (!onChange) {\n      return;\n    }\n\n    onChange(e.currentTarget.checked ? trueValue! : falseValue!);\n  }\n\n  render() {\n    let {\n      size,\n      level,\n      className,\n      classPrefix,\n      onChange,\n      value,\n      inline,\n      trueValue,\n      falseValue,\n      onText = '',\n      offText = '',\n      disabled,\n      readOnly,\n      checked,\n      classnames: cx,\n      ...rest\n    } = this.props;\n\n    className =\n      (className ? className : '') +\n      (size && sizeMap[size] ? ` ${sizeMap[size]}` : '') +\n      (level && levelMap[level] ? ` ${levelMap[level]}` : '');\n\n    const isChecked =\n      typeof checked !== 'undefined'\n        ? checked\n        : typeof value === 'undefined'\n        ? false\n        : value == trueValue;\n\n    return (\n      <label\n        className={cx(\n          `Switch`,\n          isChecked ? 'is-checked' : '',\n          disabled ? 'is-disabled' : '',\n          className\n        )}\n      >\n        <input\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={this.hanldeCheck}\n          disabled={disabled}\n          readOnly={readOnly}\n          {...rest}\n        />\n\n        <span className=\"text\">{isChecked ? onText : offText}</span>\n        <span className=\"slider\"></span>\n      </label>\n    );\n  }\n}\n\nexport default themeable(Switch);\n"
    ]
}