{
    "version": 3,
    "file": "Selection.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Selection.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Checkboxes\n * @description 多选输入框\n * @author fex\n */\n\nimport React from 'react';\nimport {uncontrollable} from 'uncontrollable';\nimport Checkbox from './Checkbox';\nimport chunk from 'lodash/chunk';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {Option, value2array, Options} from './Select';\nimport find from 'lodash/find';\nimport {autobind, findTree} from '../utils/helper';\nimport isEqual from 'lodash/isEqual';\nimport {LocaleProps, localeable} from '../locale';\n// import isPlainObject from 'lodash/isPlainObject';\n\nexport interface BaseSelectionProps extends ThemeProps, LocaleProps {\n  options: Options;\n  className?: string;\n  placeholder?: string;\n  value?: any | Array<any>;\n  multiple?: boolean;\n  clearable?: boolean;\n  onChange?: (value: Array<any> | any) => void;\n  onDeferLoad?: (option: Option) => void;\n  onLeftDeferLoad?: (option: Option, leftOptions: Option) => void;\n  inline?: boolean;\n  labelClassName?: string;\n  option2value?: (option: Option) => any;\n  itemClassName?: string;\n  itemRender: (option: Option, states: ItemRenderStates) => JSX.Element;\n  disabled?: boolean;\n  onClick?: (e: React.MouseEvent) => void;\n}\n\nexport interface ItemRenderStates {\n  index: number;\n  multiple?: boolean;\n  checked: boolean;\n  onChange: () => void;\n  disabled?: boolean;\n}\n\nexport class BaseSelection<\n  T extends BaseSelectionProps = BaseSelectionProps,\n  S = any\n> extends React.Component<T, S> {\n  static itemRender(option: Option, states: ItemRenderStates) {\n    return <span>{option.label}</span>;\n  }\n\n  static defaultProps = {\n    placeholder: 'placeholder.noOption',\n    itemRender: BaseSelection.itemRender,\n    multiple: true,\n    clearable: false\n  };\n\n  static value2array(\n    value: any,\n    options: Options,\n    option2value: (option: Option) => any = (option: Option) => option\n  ): Options {\n    if (value === void 0) {\n      return [];\n    }\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    return value.map((value: any) => {\n      const option = findTree(options, option =>\n        isEqual(option2value(option), value)\n      );\n      return option || value;\n    });\n  }\n\n  static resolveSelected(\n    value: any,\n    options: Options,\n    option2value: (option: Option) => any = (option: Option) => option\n  ) {\n    value = Array.isArray(value) ? value[0] : value;\n    return findTree(options, option => isEqual(option2value(option), value));\n  }\n\n  // 获取两个数组的交集\n  intersectArray(\n    arr1: undefined | Array<Option>,\n    arr2: undefined | Array<Option>\n  ): Array<Option> {\n    if (!Array.isArray(arr1) || !Array.isArray(arr2)) {\n      return [];\n    }\n    const len1 = arr1.length;\n    const len2 = arr2.length;\n    if (len1 < len2) {\n      return this.intersectArray(arr2, arr1);\n    }\n    return Array.from(new Set(arr1.filter(item => arr2.includes(item))));\n  }\n\n  toggleOption(option: Option) {\n    const {\n      value,\n      onChange,\n      option2value,\n      options,\n      disabled,\n      multiple,\n      clearable\n    } = this.props;\n\n    if (disabled || option.disabled) {\n      return;\n    }\n\n    let valueArray = BaseSelection.value2array(value, options, option2value);\n    let idx = valueArray.indexOf(option);\n\n    if (~idx && (multiple || clearable)) {\n      valueArray.splice(idx, 1);\n    } else if (multiple) {\n      valueArray.push(option);\n    } else {\n      valueArray = [option];\n    }\n\n    let newValue: string | Array<Option> = option2value\n      ? valueArray.map(item => option2value(item))\n      : valueArray;\n\n    onChange && onChange(multiple ? newValue : newValue[0]);\n  }\n\n  @autobind\n  toggleAll() {\n    const {value, onChange, option2value, options} = this.props;\n\n    let valueArray: Array<Option> = [];\n\n    const availableOptions = options.filter(option => !option.disabled);\n    const intersectOptions = this.intersectArray(value, availableOptions);\n\n    if (!Array.isArray(value)) {\n      valueArray = availableOptions;\n    } else if (intersectOptions.length < availableOptions.length) {\n      valueArray = Array.from(new Set([...value, ...availableOptions]));\n    } else {\n      valueArray = value.filter(item => !availableOptions.includes(item));\n    }\n\n    let newValue: string | Array<Option> = option2value\n      ? valueArray.map(item => option2value(item))\n      : valueArray;\n\n    onChange && onChange(newValue);\n  }\n\n  render() {\n    const {\n      value,\n      options,\n      className,\n      placeholder,\n      inline,\n      labelClassName,\n      disabled,\n      classnames: cx,\n      option2value,\n      itemClassName,\n      itemRender,\n      multiple,\n      onClick\n    } = this.props;\n\n    const __ = this.props.translate;\n\n    let valueArray = BaseSelection.value2array(value, options, option2value);\n    let body: Array<React.ReactNode> = [];\n\n    if (Array.isArray(options) && options.length) {\n      body = options.map((option, key) => (\n        <Checkbox\n          type={multiple ? 'checkbox' : 'radio'}\n          className={cx(itemClassName, option.className)}\n          key={key}\n          onChange={() => this.toggleOption(option)}\n          checked={!!~valueArray.indexOf(option)}\n          disabled={disabled || option.disabled}\n          labelClassName={labelClassName}\n          description={option.description}\n        >\n          {itemRender(option, {\n            index: key,\n            multiple: multiple,\n            checked: !!~valueArray.indexOf(option),\n            onChange: () => this.toggleOption(option),\n            disabled: disabled || option.disabled\n          })}\n        </Checkbox>\n      ));\n    }\n\n    return (\n      <div\n        className={cx(\n          'Selection',\n          className,\n          inline ? 'Selection--inline' : ''\n        )}\n        onClick={onClick}\n      >\n        {body && body.length ? body : <div>{__(placeholder)}</div>}\n      </div>\n    );\n  }\n}\n\nexport class Selection extends BaseSelection {}\n\nexport default themeable(\n  localeable(\n    uncontrollable(Selection, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}