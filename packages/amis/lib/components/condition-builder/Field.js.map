{
    "version": 3,
    "file": "Field.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/condition-builder/Field.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport PopOverContainer from '../PopOverContainer';\nimport ListSelection from '../GroupedSelection';\nimport ResultBox from '../ResultBox';\nimport {ClassNamesFn, ThemeProps, themeable} from '../../theme';\nimport {Icon} from '../icons';\nimport {findTree, noop} from '../../utils/helper';\nimport {localeable, LocaleProps} from '../../locale';\nimport SearchBox from '../SearchBox';\n\nexport interface ConditionFieldProps extends ThemeProps, LocaleProps {\n  options: Array<any>;\n  value: any;\n  onChange: (value: any) => void;\n  disabled?: boolean;\n  fieldClassName?: string;\n  searchable?: boolean;\n  popOverContainer?: any;\n}\n\nexport interface ConditionFieldState {\n  searchText: string;\n}\n\nconst option2value = (item: any) => item.name;\n\nexport class ConditionField extends React.Component<\n  ConditionFieldProps,\n  ConditionFieldState\n> {\n  constructor(props: ConditionFieldProps) {\n    super(props);\n    this.state = {\n      searchText: ''\n    };\n    this.onSearch = this.onSearch.bind(this);\n    this.filterOptions = this.filterOptions.bind(this);\n  }\n\n  onSearch(text: string) {\n    let txt = text.toLowerCase();\n\n    this.setState({searchText: txt});\n  }\n\n  filterOptions(options: any[]) {\n    const txt = this.state.searchText;\n    if (!txt) {\n      return this.props.options;\n    }\n    return options\n      .map((item: any) => {\n        if (item.children) {\n          let children = item.children.filter((child: any) => {\n            return (\n              child.name.toLowerCase().includes(txt) ||\n              child.label.toLowerCase().includes(txt)\n            );\n          });\n          return children.length > 0\n            ? Object.assign({}, item, {children}) // 需要copy一份，防止覆盖原始数据\n            : false;\n        } else {\n          return item.name.toLowerCase().includes(txt) ||\n            item.label.toLowerCase().includes(txt)\n            ? item\n            : false;\n        }\n      })\n      .filter((item: any) => {\n        return !!item;\n      });\n  }\n\n  // 选了值，还原options\n  onPopClose(e: React.MouseEvent, onClose: () => void) {\n    this.setState({searchText: ''});\n    onClose();\n  }\n\n  render() {\n    const {\n      options,\n      onChange,\n      value,\n      classnames: cx,\n      fieldClassName,\n      disabled,\n      translate: __,\n      searchable,\n      popOverContainer\n    } = this.props;\n\n    return (\n      <PopOverContainer\n        popOverContainer={popOverContainer || (() => findDOMNode(this))}\n        popOverRender={({onClose}) => (\n          <>\n            {searchable ? (\n              <SearchBox mini={false} onSearch={this.onSearch} />\n            ) : null}\n            <ListSelection\n              multiple={false}\n              onClick={e => this.onPopClose(e, onClose)}\n              options={this.filterOptions(this.props.options)}\n              value={[value]}\n              option2value={option2value}\n              onChange={(value: any) =>\n                onChange(Array.isArray(value) ? value[0] : value)\n              }\n            />\n          </>\n        )}\n      >\n        {({onClick, ref, isOpened}) => (\n          <div className={cx('CBGroup-field')}>\n            <ResultBox\n              className={cx(\n                'CBGroup-fieldInput',\n                fieldClassName,\n                isOpened ? 'is-active' : ''\n              )}\n              ref={ref}\n              allowInput={false}\n              result={\n                value ? findTree(options, item => item.name === value) : ''\n              }\n              onResultChange={noop}\n              onResultClick={onClick}\n              placeholder={__('Condition.field_placeholder')}\n              disabled={disabled}\n            >\n              <span className={cx('CBGroup-fieldCaret')}>\n                <Icon icon=\"caret\" className=\"icon\" />\n              </span>\n            </ResultBox>\n          </div>\n        )}\n      </PopOverContainer>\n    );\n  }\n}\n\nexport default themeable(localeable(ConditionField));\n"
    ]
}