{
    "version": 3,
    "file": "GroupOrItem.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/condition-builder/GroupOrItem.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {Config} from './config';\nimport {Fields, ConditionGroupValue, Funcs, ConditionValue} from './types';\nimport {ThemeProps, themeable} from '../../theme';\nimport React from 'react';\nimport {Icon} from '../icons';\nimport {autobind} from '../../utils/helper';\nimport ConditionGroup from './Group';\nimport ConditionItem from './Item';\nimport {FormulaPickerProps} from '../formula/Picker';\nimport Button from '../Button';\n\nexport interface CBGroupOrItemProps extends ThemeProps {\n  builderMode?: 'simple' | 'full';\n  config: Config;\n  value?: ConditionGroupValue;\n  fields: Fields;\n  funcs?: Funcs;\n  index: number;\n  data?: any;\n  draggable?: boolean;\n  disabled?: boolean;\n  searchable?: boolean;\n  onChange: (value: ConditionGroupValue, index: number) => void;\n  removeable?: boolean;\n  onDragStart?: (e: React.MouseEvent) => void;\n  onRemove?: (index: number) => void;\n  fieldClassName?: string;\n  formula?: FormulaPickerProps;\n  popOverContainer?: any;\n  renderEtrValue?: any;\n}\n\nexport class CBGroupOrItem extends React.Component<CBGroupOrItemProps> {\n  state = {\n    hover: false\n  };\n  @autobind\n  handleItemChange(value: any) {\n    this.props.onChange(value, this.props.index);\n  }\n\n  @autobind\n  handleItemRemove() {\n    this.props.onRemove?.(this.props.index);\n  }\n\n  @autobind\n  handlerHoverIn(e: any) {\n    e.stopPropagation();\n    this.setState({\n      hover: true\n    });\n  }\n\n  @autobind\n  handlerHoverOut(e: any) {\n    this.setState({\n      hover: false\n    });\n  }\n\n  render() {\n    const {\n      builderMode,\n      classnames: cx,\n      fieldClassName,\n      value,\n      config,\n      fields,\n      funcs,\n      draggable,\n      data,\n      disabled,\n      searchable,\n      onDragStart,\n      formula,\n      popOverContainer,\n      renderEtrValue\n    } = this.props;\n\n    return (\n      <div\n        className={cx(\n          `CBGroupOrItem${builderMode === 'simple' ? '-simple' : ''}`\n        )}\n        data-id={value?.id}\n      >\n        <div className={cx('CBGroupOrItem-body')}>\n          {value?.conjunction ? (\n            <div\n              className={cx(\n                'CBGroupOrItem-body-group',\n                this.state.hover && 'CBGroupOrItem-body-group--hover'\n              )}\n              onMouseOver={this.handlerHoverIn}\n              onMouseOut={this.handlerHoverOut}\n            >\n              {draggable ? (\n                <a\n                  draggable\n                  onDragStart={onDragStart}\n                  className={cx('CBGroupOrItem-dragbar')}\n                >\n                  <Icon icon=\"drag-bar\" className=\"icon\" />\n                </a>\n              ) : null}\n              <ConditionGroup\n                disabled={disabled}\n                searchable={searchable}\n                onDragStart={onDragStart}\n                config={config}\n                fields={fields}\n                value={value as ConditionGroupValue}\n                onChange={this.handleItemChange}\n                fieldClassName={fieldClassName}\n                funcs={funcs}\n                removeable\n                onRemove={this.handleItemRemove}\n                data={data}\n                renderEtrValue={renderEtrValue}\n              />\n            </div>\n          ) : (\n            <div className={cx('CBGroupOrItem-body-item')}>\n              {draggable ? (\n                <a\n                  draggable\n                  onDragStart={onDragStart}\n                  className={cx('CBGroupOrItem-dragbar')}\n                >\n                  <Icon icon=\"drag-bar\" className=\"icon\" />\n                </a>\n              ) : null}\n              <ConditionItem\n                disabled={disabled}\n                searchable={searchable}\n                config={config}\n                fields={fields}\n                value={value as ConditionValue}\n                onChange={this.handleItemChange}\n                fieldClassName={fieldClassName}\n                funcs={funcs}\n                data={data}\n                formula={formula}\n                popOverContainer={popOverContainer}\n                renderEtrValue={renderEtrValue}\n              />\n              <Button\n                className={cx('CBDelete')}\n                onClick={this.handleItemRemove}\n              >\n                <Icon icon=\"remove\" className=\"icon\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default themeable(CBGroupOrItem);\n"
    ]
}