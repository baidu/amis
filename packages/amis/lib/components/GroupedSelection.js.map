{
    "version": 3,
    "file": "GroupedSelection.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/GroupedSelection.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {BaseSelection} from './Selection';\nimport {themeable} from '../theme';\nimport React from 'react';\nimport {uncontrollable} from 'uncontrollable';\nimport Checkbox from './Checkbox';\nimport {Option} from './Select';\nimport {localeable} from '../locale';\n\nexport class GroupedSelection extends BaseSelection {\n  valueArray: Array<Option>;\n\n  renderOption(option: Option, index: number) {\n    const {\n      labelClassName,\n      disabled,\n      classnames: cx,\n      itemClassName,\n      itemRender,\n      multiple\n    } = this.props;\n    const valueArray = this.valueArray;\n\n    if (Array.isArray(option.children)) {\n      return (\n        <div\n          key={index}\n          className={cx('GroupedSelection-group', option.className)}\n        >\n          <div className={cx('GroupedSelection-itemLabel')}>\n            {itemRender(option, {\n              index: index,\n              multiple: multiple,\n              checked: false,\n              onChange: () => undefined,\n              disabled: disabled || option.disabled\n            })}\n          </div>\n\n          <div className={cx('GroupedSelection-items', option.className)}>\n            {option.children.map((child, index) =>\n              this.renderOption(child, index)\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        key={index}\n        className={cx(\n          'GroupedSelection-item',\n          itemClassName,\n          option.className,\n          disabled || option.disabled ? 'is-disabled' : '',\n          !!~valueArray.indexOf(option) ? 'is-active' : ''\n        )}\n        onClick={() => this.toggleOption(option)}\n      >\n        {multiple ? (\n          <Checkbox\n            size=\"sm\"\n            checked={!!~valueArray.indexOf(option)}\n            disabled={disabled || option.disabled}\n            labelClassName={labelClassName}\n            description={option.description}\n          />\n        ) : null}\n        <div className={cx('GroupedSelection-itemLabel')}>\n          {itemRender(option, {\n            index: index,\n            multiple: multiple,\n            checked: !!~valueArray.indexOf(option),\n            onChange: () => this.toggleOption(option),\n            disabled: disabled || option.disabled\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      value,\n      options,\n      className,\n      placeholder,\n      classnames: cx,\n      option2value,\n      onClick\n    } = this.props;\n    const __ = this.props.translate;\n\n    this.valueArray = BaseSelection.value2array(value, options, option2value);\n    let body: Array<React.ReactNode> = [];\n\n    if (Array.isArray(options) && options.length) {\n      body = options.map((option, key) => this.renderOption(option, key));\n    }\n\n    return (\n      <div className={cx('GroupedSelection', className)} onClick={onClick}>\n        {body && body.length ? (\n          body\n        ) : (\n          <div className={cx('GroupedSelection-placeholder')}>\n            {__(placeholder)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(GroupedSelection, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}