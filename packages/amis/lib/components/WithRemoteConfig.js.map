{
    "version": 3,
    "file": "WithRemoteConfig.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/WithRemoteConfig.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 一个可以拉取远程配置的 HOC\n *\n */\nimport React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport debounce from 'lodash/debounce';\nimport {Api, ApiObject, Payload} from '../types';\nimport {SchemaApi, SchemaTokenizeableString} from '../Schema';\nimport {withStore} from './WithStore';\n\nimport {EnvContext, RendererEnv} from '../env';\n\nimport {flow, Instance, isAlive, types} from 'mobx-state-tree';\nimport {\n  buildApi,\n  isEffectiveApi,\n  normalizeApi,\n  normalizeApiResponseData\n} from '../utils/api';\nimport {\n  isPureVariable,\n  resolveVariableAndFilter,\n  tokenize\n} from '../utils/tpl-builtin';\nimport {reaction} from 'mobx';\nimport {\n  createObject,\n  findIndex,\n  findTreeIndex,\n  isObject\n} from '../utils/helper';\n\nexport const Store = types\n  .model('RemoteConfigStore')\n  .props({\n    fetching: false,\n    errorMsg: '',\n    config: types.frozen(),\n    data: types.frozen({})\n  })\n  .actions(self => {\n    let component: any = undefined;\n\n    const load: (\n      env: RendererEnv,\n      api: Api,\n      ctx: any,\n      config: WithRemoteConfigSettings\n    ) => Promise<any> = flow(function* (env, api, ctx, config = {}): any {\n      try {\n        self.fetching = true;\n        const ret: Payload = yield env.fetcher(api, ctx);\n        if (!isAlive(self)) {\n          return;\n        }\n\n        if (ret.ok) {\n          const data = normalizeApiResponseData(ret.data);\n          let options = config.adaptor\n            ? config.adaptor(data, component.props)\n            : data;\n          (self as any).setConfig(options, config, 'remote');\n          config.afterLoad?.(data, self.config, component.props);\n          return ret;\n        } else {\n          throw new Error(ret.msg || 'fetch error');\n        }\n      } catch (e) {\n        isAlive(self) && (self.errorMsg = e.message);\n      } finally {\n        isAlive(self) && (self.fetching = false);\n      }\n    });\n\n    return {\n      setComponent(c: any) {\n        component = c;\n      },\n\n      load,\n      setData(data: any) {\n        self.data = data || {};\n      },\n      setConfig(\n        options: any,\n        config: WithRemoteConfigSettings,\n        motivation?: any\n      ) {\n        if (config.normalizeConfig) {\n          options =\n            config.normalizeConfig(\n              options,\n              self.config,\n              component.props,\n              motivation\n            ) || options;\n        }\n\n        self.config = options;\n      }\n    };\n  });\n\nexport type IStore = Instance<typeof Store>;\n\nexport interface OutterProps {\n  env?: RendererEnv;\n  data: any;\n  source?: SchemaApi | SchemaTokenizeableString;\n  autoComplete?: SchemaApi | SchemaTokenizeableString;\n  deferApi?: SchemaApi;\n  remoteConfigRef?: (\n    instance:\n      | {\n          loadConfig: (ctx?: any) => Promise<any> | void;\n          setConfig: (value: any) => void;\n        }\n      | undefined\n  ) => void;\n}\n\nexport interface RemoteOptionsProps<T = any> {\n  config: T;\n  loading?: boolean;\n  deferLoad: (item: any) => Promise<any>;\n  updateConfig: (value: T, ctx?: any) => void;\n}\n\nexport interface WithRemoteConfigSettings {\n  sourceField?: string;\n\n  /**\n   * 从接口返回数据适配到配置\n   */\n  adaptor?: (json: any, props: any) => any;\n\n  /**\n   * 配置格式化\n   */\n  normalizeConfig?: (\n    config: any,\n    origin: any,\n    props: any,\n    motivation?: any\n  ) => any;\n\n  /**\n   * 请求返回后的回调\n   */\n  afterLoad?: (ret: any, config: any, props: any) => void;\n\n  /**\n   * 懒加载选项相关，开始懒加载的回调\n   */\n  beforeDeferLoad?: (\n    item: any,\n    indexes: Array<number>,\n    config: any,\n    props: any\n  ) => any;\n\n  /**\n   * 懒加载选项相关，结束懒加载的回调\n   */\n  afterDeferLoad?: (\n    item: any,\n    indexes: Array<number>,\n    reponse: Payload,\n    config: any,\n    props: any\n  ) => any;\n\n  injectedPropsFilter?: (\n    injectedProps: {\n      config: any;\n      loading?: boolean;\n      deferLoad: (term: string) => any;\n      updateConfig: (config: any) => void;\n    },\n    props: any\n  ) => any;\n}\n\nexport function withRemoteConfig<P = any>(\n  config: WithRemoteConfigSettings = {}\n) {\n  return function <\n    T extends React.ComponentType<\n      React.ComponentProps<T> & RemoteOptionsProps<P>\n    >\n  >(ComposedComponent: T) {\n    type FinalOutterProps = JSX.LibraryManagedAttributes<\n      T,\n      Omit<React.ComponentProps<T>, keyof RemoteOptionsProps<P>>\n    > &\n      OutterProps;\n\n    const result = hoistNonReactStatic(\n      withStore(() => Store.create())(\n        class extends React.Component<\n          FinalOutterProps & {\n            store: IStore;\n          }\n        > {\n          static displayName = `WithRemoteConfig(${\n            ComposedComponent.displayName || ComposedComponent.name\n          })`;\n          static ComposedComponent =\n            ComposedComponent as React.ComponentType<T>;\n          static contextType = EnvContext;\n          toDispose: Array<() => void> = [];\n\n          loadOptions = debounce(this.loadAutoComplete.bind(this), 250, {\n            trailing: true,\n            leading: false\n          });\n\n          constructor(\n            props: FinalOutterProps & {\n              store: IStore;\n            }\n          ) {\n            super(props);\n\n            this.setConfig = this.setConfig.bind(this);\n            props.store.setComponent(this);\n            this.deferLoadConfig = this.deferLoadConfig.bind(this);\n            props.remoteConfigRef?.(this);\n            props.store.setData(props.data);\n            this.syncConfig();\n          }\n\n          componentDidMount() {\n            const env: RendererEnv = this.props.env || this.context;\n            const {store, data} = this.props;\n            const source = (this.props as any)[config.sourceField || 'source'];\n\n            if (isPureVariable(source)) {\n              this.toDispose.push(\n                reaction(\n                  () =>\n                    resolveVariableAndFilter(\n                      source as string,\n                      store.data,\n                      '| raw'\n                    ),\n                  () => this.syncConfig()\n                )\n              );\n            } else if (env && isEffectiveApi(source, data)) {\n              this.loadConfig();\n              (source as ApiObject).autoRefresh !== false &&\n                this.toDispose.push(\n                  reaction(\n                    () => {\n                      const api = normalizeApi(source as string);\n                      return api.trackExpression\n                        ? tokenize(api.trackExpression, store.data)\n                        : buildApi(api, store.data, {\n                            ignoreData: true\n                          }).url;\n                    },\n                    () => this.loadConfig()\n                  )\n                );\n            }\n          }\n\n          componentDidUpdate(prevProps: any) {\n            const props = this.props;\n\n            if (props.data !== prevProps.data) {\n              props.store.setData(props.data);\n            }\n          }\n\n          componentWillUnmount() {\n            this.toDispose.forEach(fn => fn());\n            this.toDispose = [];\n\n            this.props.remoteConfigRef?.(undefined);\n            this.loadOptions.cancel();\n          }\n\n          async loadConfig(ctx = this.props.data) {\n            const env: RendererEnv = this.props.env || this.context;\n            const {store} = this.props;\n            const source = (this.props as any)[config.sourceField || 'source'];\n\n            if (env && isEffectiveApi(source, ctx)) {\n              await store.load(env, source, ctx, config);\n            }\n          }\n\n          loadAutoComplete(input: string) {\n            const env: RendererEnv = this.props.env || this.context;\n            const {autoComplete, data, store} = this.props;\n\n            if (!env || !env.fetcher) {\n              throw new Error('fetcher is required');\n            }\n\n            const ctx = createObject(data, {\n              term: input,\n              value: input\n            });\n\n            if (!isEffectiveApi(autoComplete, ctx)) {\n              return Promise.resolve({\n                options: []\n              });\n            }\n\n            return store.load(env, autoComplete, ctx, config);\n          }\n\n          setConfig(value: any, ctx?: any) {\n            const {store} = this.props;\n            store.setConfig(value, config, ctx);\n          }\n\n          syncConfig() {\n            const {store, data} = this.props;\n            const source = (this.props as any)[config.sourceField || 'source'];\n\n            if (isPureVariable(source)) {\n              store.setConfig(\n                resolveVariableAndFilter(source as string, data, '| raw') || [],\n                config,\n                'syncConfig'\n              );\n            } else if (isObject(source) && !isEffectiveApi(source, data)) {\n              store.setConfig(source, config, 'syncConfig');\n            }\n          }\n\n          async deferLoadConfig(item: any) {\n            const {store, data, deferApi} = this.props;\n            const source = (this.props as any)[config.sourceField || 'source'];\n            const env: RendererEnv = this.props.env || this.context;\n            const indexes = findTreeIndex(store.config, a => a === item)!;\n\n            const ret = config.beforeDeferLoad?.(\n              item,\n              indexes,\n              store.config,\n              this.props\n            );\n\n            ret && store.setConfig(ret, config, 'before-defer-load');\n            let response: Payload;\n            try {\n              if (!isEffectiveApi(item.deferApi || deferApi || source)) {\n                throw new Error('deferApi is required');\n              }\n\n              response = await env.fetcher(\n                item.deferApi || deferApi || source,\n                createObject(data, item)\n              );\n            } catch (e) {\n              response = {\n                ok: false,\n                msg: e.message,\n                status: 500,\n                data: undefined\n              };\n            }\n            const ret2 = config.afterDeferLoad?.(\n              item,\n              indexes, // 只能假定还是那个 index 了\n              response,\n              store.config,\n              this.props\n            );\n            ret2 && store.setConfig(ret2, config, 'after-defer-load');\n          }\n\n          render() {\n            const store = this.props.store;\n            const env: RendererEnv = this.props.env || this.context;\n            const injectedProps: RemoteOptionsProps<P> = {\n              config: store.config,\n              loading: store.fetching,\n              deferLoad: this.deferLoadConfig,\n              updateConfig: this.setConfig\n            };\n            const {remoteConfigRef, autoComplete, ...rest} = this.props;\n\n            return (\n              <ComposedComponent\n                {...(rest as JSX.LibraryManagedAttributes<\n                  T,\n                  React.ComponentProps<T>\n                >)}\n                {...(env && isEffectiveApi(autoComplete) && this.loadOptions\n                  ? {loadOptions: this.loadOptions}\n                  : {})}\n                {...(config.injectedPropsFilter\n                  ? config.injectedPropsFilter(injectedProps, this.props)\n                  : injectedProps)}\n              />\n            );\n          }\n        }\n      ),\n      ComposedComponent\n    );\n\n    return result as typeof result & {\n      ComposedComponent: T;\n    };\n  };\n}\n"
    ]
}