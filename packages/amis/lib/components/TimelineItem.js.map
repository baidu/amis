{
    "version": 3,
    "file": "TimelineItem.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/TimelineItem.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React, {ReactNode, useState} from 'react';\nimport {localeable, LocaleProps} from '../locale';\nimport {SchemaExpression} from '../Schema';\nimport {themeable, ThemeProps} from '../theme';\nimport {Icon} from './icons';\n\nexport interface TimelineItemProps {\n  /**\n   * 时间点\n   */\n  time: string;\n\n  /**\n   * 事件名称\n   */\n  title?: string | ReactNode;\n\n  /**\n   * 详细内容\n   */\n  detail?: string;\n\n  /**\n   * detail折叠时文案\n   */\n  detailCollapsedText?: string;\n\n  /**\n   * detail展开时文案\n   */\n  detailExpandedText?: string;\n\n  /**\n   * 时间点圆圈颜色,可传入英文/颜色值/level样式（info、success、warning、danger）\n   */\n  color?: SchemaExpression;\n\n  /**\n   * 图标\n   */\n  icon?: string | ReactNode;\n}\n\nexport interface TimelineItem\n  extends ThemeProps,\n    LocaleProps,\n    TimelineItemProps {\n  key: string;\n}\n\nexport function TimelineItem(props: TimelineItem) {\n  const {\n    time,\n    title,\n    detail,\n    detailCollapsedText,\n    detailExpandedText,\n    color,\n    icon,\n    classnames: cx,\n    translate: __,\n    key\n  } = props;\n\n  const [detailVisible, setDetailVisible] = useState<boolean>(false);\n\n  const renderDetail = (\n    detail: string,\n    detailCollapsedText: string = __('Timeline.collapseText'),\n    detailExpandedText: string = __('Timeline.expandText')\n  ): ReactNode => {\n    return (\n      <>\n        <div\n          className={cx('TimelineItem-detail-button')}\n          onClick={() => setDetailVisible(!detailVisible)}\n        >\n          {detailVisible ? detailExpandedText : detailCollapsedText}\n          <div\n            className={cx(\n              'TimelineItem-detail-arrow',\n              `${detailVisible && 'TimelineItem-detail-arrow-top'}`\n            )}\n          >\n            <Icon icon=\"tree-down\" />\n          </div>\n        </div>\n        <div\n          className={cx(\n            `${\n              detailVisible\n                ? 'TimelineItem-detail-visible'\n                : 'TimelineItem-detail-invisible'\n            }`\n          )}\n        >\n          {detail}\n        </div>\n      </>\n    );\n  };\n\n  // 判断是否为颜色值\n  const isColorVal = color && /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/.test(color);\n\n  // 取level级颜色\n  const levelColor = !isColorVal && color;\n\n  return (\n    <div className={cx('TimelineItem')} key={key}>\n      <div className={cx('TimelineItem-axle')}>\n        <div className={cx('TimelineItem-line')}></div>\n        {icon ? (\n          <div className={cx('TimelineItem-icon')}>\n            <Icon icon={icon} className=\"icon\" />\n          </div>\n        ) : (\n          <div\n            className={cx(\n              'TimelineItem-round',\n              levelColor && `TimelineItem-round--${levelColor}`\n            )}\n            style={isColorVal ? {backgroundColor: color} : undefined}\n          ></div>\n        )}\n      </div>\n      <div className={cx('TimelineItem-content')}>\n        <div className={cx('TimelineItem-time')}>{time}</div>\n        <div className={cx('TimelineItem-title')}>{title}</div>\n        {detail && (\n          <div className={cx('TimelineItem-detail')}>\n            {renderDetail(detail, detailCollapsedText, detailExpandedText)}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default themeable(localeable(TimelineItem));\n"
    ]
}