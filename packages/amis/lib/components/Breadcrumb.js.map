{
    "version": 3,
    "file": "Breadcrumb.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Breadcrumb.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;GAEG;;;;AAEH,6DAA0B;AAC1B,iFAAyD;AACzD,kCAA6D;AAC7D,gDAA6C;AAC7C,0CAA8C;AAC9C,6CAAyC;AACzC,sCAA2C;AAmC3C;;GAEG;AACH;IAAgC,2CAAgC;IAAhE;;IA6DA,CAAC;IA/CC,2BAAM,GAAN;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QACjC,IAAM,KAMF,IAAI,CAAC,KAAK,EALZ,SAAS,eAAA,EACT,kBAAkB,wBAAA,EAClB,KAAK,WAAA,EACL,SAAS,eAAA,EACN,SAAS,2BALR,yDAML,CAAa,CAAC;QAEf,IAAM,YAAY,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC;QACnC,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,GAAQ,CAAC;SAC5D;QAED,IAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAkB,UAAC,IAAI,EAAE,KAAK;YACpD,IAAI,SAAS,GAAc,QAAQ,CAAC;YACpC,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,SAAS,GAAG,OAAO,CAAC;aACrB;YACD,IAAI,KAAK,KAAK,YAAY,GAAG,CAAC,EAAE;gBAC9B,SAAS,GAAG,KAAK,CAAC;aACnB;YACD,OAAO,CACL,8BAAC,cAAc,4BACT,SAAS,IACb,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,EACpB,GAAG,EAAE,KAAK,IACM,CACnB,CAAA;QACH,CAAC,CAAC;aACD,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,EAAE,KAAK,IAAK,OAAA;YAC7B,IAAI;YACJ,wCACE,SAAS,EAAE,EAAE,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,EACzD,GAAG,EAAE,oBAAa,KAAK,CAAE,IAExB,SAAS,CACL;YACP,IAAI;SACL,EAT8B,CAS9B,CAAC,CAAC;QAEH,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,IAAG,MAAM,CAAO,CAC5D,CAAC;IACJ,CAAC;IAzDM,uBAAY,GAKf;QACF,SAAS,EAAE,GAAG;QACd,cAAc,EAAE,EAAE;QAClB,eAAe,EAAE,KAAK;KACvB,CAAC;IAiDJ,iBAAC;CAAA,AA7DD,CAAgC,eAAK,CAAC,SAAS,GA6D9C;AA7DY,gCAAU;AA+DvB;;GAEG;AACH;IAAoC,+CAAyD;IAA7F;QAAA,qEAiLC;QA9KC,WAAK,GAAwB;YAC3B,cAAc,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;YAClC,gBAAgB,EAAE,KAAK;YACvB,QAAQ,EAAE,KAAK;SAChB,CAAC;QAEF,YAAM,GAAG,UAAC,GAAQ;YAChB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAA;QAED,YAAM,GAAG,UAAC,CAAwB;YAChC,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,KAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ;aAC/B,CAAC,CAAC;QACL,CAAC,CAAA;QAED,WAAK,GAAG;YACN,KAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;QACL,CAAC,CAAA;;IAwJH,CAAC;IAtJC;;;;;;;OAOG;IACH,iDAAwB,GAAxB,UACE,QAAiB,EACjB,QAAgC,EAChC,IAA6B,EAC7B,KAAc;QAER,IAAA,KAIF,IAAI,CAAC,KAAK,EAHZ,aAAa,mBAAA,EACb,qBAAqB,2BAAA,EACT,EAAE,gBACF,CAAC;QACf,IAAM,iBAAiB,GAAG,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,qBAAqB,CAAC;QACzF,IAAI,QAAQ,EAAE;YACZ,OAAO,CACL,qCAAG,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,kBAAkB,GAAG,QAAQ,EAAE,iBAAiB,CAAC;gBAChF,IAAI,CAAC,IAAI;oBACR,CAAC,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,iBAAiB,CAAC;oBACxD,CAAC,CAAC,IAAI;gBACR,wCAAM,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,IAAG,KAAK,CAAQ,CAC7C,CACL,CAAC;SACH;QACD,OAAO,CACL,wCAAM,SAAS,EAAE,EAAE,CAAC,kBAAkB,GAAG,QAAQ,EAAE,iBAAiB,CAAC;YAClE,IAAI,CAAC,IAAI;gBACR,CAAC,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,iBAAiB,CAAC;gBACxD,CAAC,CAAC,IAAI;YACR,wCAAM,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,IAAG,KAAK,CAAQ,CAC1C,CACR,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,6CAAoB,GAApB,UACE,IAA6B,EAC7B,eAA4C,EAC5C,SAAoB,EACpB,QAAgC;QAFhC,gCAAA,EAAA,uBAA4C;QAItC,IAAA,KAGF,IAAI,CAAC,KAAK,EAFZ,cAAc,oBAAA,EACd,gBAAgB,sBACJ,CAAC;QACT,IAAA,KAGF,IAAI,CAAC,KAAK,EAFZ,cAAc,oBAAA,EACd,gBAAgB,sBACJ,CAAC;QACf,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAA,sBAAa,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9D,eAAe;QACf,IAAM,SAAS,GAAG,cAAc,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,gDAAgD;QAChD,IAAI,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,SAAS,KAAK,QAAQ,EAAE;YAC1D,OAAO,CACL,8BAAC,wBAAc,IACb,OAAO,EAAE,SAAS,EAClB,SAAS,EAAE,eAAe,EAC1B,SAAS,EAAE,gBAAgB,EAC3B,OAAO,EAAE,cAAc,EACvB,SAAS,EAAE,gBAAgB,IAE1B,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,CAChF,CAClB,CAAC;SACH;QACD,IAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,KAAK,KAAK,CAAC;QACnD,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IAC7E,CAAC;IAED;;;;OAIG;IACH,2CAAkB,GAAlB,UAAmB,QAAmC;QAAtD,iBA8BC;QA7BO,IAAA,KAGF,IAAI,CAAC,KAAK,EAFZ,iBAAiB,uBAAA,EACL,EAAE,gBACF,CAAC;QACf,OAAO,CACL,8BAAC,qBAAS,IACR,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9B,WAAW,EAAE,IAAI,CAAC,KAAK,IAEtB,UAAC,GAAQ;YACR,OAAO,CACL,sCACE,SAAS,EAAE,EAAE,CAAC,qBAAqB,EAAE,iBAAiB,CAAC,EACvD,OAAO,EAAE,KAAI,CAAC,KAAK,EACnB,GAAG,EAAE,GAAG,IAEP,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;mBACnB,QAAQ,CAAC,GAAG,CAAC,UAAC,QAAiC,EAAE,KAAa;oBACjE,OAAO,CACL,sCAAI,GAAG,EAAE,eAAe,GAAG,KAAK,IAC7B,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAChE,CACN,CAAC;gBACJ,CAAC,CAAC,CACC,CACN,CAAC;QACJ,CAAC,CACS,CACb,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QACQ,IAAA,KAKF,IAAI,CAAC,KAAK,EAJZ,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,eAAe,qBAAA,EACH,EAAE,gBACF,CAAC;QACR,IAAA,QAAQ,GAAsB,IAAI,SAA1B,EAAK,aAAa,uBAAI,IAAI,EAAnC,YAA4B,CAAD,CAAS;QAC1C,OAAO,CACL,wCACE,SAAS,EAAE,EAAE,CAAC,iBAAiB,EAC7B;gBACE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;aACjC,EACD;gBACE,sBAAsB,EAAE,SAAS,KAAK,KAAK;aAC5C,CACF,EACD,GAAG,EAAE,IAAI,CAAC,MAAM;YAEf,IAAI,CAAC,oBAAoB,2BAAK,aAAa,GAAG,eAAe,EAAE,SAAS,EAAE,SAAS,CAAC;YACpF,QAAQ,CAAC,CAAC,CAAC,CACV,wCAAM,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC,uBAAuB,CAAC;gBAChE,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACjC,CACR,CAAA,CAAC,CAAC,IAAI;YACN,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CACtE,CACR,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AAjLD,CAAoC,eAAK,CAAC,SAAS,GAiLlD;AAjLY,wCAAc;AAmL3B,kBAAe,IAAA,iBAAS,EAAC,UAAU,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file Breadcrumb 面包屑\n */\n\nimport React from 'react';\nimport TooltipWrapper, {Trigger} from './TooltipWrapper';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {RootClose} from '../utils/RootClose';\nimport {removeHTMLTag} from '../utils/helper';\nimport {Icon} from '../components/icons';\nimport {generateIcon} from '../utils/icon';\nimport {\n  ItemPlace,\n  BreadcrumbBaseItemSchema,\n  BreadcrumbItemSchema,\n  TooltipPositionType,\n  BreadcrumbSchema\n} from '../renderers/Breadcrumb';\n\ninterface BreadcrumbItemState {\n  isOpened: boolean;\n  tooltipTrigger: Trigger | Array<Trigger>;\n  tooltipRootClose: boolean;\n}\n\ninterface BreadcrumbBaseItemProps\n  extends BreadcrumbBaseItemSchema {}\n\ninterface BreadcrumbItemProps {\n  item: BreadcrumbItemSchema;\n  itemPlace: ItemPlace;\n  labelMaxLength?: number; \n  tooltipContainer?: any;\n  tooltipPosition?: TooltipPositionType;\n  classnames: ClassNamesFn;\n  [propName: string]: any;\n}\n\ninterface BreadcrumbProps extends ThemeProps,\n  Omit<BreadcrumbSchema, 'type' | 'className'> {\n  tooltipContainer?: any;\n  tooltipPosition?: TooltipPositionType;\n  [propName: string]: any;\n}\n\n/**\n * Breadcrumb 面包屑类\n */\nexport class Breadcrumb extends React.Component<BreadcrumbProps> {\n  Item: typeof BreadcrumbItem;\n\n  static defaultProps: Pick<\n    BreadcrumbProps, \n    | 'separator'\n    | 'labelMaxLength'\n    | 'tooltipPosition'\n  > = {\n    separator: '>',\n    labelMaxLength: 16,\n    tooltipPosition: 'top'\n  };\n\n  render() {\n    const cx = this.props.classnames;\n    const {\n      className,\n      separatorClassName,\n      items,\n      separator,\n      ...restProps\n    } = this.props;\n\n    const crumbsLength = items?.length;\n    if (!crumbsLength) {\n      return <div className={cx('Breadcrumb', className)}></div>;\n    }\n\n    const crumbs = items.map<React.ReactNode>((item, index) => {\n      let itemPlace: ItemPlace = 'middle';\n      if (index === 0) {\n        itemPlace = 'start';\n      }\n      if (index === crumbsLength - 1) {\n        itemPlace = 'end';\n      }\n      return (\n        <BreadcrumbItem\n          {...restProps}\n          item={item}\n          itemPlace={itemPlace}\n          key={index}\n        ></BreadcrumbItem>\n      )\n    })\n    .reduce((prev, curr, index) => [\n      prev,\n      <span\n        className={cx('Breadcrumb-separator', separatorClassName)}\n        key={`separator-${index}`}\n      >\n        {separator}\n      </span>,\n      curr\n    ]);\n\n    return (\n      <div className={cx('Breadcrumb', className)}>{crumbs}</div>\n    );\n  }\n}\n\n/**\n * BreadcrumbItem 面包项类\n */\nexport class BreadcrumbItem extends React.Component<BreadcrumbItemProps, BreadcrumbItemState> {\n  target: any;\n\n  state: BreadcrumbItemState = {\n    tooltipTrigger: ['hover', 'focus'],\n    tooltipRootClose: false,\n    isOpened: false\n  };\n\n  domRef = (ref: any) => {\n    this.target = ref;\n  }\n\n  toogle = (e: React.MouseEvent<any>) => {\n    e.preventDefault();\n\n    this.setState({\n      isOpened: !this.state.isOpened\n    });\n  }\n\n  close = () => {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  /**\n   * 渲染基础面包项\n   * @param showHref 是否显示超链接\n   * @param itemType 基础面包项类型\n   * @param item 面包项\n   * @param label 渲染文本\n   * @returns \n   */\n  renderBreadcrumbBaseItem(\n    showHref: boolean,\n    itemType: 'default' | 'dropdown',\n    item: BreadcrumbBaseItemProps,\n    label?: string,\n  ) {\n    const {\n      itemClassName,\n      dropdownItemClassName,\n      classnames: cx\n    } = this.props;\n    const baseItemClassName = itemType === 'default' ? itemClassName : dropdownItemClassName;\n    if (showHref) {\n      return (\n        <a href={item.href} className={cx('Breadcrumb-item-' + itemType, baseItemClassName)}>\n          {item.icon\n            ? generateIcon(cx, item.icon, 'Icon', 'Breadcrumb-icon')\n            : null}\n          <span className={cx('TplField')}>{label}</span>\n        </a>\n      );\n    }\n    return (\n      <span className={cx('Breadcrumb-item-' + itemType, baseItemClassName)}>\n        {item.icon\n          ? generateIcon(cx, item.icon, 'Icon', 'Breadcrumb-icon')\n          : null}\n        <span className={cx('TplField')}>{label}</span>\n      </span>\n    );\n  }\n\n  /**\n   * 渲染基础面包项完整节点\n   * @param item 面包项\n   * @param tooltipPosition 浮窗提示位置\n   * @param itemPlace 面包香所在相对位置\n   * @param itemType 基础面包项类型\n   * @returns \n   */\n  renderBreadcrumbNode(\n    item: BreadcrumbBaseItemProps,\n    tooltipPosition: TooltipPositionType = 'top',\n    itemPlace: ItemPlace,\n    itemType: 'default' | 'dropdown'\n  ) {\n    const {\n      labelMaxLength,\n      tooltipContainer\n    } = this.props;\n    const {\n      tooltipTrigger,\n      tooltipRootClose\n    } = this.state;\n    const pureLabel = item.label ? removeHTMLTag(item.label) : '';\n    // 限制最大展示长度的最小值\n    const maxLength = labelMaxLength && +labelMaxLength > 1 ? +labelMaxLength : 1;\n    // 面包项相对位置为 middle ，且超过最大展示长度的面包项，进行缩略展示，并使用浮窗提示\n    if (pureLabel.length > maxLength && itemPlace === 'middle') {\n      return (\n        <TooltipWrapper\n          tooltip={pureLabel}\n          placement={tooltipPosition}\n          container={tooltipContainer}\n          trigger={tooltipTrigger}\n          rootClose={tooltipRootClose}\n        >\n          {this.renderBreadcrumbBaseItem(true, itemType, item, pureLabel.substring(0, maxLength) + '...')}\n        </TooltipWrapper>\n      );\n    }\n    const showHref = !item.href || itemPlace === 'end';\n    return this.renderBreadcrumbBaseItem(!showHref, itemType, item, pureLabel);\n  }\n\n  /**\n   * 渲染下拉菜单节点\n   * @param dropdown 面包项下拉菜单\n   * @returns \n   */\n  renderDropdownNode(dropdown: BreadcrumbBaseItemProps[]) {\n    const {\n      dropdownClassName,\n      classnames: cx\n    } = this.props;\n    return (\n      <RootClose\n        disabled={!this.state.isOpened}\n        onRootClose={this.close}\n      >\n        {(ref: any) => {\n          return (\n            <ul\n              className={cx('Breadcrumb-dropdown', dropdownClassName)}\n              onClick={this.close}\n              ref={ref}\n            >\n              {Array.isArray(dropdown) \n                && dropdown.map((menuItem: BreadcrumbBaseItemProps, index: number) => {\n                return (\n                  <li key={'dropdown-item' + index}>\n                    {this.renderBreadcrumbNode(menuItem, 'right', 'middle', 'dropdown')}\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }}\n      </RootClose>\n    );\n  }\n\n  render() {\n    const {\n      item,\n      itemPlace,\n      tooltipPosition,\n      classnames: cx\n    } = this.props;\n    const {dropdown, ...restItemProps} = item;\n    return (\n      <span\n        className={cx('Breadcrumb-item',\n          {\n            'is-opened': this.state.isOpened\n          },\n          {\n            'Breadcrumb-item-last': itemPlace === 'end'\n          }\n        )}\n        ref={this.domRef}\n      >\n        {this.renderBreadcrumbNode({...restItemProps}, tooltipPosition, itemPlace, 'default')}\n        {dropdown ? (\n          <span onClick={this.toogle} className={cx('Breadcrumb-item-caret')}>\n            <Icon icon=\"caret\" className=\"icon\" />\n          </span>\n        ): null}\n        {dropdown && this.state.isOpened ? this.renderDropdownNode(dropdown) : null}\n      </span>\n    );\n  }\n}\n\nexport default themeable(Breadcrumb);"
    ]
}