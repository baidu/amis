{
    "version": 3,
    "file": "HeadCellFilter.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/table/HeadCellFilter.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file table/HeadCellFilter\n * @author fex\n */\n\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport {themeable, ThemeProps} from '../../theme';\nimport {LocaleProps, localeable} from '../../locale';\nimport HeadCellDropDown, {\n  FilterDropdownProps,\n  FilterPayload\n} from './HeadCellDropDown';\nimport CheckBox from '../Checkbox';\nimport Button from '../Button';\nimport {Icon} from '../icons';\n\nexport interface Props extends ThemeProps, LocaleProps {\n  column: any;\n  onFilter?: Function;\n  filteredValue?: Array<string>;\n  filterMultiple?: boolean;\n  popOverContainer?: () => Element | Text | null;\n}\n\nexport interface OptionProps {\n  text: string;\n  value: string;\n  selected?: boolean;\n  children?: Array<OptionProps>;\n}\n\nexport interface State {\n  options: Array<OptionProps>;\n  filteredValue: Array<string>;\n}\n\nexport class HeadCellFilter extends React.Component<Props, State> {\n  static defaultProps = {\n    filteredValue: [],\n    filterMultiple: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      options: [],\n      filteredValue: props.filteredValue || []\n    };\n  }\n\n  alterOptions(options: Array<any>) {\n    options = options.map(option => ({\n      ...option,\n      selected: this.state.filteredValue.indexOf(option.value) > -1\n    }));\n\n    return options;\n  }\n\n  componentDidMount() {\n    const {column} = this.props;\n    if (column.filters && column.filters.length > 0) {\n      this.setState({options: this.alterOptions(column.filters)});\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const {column} = this.props;\n    if (\n      column.filters &&\n      column.filters.length > 0 &&\n      !isEqual(prevState.filteredValue, this.state.filteredValue)\n    ) {\n      this.setState({options: this.alterOptions(column.filters)});\n    }\n  }\n\n  render() {\n    const {options} = this.state;\n    const {\n      column,\n      popOverContainer,\n      classnames: cx,\n      classPrefix: ns\n    } = this.props;\n\n    const filterProps = {\n      filterDropdown: (payload: FilterDropdownProps) => {\n        const {setSelectedKeys, selectedKeys, confirm, clearFilters} = payload;\n        return options && options.length > 0 ? (\n          <ul className={cx('DropDown-menu')}>\n            {!column.filterMultiple\n              ? options.map((option: any, index) => (\n                  <li\n                    key={index}\n                    className={cx({\n                      'is-active': option.selected\n                    })}\n                    onClick={() =>\n                      this.handleClick(confirm, setSelectedKeys, [option.value])\n                    }\n                  >\n                    {option.text}\n                  </li>\n                ))\n              : options.map((option: any, index) => (\n                  <li key={index}>\n                    <CheckBox\n                      classPrefix={ns}\n                      onChange={e =>\n                        this.handleCheck(\n                          confirm,\n                          setSelectedKeys,\n                          e ? [option.value] : option.value\n                        )\n                      }\n                      checked={option.selected}\n                    >\n                      {option.text}\n                    </CheckBox>\n                  </li>\n                ))}\n            {column.filterMultiple ? (\n              <li\n                key=\"dropDown-multiple-menu\"\n                className={cx('DropDown-multiple-menu')}\n              >\n                <Button\n                  size={'xs'}\n                  level={'primary'}\n                  onClick={() => this.handleConfirmClick(confirm)}\n                >\n                  确定\n                </Button>\n                <Button\n                  size={'xs'}\n                  onClick={() =>\n                    this.handleCancelClick(confirm, setSelectedKeys)\n                  }\n                >\n                  取消\n                </Button>\n              </li>\n            ) : null}\n          </ul>\n        ) : null;\n      },\n      setSelectedKeys: (keys: Array<string>) =>\n        this.setState({filteredValue: keys})\n    };\n\n    return (\n      <HeadCellDropDown\n        className={`${ns}TableCell-filterBtn`}\n        layerClassName={`${ns}TableCell-filterPopOver`}\n        filterIcon={<Icon icon=\"column-filter\" className=\"icon\" />}\n        active={\n          column.filtered ||\n          (options && options.some((item: any) => item.selected))\n        }\n        popOverContainer={\n          popOverContainer ? popOverContainer : () => findDOMNode(this)\n        }\n        selectedKeys={this.state.filteredValue}\n        {...filterProps}\n      ></HeadCellDropDown>\n    );\n  }\n\n  async handleClick(\n    confirm: (payload?: FilterPayload) => void,\n    setSelectedKeys?: (keys?: string | Array<string | number>) => void,\n    selectedKeys?: Array<string>\n  ) {\n    const {onFilter, column} = this.props;\n    const payload = {[column.key]: selectedKeys};\n\n    if (onFilter) {\n      const prevented = await onFilter(payload);\n      if (prevented) {\n        return;\n      }\n    }\n\n    setSelectedKeys && setSelectedKeys(selectedKeys);\n\n    onFilter && onFilter(payload);\n    confirm();\n  }\n\n  handleCheck(\n    confirm: (payload?: FilterPayload) => void,\n    setSelectedKeys?: (\n      keys: string | Array<string | number>\n    ) => void | undefined,\n    selectedKeys?: Array<string>\n  ) {\n    const filteredValue = this.state.filteredValue;\n    // 选中\n    if (Array.isArray(selectedKeys)) {\n      setSelectedKeys && setSelectedKeys([...filteredValue, ...selectedKeys]);\n    } else {\n      // 取消选中\n      setSelectedKeys &&\n        setSelectedKeys(filteredValue.filter(v => v !== selectedKeys));\n    }\n  }\n\n  handleConfirmClick(confirm: (payload?: FilterPayload) => void) {\n    const {onFilter, column} = this.props;\n    onFilter && onFilter({[column.key]: this.state.filteredValue});\n    confirm();\n  }\n\n  handleCancelClick(\n    confirm: (payload?: FilterPayload) => void,\n    setSelectedKeys?: (\n      keys: string | Array<string | number>\n    ) => void | undefined\n  ) {\n    setSelectedKeys && setSelectedKeys([]);\n    confirm();\n  }\n}\n\nexport default themeable(localeable(HeadCellFilter));\n"
    ]
}