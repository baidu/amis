{
    "version": 3,
    "file": "HeadCellSort.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/table/HeadCellSort.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;GAGG;;;;AAEH,6DAA0B;AAE1B,qCAAkD;AAClD,uCAAqD;AACrD,kCAA8B;AAY9B;IAAkC,6CAA6B;IAC7D,sBAAY,KAAY;QAAxB,YACE,kBAAM,KAAK,CAAC,SAMb;QAJC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;SACZ,CAAC;;IACJ,CAAC;IAED,6BAAM,GAAN;QAAA,iBAgEC;QA/DO,IAAA,KAAmC,IAAI,CAAC,KAAK,EAA5C,MAAM,YAAA,EAAE,MAAM,YAAA,EAAc,EAAE,gBAAc,CAAC;QAEpD,OAAO,CACL,wCACE,SAAS,EAAE,EAAE,CAAC,mBAAmB,CAAC,EAClC,OAAO,EAAE;;;oBACH,WAAW,GAAG,EAAE,CAAC;oBACrB,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;wBACrC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;4BAClC,SAAS;4BACT,WAAW,GAAG,EAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC;yBAC9C;6BAAM;4BACL,SAAS;4BACT,WAAW,GAAG,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC;yBAClC;qBACF;yBAAM;wBACL,QAAQ;wBACR,WAAW,GAAG,EAAC,OAAO,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC;qBACtD;oBAED,IAAI,MAAM,EAAE;wBACJ,SAAS,GAAG,MAAM,CAAC;4BACvB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;4BAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;yBACxB,CAAC,CAAC;wBACH,IAAI,SAAS,EAAE;4BACb,sBAAO;yBACR;qBACF;oBAED,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;;iBAC5B;YAED,qCACE,SAAS,EAAE,EAAE,CACX,yBAAyB,EACzB,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS;oBACjE,CAAC,CAAC,WAAW;oBACb,CAAC,CAAC,EAAE,CACP;gBAED,8BAAC,YAAI,IAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,MAAM,GAAG,CACxC;YACJ,qCACE,SAAS,EAAE,EAAE,CACX,uBAAuB,EACvB,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,QAAQ;oBAChE,CAAC,CAAC,WAAW;oBACb,CAAC,CAAC,EAAE,CACP;gBAED,8BAAC,YAAI,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,MAAM,GAAG,CACvC;YACJ,qCACE,SAAS,EAAE,EAAE,CACX,4BAA4B,EAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CACrD;gBAED,8BAAC,YAAI,IAAC,IAAI,EAAC,cAAc,EAAC,SAAS,EAAC,MAAM,GAAG,CAC3C,CACC,CACR,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA3ED,CAAkC,eAAK,CAAC,SAAS,GA2EhD;AA3EY,oCAAY;AA6EzB,kBAAe,IAAA,iBAAS,EAAC,IAAA,mBAAU,EAAC,YAAY,CAAC,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file table/HeadCellSort\n * @author fex\n */\n\nimport React from 'react';\n\nimport {themeable, ThemeProps} from '../../theme';\nimport {LocaleProps, localeable} from '../../locale';\nimport {Icon} from '../icons';\n\nexport interface Props extends ThemeProps, LocaleProps {\n  column: any;\n  onSort?: Function;\n}\n\nexport interface State {\n  order: string; // 升序还是降序\n  orderBy: string; // 一次只能按一列排序 当前列的key\n}\n\nexport class HeadCellSort extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      order: '',\n      orderBy: ''\n    };\n  }\n\n  render() {\n    const {column, onSort, classnames: cx} = this.props;\n\n    return (\n      <span\n        className={cx('TableCell-sortBtn')}\n        onClick={async () => {\n          let sortPayload = {};\n          if (column.key === this.state.orderBy) {\n            if (this.state.order === 'descend') {\n              // 降序改为取消\n              sortPayload = {orderBy: '', order: 'ascend'};\n            } else {\n              // 升序之后降序\n              sortPayload = {order: 'descend'};\n            }\n          } else {\n            // 默认先升序\n            sortPayload = {orderBy: column.key, order: 'ascend'};\n          }\n\n          if (onSort) {\n            const prevented = onSort({\n              orderBy: this.state.orderBy,\n              order: this.state.order\n            });\n            if (prevented) {\n              return;\n            }\n          }\n\n          this.setState(sortPayload);\n        }}\n      >\n        <i\n          className={cx(\n            'TableCell-sortBtn--down',\n            this.state.orderBy === column.key && this.state.order === 'descend'\n              ? 'is-active'\n              : ''\n          )}\n        >\n          <Icon icon=\"sort-desc\" className=\"icon\" />\n        </i>\n        <i\n          className={cx(\n            'TableCell-sortBtn--up',\n            this.state.orderBy === column.key && this.state.order === 'ascend'\n              ? 'is-active'\n              : ''\n          )}\n        >\n          <Icon icon=\"sort-asc\" className=\"icon\" />\n        </i>\n        <i\n          className={cx(\n            'TableCell-sortBtn--default',\n            this.state.orderBy === column.key ? '' : 'is-active'\n          )}\n        >\n          <Icon icon=\"sort-default\" className=\"icon\" />\n        </i>\n      </span>\n    );\n  }\n}\n\nexport default themeable(localeable(HeadCellSort));\n"
    ]
}