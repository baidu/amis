{
    "version": 3,
    "file": "Picker.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Picker.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Picker\n * @description 移动端列滚动选择器\n */\nimport React, {\n  memo,\n  ReactNode,\n  useState,\n  useEffect\n} from 'react';\nimport {uncontrollable} from 'uncontrollable';\n\nimport {themeable, ThemeProps} from '../theme';\nimport {localeable, LocaleProps} from '../locale';\n\nimport Button from './Button';\nimport {PickerColumnItem, default as Column} from './PickerColumn';\n\nexport type PickerValue = string | number;\n\nexport interface PickerProps extends ThemeProps, LocaleProps {\n  title?: String | ReactNode;\n  labelField?: string;\n  valueField?: string;\n  className?: string;\n  showToolbar?: boolean;\n  defaultValue?: PickerValue[];\n  value?: PickerValue[];\n  swipeDuration?: number;\n  visibleItemCount?: number;\n  itemHeight?: number;\n  columns: PickerColumnItem[] | PickerColumnItem;\n  onChange?: (value?: PickerValue[], index?: number, confirm?: boolean) => void;\n  onClose?: (value?: PickerValue[]) => void;\n  onConfirm?: (value?: PickerValue[]) => void;\n}\n\nfunction fixToArray(data: any) {\n  if (!Array.isArray(data)) {\n    return [data];\n  }\n  return data;\n}\n\nconst Picker = memo<PickerProps>(props => {\n  const {\n    title,\n    labelField,\n    valueField,\n    visibleItemCount = 5,\n    value = [],\n    swipeDuration = 1000,\n    columns = [],\n    itemHeight = 48,\n    showToolbar = true,\n    className = '',\n    classnames: cx,\n    classPrefix: ns,\n    translate: __\n  } = props;\n\n  const _columns = fixToArray(columns);\n  const [innerValue, setInnerValue] = useState<PickerValue[]>(\n    fixToArray(props.value === undefined ? props.defaultValue || [] : value)\n  );\n\n  useEffect(() => {\n    if (value === innerValue) return\n    setInnerValue(fixToArray(value));\n  }, [value])\n\n  const close = () => {\n    if (props.onClose) {\n      props.onClose(innerValue);\n    }\n  };\n\n  const confirm = () => {\n    if (props.onConfirm) {\n      props.onConfirm(innerValue);\n    }\n  };\n\n  const onChange = (\n    itemValue: PickerValue,\n    columnIndex: number,\n    confirm?: boolean\n  ) => {\n    const nextInnerValue = [...innerValue];\n    nextInnerValue[columnIndex] = itemValue;\n    setInnerValue(nextInnerValue);\n    if (props.onChange) {\n      props.onChange(nextInnerValue, columnIndex, confirm);\n    }\n  };\n\n  const renderColumnItem = (item: PickerColumnItem, index: number) => {\n    return (\n      <Column\n        {...item}\n        classnames={cx}\n        classPrefix={ns}\n        labelField={labelField || item.labelField} \n        valueField={valueField || item.valueField}\n        itemHeight={itemHeight}\n        swipeDuration={swipeDuration}\n        visibleItemCount={visibleItemCount}\n        value={innerValue[index]}\n        onChange={(val: string | number, i, confirm) => {\n          onChange(val, index, confirm);\n        }}\n        key={`column${index}`}\n      />\n    );\n  };\n\n  const wrapHeight = itemHeight * +visibleItemCount;\n  const frameStyle = {height: `${itemHeight}px`};\n  const columnsStyle = {height: `${wrapHeight}px`};\n  const maskStyle = {\n    backgroundSize: `100% ${(wrapHeight - itemHeight) / 2}px`\n  };\n  const hasHeader = showToolbar || title;\n  return (\n    <div className={cx(className, 'PickerColumns', 'PickerColumns-popOver')}>\n      {hasHeader && (<div className={cx('PickerColumns-header')}>\n          {showToolbar && (<Button\n            className=\"PickerColumns-cancel\"\n            level=\"default\"\n            onClick={close}\n          >\n            {__('cancel')}\n          </Button>)}\n          {title && (\n            <div className={cx('PickerColumns-title')}>\n              {title}\n            </div>\n          )}\n          {showToolbar && (<Button\n            className=\"PickerColumns-confirm\"\n            level=\"primary\"\n            onClick={confirm}\n          >\n            {__('confirm')}\n          </Button>)}\n        </div>\n      )}\n      <div className={cx('PickerColumns-columns')} style={columnsStyle}>\n        {_columns.map((column: PickerColumnItem, index: number) =>\n          renderColumnItem(column, index)\n        )}\n        <div className={cx('PickerColumns-mask')} style={maskStyle}></div>\n        <div className={cx('PickerColumns-frame')} style={frameStyle}></div>\n      </div>\n    </div>\n  );\n});\n\nexport default themeable(\n  localeable(\n    uncontrollable(Picker, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}