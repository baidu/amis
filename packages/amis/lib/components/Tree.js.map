{
    "version": 3,
    "file": "Tree.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Tree.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Tree\n * @description 树形组件\n * @author fex\n */\n\nimport React from 'react';\nimport {\n  eachTree,\n  isVisible,\n  autobind,\n  findTreeIndex,\n  hasAbility,\n  createObject,\n  getTreeParent,\n  getTreeAncestors,\n  cloneObject\n} from '../utils/helper';\nimport {Option, Options, value2array} from './Select';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {highlight} from '../renderers/Form/Options';\nimport {Icon, getIcon} from './icons';\nimport Checkbox from './Checkbox';\nimport {LocaleProps, localeable} from '../locale';\nimport Spinner from './Spinner';\n\ninterface IDropIndicator {\n  left: number;\n  top: number;\n  width: number;\n  height?: number;\n}\n\nexport interface IDropInfo {\n  dragNode: Option | null;\n  node: Option;\n  position: 'top' | 'bottom' | 'self';\n  indicator: IDropIndicator;\n}\n\ninterface TreeSelectorProps extends ThemeProps, LocaleProps {\n  highlightTxt?: string;\n\n  onRef: any;\n\n  showIcon?: boolean;\n  // 是否默认都展开\n  initiallyOpen?: boolean;\n  // 默认展开的级数，从1开始，只有initiallyOpen不是true时生效\n  unfoldedLevel?: number;\n  // 单选时，是否展示radio\n  showRadio?: boolean;\n  multiple?: boolean;\n  // 是否都不可用\n  disabled?: boolean;\n  // 多选时，选中父节点时，是否将其所有子节点也融合到取值中，默认是不融合\n  withChildren?: boolean;\n  // 多选时，选中父节点时，是否只将起子节点加入到值中。\n  onlyChildren?: boolean;\n  // 单选时，只运行选择子节点\n  onlyLeaf?: boolean;\n  // 名称、取值等字段名映射\n  labelField: string;\n  valueField: string;\n  iconField: string;\n  unfoldedField: string;\n  foldedField: string;\n  disabledField: string;\n\n  // 是否显示 outline 辅助线\n  showOutline?: boolean;\n\n  className?: string;\n  itemClassName?: string;\n  joinValues?: boolean;\n  extractValue?: boolean;\n  delimiter?: string;\n  options: Options;\n  value: any;\n  onChange: Function;\n  placeholder?: string;\n  hideRoot?: boolean;\n  rootLabel?: string;\n  rootValue?: any;\n  // 是否开启节点路径记录\n  enableNodePath?: boolean;\n  // 路径节点的分隔符\n  pathSeparator?: string;\n  // 已选择节点路径\n  nodePath: any[];\n  // ui级联关系，true代表级联选中，false代表不级联，默认为true\n  autoCheckChildren: boolean;\n\n  /*\n   * 该属性代表数据级联关系，autoCheckChildren为true时生效，默认为false，具体数据级联关系如下：\n   * 1.casacde为false，ui行为为级联选中子节点，子节点禁用；值只包含父节点的值\n   * 2.cascade为false，withChildren为true，ui行为为级联选中子节点，子节点禁用；值包含父子节点的值\n   * 3.cascade为true，ui行为级联选中子节点，子节点可反选，值包含父子节点的值，此时withChildren属性失效\n   * 4.cascade不论为true还是false，onlyChildren为true，ui行为级联选中子节点，子节点可反选，值只包含子节点的值\n   */\n  cascade?: boolean;\n\n  selfDisabledAffectChildren?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  // 是否为内建 增、改、删。当有复杂表单的时候直接抛出去让外层能统一处理\n  bultinCUD?: boolean;\n  rootCreatable?: boolean;\n  rootCreateTip?: string;\n  creatable?: boolean;\n  createTip?: string;\n  onAdd?: (\n    idx?: number | Array<number>,\n    value?: any,\n    skipForm?: boolean\n  ) => void;\n  editable?: boolean;\n  editTip?: string;\n  onEdit?: (value: Option, origin?: Option, skipForm?: boolean) => void;\n  removable?: boolean;\n  removeTip?: string;\n  onDelete?: (value: Option) => void;\n  onDeferLoad?: (option: Option) => void;\n  onExpandTree?: (nodePathArr: any[]) => void;\n  draggable?: boolean;\n  onMove?: (dropInfo: IDropInfo) => void;\n}\n\ninterface TreeSelectorState {\n  value: Array<any>;\n  inputValue: string;\n  addingParent: Option | null;\n  isAdding: boolean;\n  isEditing: boolean;\n  editingItem: Option | null;\n\n  // 拖拽指示器\n  dropIndicator?: IDropIndicator;\n}\n\nexport class TreeSelector extends React.Component<\n  TreeSelectorProps,\n  TreeSelectorState\n> {\n  static defaultProps = {\n    showIcon: true,\n    showOutline: false,\n    initiallyOpen: true,\n    unfoldedLevel: 1,\n    showRadio: false,\n    multiple: false,\n    disabled: false,\n    withChildren: false,\n    onlyChildren: false,\n    labelField: 'label',\n    valueField: 'value',\n    iconField: 'icon',\n    unfoldedField: 'unfolded',\n    foldedField: 'foled',\n    disabledField: 'disabled',\n    joinValues: true,\n    extractValue: false,\n    delimiter: ',',\n    hideRoot: true,\n    rootLabel: 'Tree.root',\n    rootValue: 0,\n    autoCheckChildren: true,\n    cascade: false,\n    selfDisabledAffectChildren: true,\n    rootCreateTip: 'Tree.addRoot',\n    createTip: 'Tree.addChild',\n    editTip: 'Tree.editNode',\n    removeTip: 'Tree.removeNode',\n    enableNodePath: false,\n    pathSeparator: '/',\n    nodePath: []\n  };\n\n  unfolded: WeakMap<Object, boolean> = new WeakMap();\n  dragNode: Option | null;\n  dropInfo: IDropInfo | null;\n  startPoint: {\n    x: number;\n    y: number;\n  } = {\n    x: 0,\n    y: 0\n  };\n  root = React.createRef<HTMLDivElement>();\n\n  constructor(props: TreeSelectorProps) {\n    super(props);\n    this.state = {\n      value: value2array(\n        props.value,\n        {\n          multiple: props.multiple,\n          delimiter: props.delimiter,\n          valueField: props.valueField,\n          labelField: props.labelField,\n          options: props.options,\n          pathSeparator: props.pathSeparator\n        },\n        props.enableNodePath\n      ),\n\n      inputValue: '',\n      addingParent: null,\n      isAdding: false,\n      isEditing: false,\n      editingItem: null,\n      dropIndicator: undefined\n    };\n\n    this.syncUnFolded(props);\n  }\n\n  componentDidMount() {\n    const {enableNodePath} = this.props;\n\n    // onRef只有渲染器的情况才会使用\n    this.props.onRef?.(this);\n    enableNodePath && this.expandLazyLoadNodes();\n  }\n\n  componentDidUpdate(prevProps: TreeSelectorProps) {\n    const props = this.props;\n\n    if (prevProps.options !== props.options) {\n      this.syncUnFolded(props);\n    }\n\n    if (\n      prevProps.value !== props.value ||\n      prevProps.options !== props.options\n    ) {\n      this.setState({\n        value: value2array(\n          props.value,\n          {\n            multiple: props.multiple,\n            delimiter: props.delimiter,\n            valueField: props.valueField,\n            options: props.options\n          },\n          props.enableNodePath\n        )\n      });\n    }\n  }\n\n  /**\n   * 展开懒加载节点的父节点\n   */\n  expandLazyLoadNodes() {\n    const {pathSeparator, onExpandTree, nodePath = []} = this.props;\n    const nodePathArr = nodePath.map(path =>\n      path ? path.toString().split(pathSeparator) : []\n    );\n    onExpandTree?.(nodePathArr);\n  }\n\n  syncUnFolded(props: TreeSelectorProps, unfoldedLevel?: number) {\n    // 传入默认展开层级需要重新初始化unfolded\n    let initFoldedLevel = typeof unfoldedLevel !== 'undefined';\n    let expandLevel = Number(initFoldedLevel ? unfoldedLevel : props.unfoldedLevel) - 1;\n\n    // 初始化树节点的展开状态\n    let unfolded = this.unfolded;\n    const {foldedField, unfoldedField} = this.props;\n\n    eachTree(props.options, (node: Option, index, level) => {\n      if (unfolded.has(node) && !initFoldedLevel) {\n        return;\n      }\n\n      if (node.children && node.children.length) {\n        let ret: any = true;\n\n        if (node.defer && node.loaded && !initFoldedLevel) {\n          ret = true;\n        } else if (\n          unfoldedField &&\n          typeof node[unfoldedField] !== 'undefined'\n        ) {\n          ret = !!node[unfoldedField];\n        } else if (foldedField && typeof node[foldedField] !== 'undefined') {\n          ret = !node[foldedField];\n        } else {\n          ret = !!props.initiallyOpen && !initFoldedLevel;\n          if (!ret && level <= (expandLevel as number)) {\n            ret = true;\n          }\n        }\n        unfolded.set(node, ret);\n      }\n    });\n\n    initFoldedLevel && this.forceUpdate();\n\n    return unfolded;\n  }\n\n  @autobind\n  toggleUnfolded(node: any) {\n    const unfolded = this.unfolded;\n    const {onDeferLoad} = this.props;\n\n    if (node.defer && !node.loaded) {\n      onDeferLoad?.(node);\n      return;\n    }\n\n    unfolded.set(node, !unfolded.get(node));\n    this.forceUpdate();\n  }\n\n  isUnfolded(node: any) {\n    const unfolded = this.unfolded;\n    return unfolded.get(node);\n  }\n\n  @autobind\n  clearSelect() {\n    this.setState(\n      {\n        value: []\n      },\n      () => {\n        const {joinValues, rootValue, onChange} = this.props;\n\n        onChange(joinValues ? rootValue : []);\n      }\n    );\n  }\n\n  /**\n   * enableNodePath为true时，将label和value转换成node path格式\n   */\n  transform2NodePath(value: any) {\n    const {\n      multiple,\n      options,\n      valueField,\n      labelField,\n      joinValues,\n      extractValue,\n      pathSeparator,\n      delimiter\n    } = this.props;\n\n    const nodesValuePath: string[] = [];\n    const selectedNodes = Array.isArray(value) ? value.concat() : [value];\n    const selectedNodesPath = selectedNodes.map(node => {\n      const nodePath = getTreeAncestors(options, node, true)?.reduce(\n        (acc, node) => {\n          acc[labelField as string].push(node[labelField as string]);\n          acc[valueField as string].push(node[valueField as string]);\n          return acc;\n        },\n        {[labelField as string]: [], [valueField as string]: []}\n      );\n      const nodeValuePath = nodePath[valueField as string].join(pathSeparator);\n\n      nodesValuePath.push(nodeValuePath);\n      return {\n        ...node,\n        [labelField]: nodePath[labelField as string].join(pathSeparator),\n        [valueField]: nodeValuePath\n      };\n    });\n\n    if (multiple) {\n      return joinValues\n        ? nodesValuePath.join(delimiter)\n        : extractValue\n        ? nodesValuePath\n        : selectedNodesPath;\n    } else {\n      return joinValues || extractValue\n        ? selectedNodesPath[0][valueField]\n        : selectedNodesPath[0];\n    }\n  }\n\n  @autobind\n  handleSelect(node: any, value?: any) {\n    const {joinValues, valueField, onChange, enableNodePath, onlyLeaf} =\n      this.props;\n\n    if (node[valueField as string] === undefined) {\n      if (node.defer && !node.loaded) {\n        this.toggleUnfolded(node);\n      }\n      return;\n    }\n\n    if (onlyLeaf && node.children) {\n      return;\n    }\n\n    this.setState(\n      {\n        value: [node]\n      },\n      () => {\n        onChange(\n          enableNodePath\n            ? this.transform2NodePath(node)\n            : joinValues\n            ? node[valueField as string]\n            : node\n        );\n      }\n    );\n  }\n\n  @autobind\n  handleCheck(item: any, checked: boolean) {\n    const props = this.props;\n    const value = this.state.value.concat();\n    const idx = value.indexOf(item);\n    const {onlyChildren, withChildren, cascade, autoCheckChildren} = props;\n    if (checked) {\n      ~idx || value.push(item);\n      // cascade 为 true 表示父节点跟子节点没有级联关系。\n      if (autoCheckChildren) {\n        const children = item.children ? item.children.concat([]) : [];\n        if (onlyChildren) {\n          // 父级选中的时候，子节点也都选中，但是自己不选中\n          !~idx && children.length && value.pop();\n\n          while (children.length) {\n            let child = children.shift();\n            let index = value.indexOf(child);\n\n            if (child.children && child.children.length) {\n              children.push.apply(children, child.children);\n            } else if (!~index && child.value !== 'undefined') {\n              value.push(child);\n            }\n          }\n        } else {\n          // 只要父节点选择了,子节点就不需要了,全部去掉勾选.  withChildren时相反\n          while (children.length) {\n            let child = children.shift();\n            let index = value.indexOf(child);\n\n            if (~index) {\n              value.splice(index, 1);\n            }\n\n            if (withChildren || cascade) {\n              value.push(child);\n            }\n\n            if (child.children && child.children.length) {\n              children.push.apply(children, child.children);\n            }\n          }\n\n          let toCheck = item;\n\n          while (true) {\n            const parent = getTreeParent(props.options, toCheck);\n            if (parent?.value) {\n              // 如果所有孩子节点都勾选了，应该自动勾选父级。\n\n              if (\n                parent.children.every((child: any) => ~value.indexOf(child))\n              ) {\n                if (!cascade && !withChildren) {\n                  parent.children.forEach((child: any) => {\n                    const index = value.indexOf(child);\n                    if (~index) {\n                      value.splice(index, 1);\n                    }\n                  });\n                }\n                value.push(parent);\n                toCheck = parent;\n                continue;\n              }\n            }\n            break;\n          }\n        }\n      }\n    } else {\n      ~idx && value.splice(idx, 1);\n      if (autoCheckChildren) {\n        if (cascade || withChildren || onlyChildren) {\n          const children = item.children ? item.children.concat([]) : [];\n          while (children.length) {\n            let child = children.shift();\n            let index = value.indexOf(child);\n            if (~index) {\n              value.splice(index, 1);\n            }\n            if (child.children && child.children.length) {\n              children.push.apply(children, child.children);\n            }\n          }\n        }\n      }\n    }\n\n    this.setState(\n      {\n        value\n      },\n      () => {\n        const {\n          joinValues,\n          extractValue,\n          valueField,\n          delimiter,\n          onChange,\n          enableNodePath\n        } = props;\n\n        onChange(\n          enableNodePath\n            ? this.transform2NodePath(value)\n            : joinValues\n            ? value.map(item => item[valueField as string]).join(delimiter)\n            : extractValue\n            ? value.map(item => item[valueField as string])\n            : value\n        );\n      }\n    );\n  }\n\n  @autobind\n  handleAdd(parent: Option | null = null) {\n    const {bultinCUD, onAdd, options} = this.props;\n\n    if (!bultinCUD) {\n      const idxes = findTreeIndex(options, item => item === parent) || [];\n      return onAdd && onAdd(idxes.concat(0));\n    } else {\n      this.setState({\n        isEditing: false,\n        isAdding: true,\n        addingParent: parent\n      });\n    }\n  }\n\n  @autobind\n  handleEdit(item: Option) {\n    const {bultinCUD, onEdit, labelField, options} = this.props;\n\n    if (!bultinCUD) {\n      onEdit?.(item);\n    } else {\n      this.setState({\n        isEditing: true,\n        isAdding: false,\n        editingItem: item,\n        inputValue: item[labelField]\n      });\n    }\n  }\n\n  @autobind\n  handleRemove(item: Option) {\n    const {onDelete} = this.props;\n\n    onDelete && onDelete(item);\n  }\n\n  @autobind\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputValue: e.currentTarget.value\n    });\n  }\n\n  @autobind\n  handleConfirm() {\n    const {\n      inputValue: value,\n      isAdding,\n      addingParent,\n      editingItem,\n      isEditing\n    } = this.state;\n\n    if (!value) {\n      return;\n    }\n\n    const {labelField, onAdd, options, onEdit} = this.props;\n    this.setState(\n      {\n        inputValue: '',\n        isAdding: false,\n        isEditing: false\n      },\n      () => {\n        if (isAdding && onAdd) {\n          const idxes =\n            (addingParent &&\n              findTreeIndex(options, item => item === addingParent)) ||\n            [];\n          onAdd(idxes.concat(0), {[labelField]: value}, true);\n        } else if (isEditing && onEdit) {\n          onEdit(\n            {\n              ...editingItem,\n              [labelField]: value\n            },\n            editingItem!,\n            true\n          );\n        }\n      }\n    );\n  }\n\n  @autobind\n  handleCancel() {\n    this.setState({\n      inputValue: '',\n      isAdding: false,\n      isEditing: false\n    });\n  }\n\n  renderInput(prfix: JSX.Element | null = null) {\n    const {classnames: cx, translate: __} = this.props;\n    const {inputValue} = this.state;\n\n    return (\n      <div className={cx('Tree-itemLabel')}>\n        <div className={cx('Tree-itemInput')}>\n          {prfix}\n          <input\n            onChange={this.handleInputChange}\n            value={inputValue}\n            placeholder={__('placeholder.enter')}\n          />\n          <a data-tooltip={__('cancel')} onClick={this.handleCancel}>\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n          <a data-tooltip={__('confirm')} onClick={this.handleConfirm}>\n            <Icon icon=\"check\" className=\"icon\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  getOffsetPosition(element: HTMLElement) {\n    let left = 0;\n    let top = 0;\n\n    while (element.offsetParent) {\n      left += element.offsetLeft;\n      top += element.offsetTop;\n      element = element.offsetParent as HTMLElement;\n    }\n    return {left, top};\n  }\n\n  @autobind\n  getDropInfo(e: React.DragEvent<Element>, node: Option): IDropInfo {\n    let rect = e.currentTarget.getBoundingClientRect();\n    const dragNode = this.dragNode;\n    const deltaX = Math.min(50, rect.width * 0.3);\n    const gap = node?.children?.length ? 0 : 16;\n\n    // 计算相对位置\n    let offset = this.getOffsetPosition(this.root.current!);\n    let targetOffset = this.getOffsetPosition(e.currentTarget as HTMLElement);\n    let left = targetOffset.left - offset.left;\n    let top = targetOffset.top - offset.top;\n\n    let {clientX, clientY} = e;\n    let position: IDropInfo['position'] =\n      clientY >= rect.top + rect.height / 2 ? 'bottom' : 'top';\n    let indicator;\n    if (position === 'bottom' && clientX >= this.startPoint.x + deltaX) {\n      position = 'self';\n      indicator = {\n        top: top,\n        left: left,\n        width: rect.width,\n        height: rect.height\n      };\n    } else {\n      indicator = {\n        top: position === 'bottom' ? top + rect.height : top,\n        left: left + gap,\n        width: rect.width - gap\n      };\n    }\n\n    return {\n      node,\n      dragNode,\n      position,\n      indicator\n    };\n  }\n\n  @autobind\n  updateDropIndicator(e: React.DragEvent<Element>, node: Option) {\n    const gap = node?.children?.length ? 0 : 16;\n    this.dropInfo = this.getDropInfo(e, node);\n    let {dragNode, indicator} = this.dropInfo;\n    if (node === dragNode) {\n      this.setState({dropIndicator: undefined});\n      return;\n    }\n    this.setState({\n      dropIndicator: indicator\n    });\n  }\n\n  @autobind\n  onDragStart(node: Option) {\n    let draggable = this.props.draggable;\n    return (e: React.DragEvent<Element>) => {\n      if (draggable) {\n        e.dataTransfer.effectAllowed = 'copyMove';\n\n        this.dragNode = node;\n        this.dropInfo = null;\n        this.startPoint = {\n          x: e.clientX,\n          y: e.clientY\n        };\n\n        if (node?.children?.length) {\n          this.unfolded.set(node, false);\n          this.forceUpdate();\n        }\n      } else {\n        this.dragNode = null;\n        this.dropInfo = null;\n      }\n      e.stopPropagation();\n    };\n  }\n\n  @autobind\n  onDragOver(node: Option) {\n    return (e: React.DragEvent<Element>) => {\n      if (!this.dragNode) {\n        return;\n      }\n      this.updateDropIndicator(e, node);\n      e.preventDefault();\n    };\n  }\n\n  @autobind\n  onDragEnd(dragNode: Option) {\n    return (e: React.DragEvent<Element>) => {\n      this.setState({\n        dropIndicator: undefined\n      });\n      let node = this.dropInfo?.node;\n      if (!this.dropInfo || !node || dragNode === node) {\n        return;\n      }\n      this.props.onMove?.(this.dropInfo);\n      this.dragNode = null;\n      this.dropInfo = null;\n      e.preventDefault();\n    };\n  }\n\n  @autobind\n  renderList(\n    list: Options,\n    value: Option[],\n    uncheckable: boolean\n  ): {dom: Array<JSX.Element | null>; childrenChecked: number} {\n    const {\n      itemClassName,\n      showIcon,\n      showRadio,\n      multiple,\n      disabled,\n      labelField,\n      valueField,\n      iconField,\n      disabledField,\n      autoCheckChildren,\n      cascade,\n      selfDisabledAffectChildren,\n      onlyChildren,\n      classnames: cx,\n      highlightTxt,\n      options,\n      maxLength,\n      minLength,\n      creatable,\n      editable,\n      removable,\n      createTip,\n      editTip,\n      removeTip,\n      translate: __,\n      draggable\n    } = this.props;\n    const {\n      value: stateValue,\n      isAdding,\n      addingParent,\n      editingItem,\n      isEditing\n    } = this.state;\n\n    let childrenChecked = 0;\n    let ret = list.map((item, key) => {\n      if (!isVisible(item as any, options)) {\n        return null;\n      }\n      const checked = !!~value.indexOf(item);\n      const selfDisabled = item[disabledField];\n      let selfChecked = !!uncheckable || checked;\n      let childrenItems = null;\n      let selfChildrenChecked = false;\n      if (item.children && item.children.length) {\n        childrenItems = this.renderList(\n          item.children,\n          value,\n          !autoCheckChildren || cascade\n            ? false\n            : uncheckable ||\n                (selfDisabledAffectChildren ? selfDisabled : false) ||\n                (multiple && checked)\n        );\n        selfChildrenChecked = !!childrenItems.childrenChecked;\n        if (\n          !selfChecked &&\n          onlyChildren &&\n          autoCheckChildren &&\n          item.children.length === childrenItems.childrenChecked\n        ) {\n          selfChecked = true;\n        }\n        childrenItems = childrenItems.dom;\n      }\n\n      if ((onlyChildren ? selfChecked : selfChildrenChecked) || checked) {\n        childrenChecked++;\n      }\n\n      let nodeDisabled = !!uncheckable || !!disabled || selfDisabled\n      || (multiple && !autoCheckChildren && !item[valueField]);\n\n      if (\n        !nodeDisabled &&\n        ((maxLength && !selfChecked && stateValue.length >= maxLength) ||\n          (minLength && selfChecked && stateValue.length <= minLength))\n      ) {\n        nodeDisabled = true;\n      }\n      const checkbox: JSX.Element | null = multiple ? (\n        <Checkbox\n          size=\"sm\"\n          disabled={nodeDisabled}\n          checked={selfChecked || (autoCheckChildren && selfChildrenChecked)}\n          partial={!selfChecked}\n          onChange={this.handleCheck.bind(this, item, !selfChecked)}\n        />\n      ) : showRadio ? (\n        <Checkbox\n          size=\"sm\"\n          disabled={nodeDisabled}\n          checked={checked}\n          onChange={this.handleSelect.bind(this, item)}\n        />\n      ) : null;\n\n      const isLeaf =\n        (!item.children || !item.children.length) && !item.placeholder;\n\n      const iconValue = item[iconField] || (childrenItems ? 'folder' : 'file');\n\n      return (\n        <li\n          key={key}\n          className={cx(`Tree-item ${itemClassName || ''}`, {\n            'Tree-item--isLeaf': isLeaf\n          })}\n        >\n          {isEditing && editingItem === item ? (\n            this.renderInput(checkbox)\n          ) : (\n            <div\n              className={cx('Tree-itemLabel', {\n                'is-children-checked':\n                  multiple && !cascade && selfChildrenChecked && !nodeDisabled,\n                'is-checked': checked,\n                'is-disabled': nodeDisabled\n              })}\n              draggable={draggable}\n              onDragStart={this.onDragStart(item)}\n              onDragOver={this.onDragOver(item)}\n              onDragEnd={this.onDragEnd(item)}\n            >\n              {draggable && (\n                <a className={cx('Tree-itemDrager drag-bar')}>\n                  <Icon icon=\"drag-bar\" className=\"icon\" />\n                </a>\n              )}\n\n              {item.loading ? (\n                <Spinner\n                  size=\"sm\"\n                  show\n                  icon=\"reload\"\n                  spinnerClassName={cx('Tree-spinner')}\n                />\n              ) : !isLeaf || (item.defer && !item.loaded) ? (\n                <div\n                  onClick={() => this.toggleUnfolded(item)}\n                  className={cx('Tree-itemArrow', {\n                    'is-folded': !this.isUnfolded(item)\n                  })}\n                >\n                  <Icon icon=\"right-arrow-bold\" className=\"icon\" />\n                </div>\n              ) : (\n                <span className={cx('Tree-itemArrowPlaceholder')} />\n              )}\n\n              {checkbox}\n\n              {showIcon ? (\n                <i\n                  className={cx(\n                    `Tree-itemIcon ${\n                      childrenItems ? 'Tree-folderIcon' : 'Tree-leafIcon'\n                    }`\n                  )}\n                  onClick={() =>\n                    !nodeDisabled &&\n                    (multiple\n                      ? this.handleCheck(item, !selfChecked)\n                      : this.handleSelect(item))\n                  }\n                >\n                  {getIcon(iconValue) ? (\n                    <Icon icon={iconValue} className=\"icon\" />\n                  ) : (\n                    <i className={iconValue}></i>\n                  )}\n                </i>\n              ) : null}\n\n              <span\n                className={cx('Tree-itemText')}\n                onClick={() =>\n                  !nodeDisabled &&\n                  (multiple\n                    ? this.handleCheck(item, !selfChecked)\n                    : this.handleSelect(item))\n                }\n              >\n                {highlightTxt\n                  ? highlight(`${item[labelField]}`, highlightTxt)\n                  : `${item[labelField]}`}\n              </span>\n\n              {!nodeDisabled &&\n              !isAdding &&\n              !isEditing &&\n              !(item.defer && !item.loaded) ? (\n                <div className={cx('Tree-item-icons')}>\n                  {creatable && hasAbility(item, 'creatable') ? (\n                    <a\n                      onClick={this.handleAdd.bind(this, item)}\n                      data-tooltip={__(createTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"plus\" className=\"icon\" />\n                    </a>\n                  ) : null}\n\n                  {removable && hasAbility(item, 'removable') ? (\n                    <a\n                      onClick={this.handleRemove.bind(this, item)}\n                      data-tooltip={__(removeTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"minus\" className=\"icon\" />\n                    </a>\n                  ) : null}\n\n                  {editable && hasAbility(item, 'editable') ? (\n                    <a\n                      onClick={this.handleEdit.bind(this, item)}\n                      data-tooltip={__(editTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"pencil\" className=\"icon\" />\n                    </a>\n                  ) : null}\n                </div>\n              ) : null}\n            </div>\n          )}\n          {/* 有children而且为展开状态 或者 添加child时 */}\n          {(childrenItems && this.isUnfolded(item)) ||\n          (isAdding && addingParent === item) ? (\n            <ul className={cx('Tree-sublist')}>\n              {isAdding && addingParent === item ? (\n                <li className={cx('Tree-item')}>\n                  {this.renderInput(\n                    checkbox\n                      ? React.cloneElement(checkbox, {\n                          checked: false,\n                          disabled: true\n                        })\n                      : null\n                  )}\n                </li>\n              ) : null}\n              {childrenItems}\n            </ul>\n          ) : !childrenItems && item.placeholder && this.isUnfolded(item) ? (\n            <ul className={cx('Tree-sublist')}>\n              <li className={cx('Tree-item')}>\n                <div className={cx('Tree-placeholder')}>{item.placeholder}</div>\n              </li>\n            </ul>\n          ) : null}\n        </li>\n      );\n    });\n\n    return {\n      dom: ret,\n      childrenChecked\n    };\n  }\n\n  render() {\n    const {\n      className,\n      placeholder,\n      hideRoot,\n      rootLabel,\n      showOutline,\n      showIcon,\n      classnames: cx,\n      creatable,\n      rootCreatable,\n      rootCreateTip,\n      disabled,\n      draggable,\n      translate: __\n    } = this.props;\n    let options = this.props.options;\n    const {\n      value,\n      isAdding,\n      addingParent,\n      isEditing,\n      inputValue,\n      dropIndicator\n    } = this.state;\n\n    let addBtn = null;\n\n    if (creatable && rootCreatable !== false && hideRoot) {\n      addBtn = (\n        <a\n          className={cx('Tree-addTopBtn', {\n            'is-disabled': isAdding || isEditing\n          })}\n          onClick={this.handleAdd.bind(this, null)}\n        >\n          <Icon icon=\"plus\" className=\"icon\" />\n          <span>{__(rootCreateTip)}</span>\n        </a>\n      );\n    }\n\n    return (\n      <div\n        className={cx(`Tree ${className || ''}`, {\n          'Tree--outline': showOutline,\n          'is-disabled': disabled,\n          'is-draggable': draggable\n        })}\n        ref={this.root}\n      >\n        {(options && options.length) || addBtn || hideRoot === false ? (\n          <ul className={cx('Tree-list')}>\n            {hideRoot ? (\n              <>\n                {addBtn}\n                {isAdding && !addingParent ? (\n                  <li className={cx('Tree-item')}>{this.renderInput()}</li>\n                ) : null}\n                {this.renderList(options, value, false).dom}\n              </>\n            ) : (\n              <li\n                className={cx('Tree-rootItem', {\n                  'is-checked': !value || !value.length\n                })}\n              >\n                <div className={cx('Tree-itemLabel')}>\n                  <span\n                    className={cx('Tree-itemText')}\n                    onClick={this.clearSelect}\n                  >\n                    {showIcon ? (\n                      <i className={cx('Tree-itemIcon Tree-rootIcon')}>\n                        <Icon icon=\"home\" className=\"icon\" />\n                      </i>\n                    ) : null}\n                    {rootLabel}\n                  </span>\n                  {!disabled &&\n                  creatable &&\n                  rootCreatable !== false &&\n                  !isAdding &&\n                  !isEditing ? (\n                    <div className={cx('Tree-item-icons')}>\n                      {creatable ? (\n                        <a\n                          onClick={this.handleAdd.bind(this, null)}\n                          data-tooltip={rootCreateTip}\n                          data-position=\"left\"\n                        >\n                          <Icon icon=\"plus\" className=\"icon\" />\n                        </a>\n                      ) : null}\n                    </div>\n                  ) : null}\n                </div>\n                <ul className={cx('Tree-sublist')}>\n                  {isAdding && !addingParent ? (\n                    <li className={cx('Tree-item')}>{this.renderInput()}</li>\n                  ) : null}\n                  {this.renderList(options, value, false).dom}\n                </ul>\n              </li>\n            )}\n          </ul>\n        ) : (\n          <div className={cx('Tree-placeholder')}>{placeholder}</div>\n        )}\n\n        {dropIndicator && (\n          <div\n            className={cx('Tree-dropIndicator', {\n              'Tree-dropIndicator--hover': !!dropIndicator.height\n            })}\n            style={dropIndicator}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default themeable(localeable(TreeSelector));\n"
    ]
}