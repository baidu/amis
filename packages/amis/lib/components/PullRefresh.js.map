{
    "version": 3,
    "file": "PullRefresh.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/PullRefresh.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file PullRefresh.tsx\n * @description 下拉刷新\n * @author hongyang03\n */\n\nimport React, {forwardRef, useEffect} from 'react';\nimport {ClassNamesFn, themeable} from '../theme';\nimport {useSetState} from '../hooks';\nimport useTouch from '../hooks/use-touch';\nimport {Icon} from './icons';\nimport {TranslateFn} from '../locale';\n\nexport interface PullRefreshProps {\n  classnames: ClassNamesFn;\n  classPrefix: string;\n  translate: TranslateFn;\n  disabled?: boolean;\n  pullingText?: string;\n  loosingText?: string;\n  loadingText?: string;\n  successText?: string;\n  onRefresh?: () => void;\n  loading?: boolean;\n  successDuration?: number;\n  loadingDuration?: number;\n}\n\ntype statusText = 'normal' | 'pulling' | 'loosing' | 'success' | 'loading';\n\nexport interface PullRefreshState {\n  status: statusText;\n  offsetY: number;\n}\n\nconst defaultProps = {\n  successDuration: 0,\n  loadingDuration: 0\n};\n\nconst defaultHeaderHeight = 28;\n\nconst PullRefresh = forwardRef<{}, PullRefreshProps>((props, ref) => {\n  const {\n    classnames: cx,\n    translate: __,\n    children,\n    successDuration,\n    loadingDuration\n  } = props;\n\n  const refreshText = {\n    pullingText: __('pullRefresh.pullingText'),\n    loosingText: __('pullRefresh.loosingText'),\n    loadingText: __('pullRefresh.loadingText'),\n    successText: __('pullRefresh.successText')\n  };\n\n  const touch = useTouch();\n\n  useEffect(() => {\n    if (props.loading === false) {\n      loadSuccess();\n    }\n  }, [props.loading]);\n\n  const [state, updateState] = useSetState({\n    status: 'normal',\n    offsetY: 0\n  } as PullRefreshState);\n\n  const isTouchable = () => {\n    return (\n      !props.disabled &&\n      state.status !== 'loading' &&\n      state.status !== 'success'\n    );\n  };\n\n  const ease = (distance: number) => {\n    const pullDistance = defaultHeaderHeight;\n\n    if (distance > pullDistance) {\n      if (distance < pullDistance * 2) {\n        distance = pullDistance + (distance - pullDistance) / 2;\n      } else {\n        distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n      }\n    }\n\n    return Math.round(distance);\n  };\n\n  const setStatus = (distance: number, isLoading?: boolean) => {\n    const pullDistance = defaultHeaderHeight;\n    let status: statusText = 'normal';\n\n    if (isLoading) {\n      status = 'loading';\n    } else if (distance === 0) {\n      status = 'normal';\n    } else if (distance < pullDistance) {\n      status = 'pulling';\n    } else {\n      status = 'loosing';\n    }\n\n    updateState({offsetY: distance, status});\n  };\n\n  const loadSuccess = () => {\n    if (!successDuration) {\n      setStatus(0);\n      return;\n    }\n    updateState({status: 'success'});\n\n    setTimeout(() => {\n      setStatus(0);\n    }, successDuration);\n  };\n\n  const onTouchStart = (event: any) => {\n    event.stopPropagation();\n\n    if (isTouchable() && state.offsetY === 0) {\n      touch.start(event);\n      updateState({});\n    }\n  };\n\n  const onTouchMove = (event: any) => {\n    event.stopPropagation();\n\n    if (isTouchable()) {\n      touch.move(event);\n      updateState({});\n      if (touch.isVertical() && touch.deltaY > 0) {\n        setStatus(ease(touch.deltaY));\n      }\n    }\n    return false;\n  };\n\n  const onTouchEnd = (event: any) => {\n    event.stopPropagation();\n\n    if (isTouchable() && state.offsetY > 0) {\n      if (state.status === 'loosing') {\n        if (loadingDuration) {\n          setStatus(defaultHeaderHeight, true);\n        } else {\n          setStatus(0);\n        }\n        props.onRefresh && props.onRefresh();\n      } else {\n        setStatus(0);\n      }\n    }\n  };\n\n  const transformStyle = {\n    transform: `translate3d(0, ${state.offsetY}px, 0)`,\n    touchAction: 'none'\n  };\n\n  const getStatusText = (status: statusText) => {\n    if (status === 'normal') {\n      return '';\n    }\n    return props[`${status}Text`] || refreshText[`${status}Text`];\n  };\n\n  return (\n    <div\n      className={cx('PullRefresh')}\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n      onTouchCancel={onTouchEnd}\n    >\n      <div className={cx('PullRefresh-wrap')} style={transformStyle}>\n        <div className={cx('PullRefresh-header')}>\n          {state.status === 'loading' && (\n            <Icon icon=\"loading-outline\" className=\"icon loading-icon\" />\n          )}\n          {getStatusText(state.status)}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n});\n\nPullRefresh.defaultProps = defaultProps;\n\nexport default themeable(PullRefresh);\n"
    ]
}