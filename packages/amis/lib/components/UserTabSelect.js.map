{
    "version": 3,
    "file": "UserTabSelect.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/UserTabSelect.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file 移动端人员、部门、角色、岗位选择\n * @author fex\n */\n\nimport React from 'react';\nimport {themeable, ThemeProps} from '../theme';\nimport {LocaleProps, localeable} from '../locale';\nimport {ResultBox} from '../components';\nimport UserSelect from './UserSelect';\nimport {Option} from '../renderers/Form/Options';\nimport Sortable from 'sortablejs';\nimport PopUp from '../components/PopUp';\nimport {Icon} from '../components/icons';\nimport {autobind, findTree} from '../utils/helper';\nimport {default as Tabs, Tab} from './Tabs';\nimport {UserSelectProps} from './UserSelect';\nimport {PlainObject} from '../types';\nimport {resolveVariableAndFilter} from '../utils/tpl-builtin';\n\nexport interface UserSelectTop extends UserSelectProps {\n  title: string;\n  deferApi?: string;\n  searchApi?: string;\n  searchable?: boolean;\n  searchParam?: PlainObject;\n  searchTerm?: string;\n}\nexport interface UserTabSelectProps extends ThemeProps, LocaleProps {\n  tabOptions?: Array<UserSelectTop>;\n  multiple?: boolean;\n  placeholder?: string;\n  valueField?: string;\n  labelField?: string;\n  selection?: Array<Option>;\n  data?: PlainObject;\n  onChange: (value: Array<Option> | Option) => void;\n  onSearch?: (\n    term: string,\n    cancelExecutor: Function,\n    paramObj?: PlainObject\n  ) => Promise<any[]> | undefined;\n  deferLoad: (\n    data?: Object,\n    isRef?: boolean,\n    param?: PlainObject\n  ) => Promise<Option[]>;\n}\n\nexport interface UserTabSelectState {\n  isOpened: boolean;\n  isSearch: boolean;\n  isSelectOpened: boolean;\n  inputValue: string;\n  breadList: Array<any>;\n  options: Array<Option>;\n  tempSelection: Array<Option>;\n  selection: Array<Option>;\n  searchList: Array<Option>;\n  searchLoading: boolean;\n  isEdit: boolean;\n  activeKey: number;\n}\n\nexport class UserTabSelect extends React.Component<\n  UserTabSelectProps,\n  UserTabSelectState\n> {\n  cancelSearch?: Function;\n  sortable?: Sortable;\n  unmounted = false;\n\n  constructor(props: UserTabSelectProps) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      isSelectOpened: false,\n      inputValue: '',\n      options: [],\n      breadList: [],\n      searchList: [],\n      tempSelection: [],\n      selection: props.selection ? props.selection : [],\n      isSearch: false,\n      searchLoading: false,\n      isEdit: false,\n      activeKey: 0\n    };\n  }\n\n  static defaultProps = {};\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps: UserTabSelectProps) {}\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  @autobind\n  onClose() {\n    this.setState({\n      isOpened: false,\n      isSearch: false,\n      inputValue: '',\n      searchList: [],\n      searchLoading: false,\n      activeKey: 0\n    });\n  }\n\n  @autobind\n  onOpen() {\n    const {selection} = this.state;\n    this.setState({\n      isOpened: true,\n      tempSelection: selection.slice()\n    });\n  }\n\n  @autobind\n  handleBack() {\n    this.onClose();\n    const {onChange} = this.props;\n    onChange(this.state.selection);\n  }\n\n  @autobind\n  handleSelectChange(option: Option | Array<Option>, isReplace?: boolean) {\n    const {multiple, valueField = 'value'} = this.props;\n    let selection = this.state.selection.slice();\n    let selectionVals = selection.map((option: Option) => option[valueField]);\n    if (isReplace && Array.isArray(option)) {\n      selection = option.slice();\n    } else if (!Array.isArray(option)) {\n      let pos = selectionVals.indexOf(option[valueField]);\n      if (pos !== -1) {\n        selection.splice(selection.indexOf(option), 1);\n      } else {\n        if (multiple) {\n          selection.push(option);\n        } else {\n          selection = [option];\n        }\n      }\n    }\n\n    this.setState({\n      selection: selection\n    });\n    return false;\n  }\n\n  @autobind\n  handleTabChange(key: number) {\n    this.setState({\n      activeKey: key\n    });\n  }\n\n  render() {\n    let {\n      classnames: cx,\n      translate: __,\n      onChange,\n      placeholder = '请选择',\n      tabOptions,\n      onSearch,\n      deferLoad,\n      data\n    } = this.props;\n    const {activeKey, isOpened, selection} = this.state;\n\n    return (\n      <div className={cx('UserTabSelect')}>\n        <ResultBox\n          className={cx('UserTabSelect-input', isOpened ? 'is-active' : '')}\n          allowInput={false}\n          result={selection}\n          onResultChange={value => this.handleSelectChange(value, true)}\n          onResultClick={this.onOpen}\n          placeholder={placeholder}\n          useMobileUI\n        />\n        <PopUp\n          isShow={isOpened}\n          className={cx(`UserTabSelect-popup`)}\n          onHide={this.onClose}\n          showClose={false}\n        >\n          <div className={cx('UserTabSelect-wrap')}>\n            <div className={cx('UserSelect-navbar')}>\n              <span className=\"left-arrow-box\" onClick={this.handleBack}>\n                <Icon icon=\"left-arrow\" className=\"icon\" />\n              </span>\n              <div className={cx('UserSelect-navbar-title')}>人员选择</div>\n            </div>\n            <Tabs\n              mode=\"tiled\"\n              className={cx('UserTabSelect-tabs')}\n              onSelect={this.handleTabChange}\n              activeKey={activeKey}\n            >\n              {tabOptions?.map((item: UserSelectTop, index: number) => {\n                return (\n                  <Tab\n                    {...this.props}\n                    eventKey={index}\n                    key={index}\n                    title={item.title}\n                    className=\"TabsTransfer-tab\"\n                  >\n                    <UserSelect\n                      selection={selection}\n                      showResultBox={false}\n                      {...item}\n                      options={\n                        typeof item.options === 'string' && data\n                          ? resolveVariableAndFilter(\n                              item.options,\n                              data,\n                              '| raw'\n                            )\n                          : item.options\n                      }\n                      multiple\n                      controlled\n                      onChange={this.handleSelectChange}\n                      onSearch={(input: string, cancelExecutor: Function) =>\n                        item.searchable && onSearch\n                          ? onSearch(input, cancelExecutor, {\n                              searchApi: item.searchApi,\n                              searchParam: item.searchParam,\n                              searchTerm: item.searchTerm\n                            })\n                          : undefined\n                      }\n                      deferLoad={(\n                        data?: PlainObject,\n                        isRef?: boolean,\n                        param?: PlainObject\n                      ) =>\n                        deferLoad(data, isRef, {\n                          deferApi: item.deferApi,\n                          ...(param || {})\n                        })\n                      }\n                    />\n                  </Tab>\n                );\n              })}\n            </Tabs>\n          </div>\n        </PopUp>\n      </div>\n    );\n  }\n}\n\nexport default themeable(localeable(UserTabSelect));\n"
    ]
}