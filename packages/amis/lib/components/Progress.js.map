{
    "version": 3,
    "file": "Progress.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Progress.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAE1B,2CAAmC;AACnC,kCAA6D;AAwB7D;IAA8B,yCAAsC;IAApE;;IA+IA,CAAC;IAtIC,kCAAe,GAAf;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3B,OAAO,YAAY,CAAC;SACrB;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;IAED,gCAAa,GAAb,UAAc,KAAwC;QACpD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAC/C,UAAC,CAAkB,EAAE,CAAkB,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAjB,CAAiB,CAC9D,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;gBAChC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aAC5B;SACF;QACD,OAAO,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;IACjD,CAAC;IAED,gCAAa,GAAb,UAAc,KAAwC;QACpD,IAAM,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;YAC3B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC5B,OAAO;oBACL,KAAK,EAAE,IAAI;oBACX,KAAK,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;iBAC1B,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAAQ,GAAR,UAAS,SAAiB;QAClB,IAAA,KAA6C,IAAI,CAAC,KAAK,EAAtD,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,SAAS,eAAA,EAAc,EAAE,gBAAc,CAAC;QAC9D,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAI,CAAC;SACb;QACD,IAAM,aAAa,GAAG,MAAM,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,UAAG,KAAK,MAAG,EAAX,CAAW,CAAC,CAAC;QACvD,IAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,CACL,wCAAM,SAAS,EAAE,EAAE,CAAC,UAAG,SAAS,UAAO,CAAC,EAAE,GAAG,EAAC,OAAO,IAClD,OAAO,CACH,CACR,CAAC;IACJ,CAAC;IAED,yBAAM,GAAN;;QACQ,IAAA,KAYF,IAAI,CAAC,KAAK,EAXZ,SAAS,eAAA,EACT,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,MAAM,YAAA,EACN,OAAO,aAAA,EACP,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,WAAW,iBAAA,EACC,EAAE,gBACF,CAAC;QAEf,IAAM,UAAU,GAAG,IAAI,KAAK,MAAM,CAAC;QACnC,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACnE,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,IAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,SAA0B,CAAC;QAC/B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,SAAS,GAAG,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAAC;SAC/D;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,IAAM,QAAQ,GAAQ;gBACpB,KAAK,EAAE,UAAG,KAAK,MAAG;aACnB,CAAC;YACF,WAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC;YAC/C,CAAC,YAAY,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,CAAC;YAEtD,SAAS,GAAG;gBACV,uCAAK,GAAG,EAAC,UAAU,EAAC,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;oBAC7D,uCAAK,SAAS,EAAE,EAAE,CAAC,UAAG,SAAS,WAAQ,CAAC;wBACtC,uCACE,SAAS,EAAE,EAAE,CACX,UAAG,SAAS,SAAM,YACjB,GAAC,OAAO,IAAG,YAAY,iBACvB,GAAC,UAAG,SAAS,iBAAc,IAAG,MAAM,iBACpC,GAAC,UAAG,SAAS,kBAAe,IAAG,OAAO,IAAI,CAAC,MAAM,iBACjD,GAAC,UAAG,SAAS,yBAAsB,IAAG,OAAO,IAAI,MAAM,MACzD,EACD,KAAK,EAAE,UAAG,KAAK,MAAG,EAClB,KAAK,EAAE,QAAQ,GACf,CACE,CACF;gBACN,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;aACzB,CAAC;SACH;aAAM,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,WAAW,EAAE;YACpD,IAAM,WAAW,GAAG,WAAW,IAAI,CAAC,CAAC;YACrC,IAAM,MAAM,GAAG,WAAW,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC;YAC1E,IAAM,YAAY,GAAG;gBACnB,IAAI,SAAS,IAAI,SAAS,KAAK,CAAC,EAAE;oBAChC,OAAO,SAAS,CAAC;iBAClB;gBACD,IAAI,IAAI,KAAK,WAAW,EAAE;oBACxB,OAAO,EAAE,CAAC;iBACX;gBACD,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC;YAEF,SAAS,GAAG;gBACV,uCACE,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,iBAAiB,IAAI,OAAO,CAAC,EACtD,GAAG,EAAC,QAAQ;oBAEZ,8BAAC,oBAAM,IACL,OAAO,EAAE,KAAK,EACd,WAAW,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EACzC,WAAW,EAAE,WAAW,EACxB,UAAU,EAAE,WAAW,EACvB,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EACtC,SAAS,EAAE,YAAY,EAAE,EACzB,WAAW,EAAE,MAAM,GACnB;oBACD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CACrB;aACP,CAAC;SACH;QAED,OAAO,uCAAK,SAAS,EAAE,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,IAAG,SAAS,CAAO,CAAC;IACtE,CAAC;IA7IM,qBAAY,GAA2B;QAC5C,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,GAAG;QAChB,iBAAiB,EAAE,EAAE;QACrB,GAAG,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC;QACvE,SAAS,EAAE,IAAI;KAChB,CAAC;IAwIJ,eAAC;CAAA,AA/ID,CAA8B,eAAK,CAAC,SAAS,GA+I5C;AA/IY,4BAAQ;AAiJrB,kBAAe,IAAA,iBAAS,EAAC,QAAQ,CAAC,CAAC",
    "sourcesContent": [
        "import React from 'react';\nimport cx from 'classnames';\nimport {Circle} from 'rc-progress';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {SchemaClassName} from '../Schema';\ninterface ColorProps {\n  value: number;\n  color: string;\n}\n\nexport type ColorMapType = Array<string> | Array<ColorProps> | string;\n\ninterface ProgressProps extends ThemeProps {\n  type: 'line' | 'circle' | 'dashboard';\n  showLabel: boolean;\n  value: number;\n  stripe?: boolean;\n  animate?: boolean;\n  map?: ColorMapType;\n  placeholder?: string;\n  format?: (value?: number) => JSX.Element;\n  gapDegree?: number;\n  gapPosition?: 'top' | 'bottom' | 'left' | 'right';\n  strokeWidth?: number;\n  progressClassName?: SchemaClassName;\n  classnames: ClassNamesFn;\n}\nexport class Progress extends React.Component<ProgressProps, Object> {\n  static defaultProps: Partial<ProgressProps> = {\n    type: 'line',\n    placeholder: '-',\n    progressClassName: '',\n    map: ['bg-danger', 'bg-warning', 'bg-info', 'bg-success', 'bg-success'],\n    showLabel: true\n  };\n\n  getCurrentColor() {\n    const color = this.props.map;\n    if (!color || !color.length) {\n      return 'bg-primary';\n    }\n    if (typeof color === 'string') {\n      return color;\n    } else {\n      return this.getLevelColor(color);\n    }\n  }\n\n  getLevelColor(color: Array<string> | Array<ColorProps>) {\n    const value = this.props.value;\n    const colorArray = this.getColorArray(color).sort(\n      (a: {value: number}, b: {value: number}) => a.value - b.value\n    );\n    for (let i = 0; i < colorArray.length; i++) {\n      if (colorArray[i].value >= value) {\n        return colorArray[i].color;\n      }\n    }\n    return colorArray[colorArray.length - 1].color;\n  }\n\n  getColorArray(color: Array<string> | Array<ColorProps>) {\n    const span = 100 / color.length;\n    return color.map((item, index) => {\n      if (typeof item === 'string') {\n        return {\n          color: item,\n          value: (index + 1) * span\n        };\n      }\n      return item;\n    });\n  }\n\n  getLabel(prefixCls: string) {\n    const {value, format, showLabel, classnames: cx} = this.props;\n    if (!showLabel) {\n      return null;\n    }\n    const textFormatter = format || (value => `${value}%`);\n    const content = textFormatter(value);\n    return (\n      <span className={cx(`${prefixCls}-text`)} key=\"value\">\n        {content}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      progressClassName,\n      type,\n      value,\n      placeholder,\n      stripe,\n      animate,\n      gapDegree,\n      gapPosition,\n      strokeWidth,\n      classnames: cx\n    } = this.props;\n\n    const isLineType = type === 'line';\n    const prefixCls = isLineType ? 'Progress-line' : 'Progress-circle';\n    const bgColor = this.getCurrentColor();\n    const isColorClass = /bg-/.test(bgColor);\n\n    let viewValue: React.ReactNode;\n    if (typeof value !== 'number') {\n      viewValue = <span className=\"text-muted\">{placeholder}</span>;\n    } else if (type === 'line') {\n      const barStyle: any = {\n        width: `${value}%`\n      };\n      strokeWidth && (barStyle.height = strokeWidth);\n      !isColorClass && (barStyle.backgroundColor = bgColor);\n\n      viewValue = [\n        <div key=\"progress\" className={cx(prefixCls, progressClassName)}>\n          <div className={cx(`${prefixCls}-inter`)}>\n            <div\n              className={cx(\n                `${prefixCls}-bar`,\n                {[bgColor]: isColorClass},\n                {[`${prefixCls}-bar--stripe`]: stripe},\n                {[`${prefixCls}-bar--animate`]: animate && !stripe},\n                {[`${prefixCls}-bar--stripe-animate`]: animate && stripe}\n              )}\n              title={`${value}%`}\n              style={barStyle}\n            />\n          </div>\n        </div>,\n        this.getLabel(prefixCls)\n      ];\n    } else if (type === 'circle' || type === 'dashboard') {\n      const circleWidth = strokeWidth || 6;\n      const gapPos = gapPosition || (type === 'dashboard' && 'bottom') || 'top';\n      const getGapDegree = () => {\n        if (gapDegree || gapDegree === 0) {\n          return gapDegree;\n        }\n        if (type === 'dashboard') {\n          return 75;\n        }\n        return undefined;\n      };\n\n      viewValue = [\n        <div\n          className={cx(prefixCls, progressClassName || 'w-ssm')}\n          key=\"circle\"\n        >\n          <Circle\n            percent={value}\n            strokeColor={!isColorClass ? bgColor : ''}\n            strokeWidth={circleWidth}\n            trailWidth={circleWidth}\n            prefixCls={isColorClass ? bgColor : ''}\n            gapDegree={getGapDegree()}\n            gapPosition={gapPos}\n          />\n          {this.getLabel(prefixCls)}\n        </div>\n      ];\n    }\n\n    return <div className={cx('Progress', className)}>{viewValue}</div>;\n  }\n}\n\nexport default themeable(Progress);\n"
    ]
}