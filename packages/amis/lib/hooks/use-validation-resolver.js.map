{
    "version": 3,
    "file": "use-validation-resolver.js",
    "sourceRoot": "",
    "sources": [
        "/src/hooks/use-validation-resolver.ts"
    ],
    "names": [],
    "mappings": ";;;;AAAA;;GAEG;AACH,kEAA+B;AAC/B,6DAA0B;AAC1B,oDAAiE;AAEjE,SAAS,YAAY,CAAC,MAAW;IAC/B,IAAM,QAAQ,GAAQ,EAAE,CAAC;IACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;QAC7B,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,EAAE;YACV,QAAQ,CAAC,GAAG,CAAC,GAAG;gBACd,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,OAAO,EAAE,MAAM,CAAC,GAAG;aACpB,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAgB,qBAAqB,CAAC,EAAyB;IAA/D,iBAuBC;IAvBqC,mBAAA,EAAA,eAAM,GAAW,IAAK,OAAA,GAAG,EAAH,CAAG;IAC7D,OAAO,eAAK,CAAC,WAAW,CACtB,UAAO,MAAW,EAAE,OAAY,EAAE,MAAW;;;YACrC,KAAK,GAAQ,EAAE,CAAC;YAChB,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,yBAAW,CAAC,CAAC;YAC1C,WAA0C,EAA1B,KAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;gBAAnC,GAAG;gBACJ,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACjC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAA,cAAI,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAEnC,IAAI,KAAK,CAAC,QAAQ,EAAE;oBAClB,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;iBAC9B;aACF;YAEK,MAAM,GAAG,IAAA,4BAAc,EAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAE5D,sBAAO;oBACL,MAAM,QAAA;oBACN,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC;iBAC7B,EAAC;;SACH,EACD,CAAC,EAAE,CAAC,CACL,CAAC;AACJ,CAAC;AAvBD,sDAuBC",
    "sourcesContent": [
        "/**\n * @file 用 amis 内置的验证来验证 react-hook-form 里面的表单数据\n */\nimport pick from 'lodash/pick';\nimport React from 'react';\nimport {validateObject, validations} from '../utils/validations';\n\nfunction formatErrors(errors: any) {\n  const formated: any = {};\n  Object.keys(errors).forEach(key => {\n    const origin = errors[key][0];\n    if (origin) {\n      formated[key] = {\n        type: origin.rule,\n        message: origin.msg\n      };\n    }\n  });\n  return formated;\n}\n\nexport function useValidationResolver(__ = (str: string) => str) {\n  return React.useCallback<any>(\n    async (values: any, context: any, config: any) => {\n      const rules: any = {};\n      const ruleKeys = Object.keys(validations);\n      for (let key of Object.keys(config.fields)) {\n        const field = config.fields[key];\n        rules[key] = pick(field, ruleKeys);\n\n        if (field.required) {\n          rules[key].isRequired = true;\n        }\n      }\n\n      const errors = validateObject(values, rules, undefined, __);\n\n      return {\n        values,\n        errors: formatErrors(errors)\n      };\n    },\n    [__]\n  );\n}\n"
    ]
}