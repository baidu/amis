{
    "version": 3,
    "file": "list.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/list.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getParent,\n  SnapshotIn,\n  flow,\n  getEnv,\n  getRoot,\n  Instance\n} from 'mobx-state-tree';\nimport {iRendererStore} from './iRenderer';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport {\n  createObject,\n  isObject,\n  guid,\n  immutableExtends,\n  extendObject\n} from '../utils/helper';\nimport {evalExpression} from '../utils/tpl';\n\nexport const Item = types\n  .model('Item', {\n    id: types.identifier,\n    pristine: types.frozen(),\n    data: types.frozen(),\n    index: types.number,\n    newIndex: types.number\n  })\n  .views(self => ({\n    get checked(): boolean {\n      return (getParent(self, 2) as IListStore).isSelected(self as IItem);\n    },\n\n    get modified() {\n      if (!self.data) {\n        return false;\n      }\n\n      return Object.keys(self.data).some(\n        key => !isEqual(self.data[key], self.pristine[key])\n      );\n    },\n\n    get moved() {\n      return self.index !== self.newIndex;\n    },\n\n    get locals(): any {\n      return createObject(\n        extendObject((getParent(self, 2) as IListStore).data, {\n          index: self.index\n        }),\n        self.data\n      );\n    },\n\n    get checkable(): boolean {\n      const table = getParent(self, 2) as IListStore;\n      return table && table.itemCheckableOn\n        ? evalExpression(table.itemCheckableOn, (self as IItem).locals)\n        : true;\n    },\n\n    get draggable(): boolean {\n      const table = getParent(self, 2) as IListStore;\n      return table && table.itemDraggableOn\n        ? evalExpression(table.itemDraggableOn, (self as IItem).locals)\n        : true;\n    }\n  }))\n  .actions(self => ({\n    toggle() {\n      (getParent(self, 2) as IListStore).toggle(self as IItem);\n    },\n\n    change(values: object, savePristine?: boolean) {\n      self.data = immutableExtends(self.data, values);\n      savePristine && (self.pristine = self.data);\n    },\n\n    reset() {\n      self.newIndex = self.index;\n      self.data = self.pristine;\n    }\n  }));\n\nexport type IItem = Instance<typeof Item>;\nexport type SItem = SnapshotIn<typeof Item>;\n\nexport const ListStore = iRendererStore\n  .named('ListStore')\n  .props({\n    items: types.array(Item),\n    selectedItems: types.array(types.reference(Item)),\n    primaryField: 'id',\n    orderBy: '',\n    orderDir: types.optional(\n      types.union(types.literal('asc'), types.literal('desc')),\n      'asc'\n    ),\n    draggable: false,\n    dragging: false,\n    multiple: true,\n    selectable: false,\n    itemCheckableOn: '',\n    itemDraggableOn: '',\n    hideCheckToggler: false\n  })\n  .views(self => {\n    function isSelected(item: IItem): boolean {\n      return !!~self.selectedItems.indexOf(item);\n    }\n\n    function getModifiedItems() {\n      return self.items.filter(item => item.modified);\n    }\n\n    function getModified() {\n      return getModifiedItems().length;\n    }\n\n    function getMovedItems() {\n      return self.items.filter(item => item.moved);\n    }\n\n    function getMovied() {\n      return getMovedItems().length;\n    }\n\n    return {\n      get allChecked(): boolean {\n        return !!(\n          self.selectedItems.length ===\n            (self as IListStore).checkableItems.length &&\n          (self as IListStore).checkableItems.length\n        );\n      },\n\n      get checkableItems() {\n        return self.items.filter(item => item.checkable);\n      },\n\n      get unSelectedItems() {\n        return self.items.filter(item => !item.checked);\n      },\n\n      isSelected,\n\n      get modified() {\n        return getModified();\n      },\n\n      get modifiedItems() {\n        return getModifiedItems();\n      },\n\n      get moved() {\n        return getMovied();\n      },\n\n      get movedItems() {\n        return getMovedItems();\n      }\n    };\n  })\n  .actions(self => {\n    function update(config: Partial<SListStore>) {\n      config.selectable === void 0 || (self.selectable = config.selectable);\n      config.draggable === void 0 || (self.draggable = config.draggable);\n      config.multiple === void 0 || (self.multiple = config.multiple);\n      config.hideCheckToggler === void 0 ||\n        (self.hideCheckToggler = config.hideCheckToggler);\n\n      if (typeof config.orderBy !== 'undefined') {\n        setOrderByInfo(\n          config.orderBy,\n          config.orderDir === 'desc' ? 'desc' : 'asc'\n        );\n      }\n\n      config.itemCheckableOn === void 0 ||\n        (self.itemCheckableOn = config.itemCheckableOn);\n      config.itemDraggableOn === void 0 ||\n        (self.itemDraggableOn = config.itemDraggableOn);\n    }\n\n    function initItems(items: Array<object>) {\n      let arr = items.map((item, key) => {\n        item = isObject(item)\n          ? item\n          : {\n              item: item\n            };\n\n        return {\n          // id: String((item as any)[self.primaryField] || key),\n          id: guid(),\n          index: key,\n          newIndex: key,\n          pristine: item,\n          data: item,\n          modified: false\n        };\n      });\n      self.selectedItems.clear();\n      self.items.replace(arr as Array<IItem>);\n      self.dragging = false;\n    }\n\n    function updateSelected(selected: Array<any>, valueField?: string) {\n      self.selectedItems.clear();\n      self.items.forEach(item => {\n        if (~selected.indexOf(item.pristine)) {\n          self.selectedItems.push(item);\n        } else if (\n          find(\n            selected,\n            a =>\n              a[valueField || 'value'] == item.pristine[valueField || 'value']\n          )\n        ) {\n          self.selectedItems.push(item);\n        }\n      });\n    }\n\n    function toggleAll() {\n      if (self.allChecked) {\n        self.selectedItems.clear();\n      } else {\n        self.selectedItems.replace(self.checkableItems);\n      }\n    }\n\n    function toggle(item: IItem) {\n      if (!item.checkable) {\n        return;\n      }\n\n      const idx = self.selectedItems.indexOf(item);\n\n      if (self.multiple) {\n        ~idx\n          ? self.selectedItems.splice(idx, 1)\n          : self.selectedItems.push(item);\n      } else {\n        ~idx\n          ? self.selectedItems.splice(idx, 1)\n          : self.selectedItems.replace([item]);\n      }\n    }\n\n    function clear() {\n      self.selectedItems.clear();\n    }\n\n    function setOrderByInfo(key: string, direction: 'asc' | 'desc') {\n      self.orderBy = key;\n      self.orderDir = direction;\n    }\n\n    function reset() {\n      self.items.forEach(item => item.reset());\n      self.dragging = false;\n    }\n\n    function toggleDragging() {\n      self.dragging = !self.dragging;\n    }\n\n    function stopDragging() {\n      self.dragging = false;\n    }\n\n    function exchange(fromIndex: number, toIndex: number) {\n      const item: IItem = self.items[fromIndex];\n      item.newIndex = toIndex;\n\n      const newItems = self.items.slice();\n      newItems.splice(fromIndex, 1);\n      newItems.splice(toIndex, 0, item);\n\n      self.items.replace(newItems);\n    }\n\n    return {\n      update,\n      initItems,\n      updateSelected,\n      toggleAll,\n      toggle,\n      clear,\n      setOrderByInfo,\n      reset,\n      toggleDragging,\n      stopDragging,\n      exchange\n    };\n  });\n\nexport type IListStore = Instance<typeof ListStore>;\nexport type SListStore = SnapshotIn<typeof ListStore>;\n"
    ]
}