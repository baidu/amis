{
    "version": 3,
    "file": "formItem.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/formItem.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getParent,\n  SnapshotIn,\n  flow,\n  getRoot,\n  hasParent,\n  isAlive,\n  getEnv,\n  Instance\n} from 'mobx-state-tree';\nimport isEqualWith from 'lodash/isEqualWith';\nimport {FormStore, IFormStore} from './form';\nimport {str2rules, validate as doValidate} from '../utils/validations';\nimport {Api, Payload, fetchOptions} from '../types';\nimport {ComboStore, IComboStore, IUniqueGroup} from './combo';\nimport {evalExpression} from '../utils/tpl';\nimport {isEffectiveApi} from '../utils/api';\nimport findIndex from 'lodash/findIndex';\nimport {\n  isArrayChildrenModified,\n  isObject,\n  createObject,\n  isObjectShallowModified,\n  findTree,\n  findTreeIndex,\n  spliceTree,\n  isEmpty,\n  getTreeAncestors,\n  filterTree\n} from '../utils/helper';\nimport {flattenTree} from '../utils/helper';\nimport {IRendererStore} from '.';\nimport {normalizeOptions, optionValueCompare} from '../components/Select';\nimport find from 'lodash/find';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {SimpleMap} from '../utils/SimpleMap';\nimport memoize from 'lodash/memoize';\nimport {TranslateFn} from '../locale';\nimport {StoreNode} from './node';\nimport {getStoreById} from './manager';\nimport {toast} from '../components';\n\ninterface IOption {\n  value?: string | number | null;\n  label?: string | null;\n  children?: IOption[] | null;\n  disabled?: boolean | null;\n  visible?: boolean | null;\n  hidden?: boolean | null;\n}\n\nconst ErrorDetail = types.model('ErrorDetail', {\n  msg: '',\n  tag: '',\n  rule: ''\n});\n\nexport const FormItemStore = StoreNode.named('FormItemStore')\n  .props({\n    isFocused: false,\n    type: '',\n    label: '',\n    unique: false,\n    loading: false,\n    required: false,\n    tmpValue: types.frozen(),\n    emitedValue: types.frozen(),\n    rules: types.optional(types.frozen(), {}),\n    messages: types.optional(types.frozen(), {}),\n    errorData: types.optional(types.array(ErrorDetail), []),\n    name: types.string,\n    itemId: '', // 因为 name 可能会重名，所以加个 id 进来，如果有需要用来定位具体某一个\n    unsetValueOnInvisible: false,\n    itemsRef: types.optional(types.array(types.string), []),\n    validated: false,\n    validating: false,\n    multiple: false,\n    delimiter: ',',\n    valueField: 'value',\n    labelField: 'label',\n    joinValues: true,\n    extractValue: false,\n    options: types.optional(types.frozen<Array<any>>(), []),\n    expressionsInOptions: false,\n    selectFirst: false,\n    autoFill: types.frozen(),\n    clearValueOnHidden: false,\n    validateApi: types.optional(types.frozen(), ''),\n    selectedOptions: types.optional(types.frozen(), []),\n    filteredOptions: types.optional(types.frozen(), []),\n    dialogSchema: types.frozen(),\n    dialogOpen: false,\n    dialogData: types.frozen(),\n    resetValue: types.optional(types.frozen(), ''),\n    validateOnChange: false\n  })\n  .views(self => {\n    function getForm(): any {\n      const form = self.parentStore;\n      return form?.storeType === FormStore.name ? form : undefined;\n    }\n\n    function getValue(): any {\n      return getForm()?.getValueByName(self.name);\n    }\n\n    function getLastOptionValue(): any {\n      if (self.selectedOptions.length) {\n        return self.selectedOptions[self.selectedOptions.length - 1].value;\n      }\n\n      return '';\n    }\n\n    function getErrors(): Array<string> {\n      return self.errorData.map(item => item.msg);\n    }\n\n    return {\n      get subFormItems(): any {\n        return self.itemsRef.map(item => getStoreById(item));\n      },\n\n      get form(): any {\n        return getForm();\n      },\n\n      get value(): any {\n        return getValue();\n      },\n\n      get prinstine(): any {\n        return (getForm() as IFormStore)?.getPristineValueByName(self.name);\n      },\n\n      get errors() {\n        return getErrors();\n      },\n\n      get valid() {\n        const errors = getErrors();\n        return !!(!errors || !errors.length);\n      },\n\n      get errClassNames() {\n        return self.errorData\n          .map(item => item.rule)\n          .filter((item, index, arr) => item && arr.indexOf(item) === index)\n          .map(item => `has-error--${item}`)\n          .join(' ');\n      },\n\n      get lastSelectValue(): string {\n        return getLastOptionValue();\n      },\n\n      getSelectedOptions: (\n        value: any = self.tmpValue,\n        nodeValueArray?: any[] | undefined\n      ) => {\n        if (typeof value === 'undefined') {\n          return [];\n        }\n\n        const valueArray = nodeValueArray\n          ? nodeValueArray\n          : Array.isArray(value)\n          ? value\n          : typeof value === 'string'\n          ? value.split(self.delimiter || ',')\n          : [value];\n        const selected = valueArray.map(item =>\n          item && item.hasOwnProperty(self.valueField || 'value')\n            ? item[self.valueField || 'value']\n            : item\n        );\n\n        const selectedOptions: Array<any> = [];\n\n        selected.forEach((item, index) => {\n          const matched = findTree(\n            self.filteredOptions,\n            optionValueCompare(item, self.valueField || 'value')\n          );\n\n          if (matched) {\n            selectedOptions.push(matched);\n          } else {\n            let unMatched = (valueArray && valueArray[index]) || item;\n\n            if (\n              unMatched &&\n              (typeof unMatched === 'string' || typeof unMatched === 'number')\n            ) {\n              unMatched = {\n                [self.valueField || 'value']: item,\n                [self.labelField || 'label']: item,\n                __unmatched: true\n              };\n            } else if (unMatched && self.extractValue) {\n              unMatched = {\n                [self.valueField || 'value']: item,\n                [self.labelField || 'label']: 'UnKnown',\n                __unmatched: true\n              };\n            }\n\n            unMatched && selectedOptions.push(unMatched);\n          }\n        });\n\n        return selectedOptions;\n      }\n    };\n  })\n\n  .actions(self => {\n    const form = self.form as IFormStore;\n    const dialogCallbacks = new SimpleMap<(result?: any) => void>();\n    let loadAutoUpdateCancel: Function | null = null;\n\n    function config({\n      required,\n      unique,\n      value,\n      rules,\n      messages,\n      delimiter,\n      multiple,\n      valueField,\n      labelField,\n      joinValues,\n      extractValue,\n      type,\n      id,\n      selectFirst,\n      autoFill,\n      clearValueOnHidden,\n      validateApi,\n      maxLength,\n      minLength,\n      validateOnChange,\n      label\n    }: {\n      required?: boolean;\n      unique?: boolean;\n      value?: any;\n      rules?: string | {[propName: string]: any};\n      messages?: {[propName: string]: string};\n      multiple?: boolean;\n      delimiter?: string;\n      valueField?: string;\n      labelField?: string;\n      joinValues?: boolean;\n      extractValue?: boolean;\n      type?: string;\n      id?: string;\n      selectFirst?: boolean;\n      autoFill?: any;\n      clearValueOnHidden?: boolean;\n      validateApi?: boolean;\n      minLength?: number;\n      maxLength?: number;\n      validateOnChange?: boolean;\n      label?: string;\n    }) {\n      if (typeof rules === 'string') {\n        rules = str2rules(rules);\n      }\n\n      typeof type !== 'undefined' && (self.type = type);\n      typeof id !== 'undefined' && (self.itemId = id);\n      typeof messages !== 'undefined' && (self.messages = messages);\n      typeof required !== 'undefined' && (self.required = !!required);\n      typeof unique !== 'undefined' && (self.unique = !!unique);\n      typeof multiple !== 'undefined' && (self.multiple = !!multiple);\n      typeof selectFirst !== 'undefined' && (self.selectFirst = !!selectFirst);\n      typeof autoFill !== 'undefined' && (self.autoFill = autoFill);\n      typeof joinValues !== 'undefined' && (self.joinValues = !!joinValues);\n      typeof extractValue !== 'undefined' &&\n        (self.extractValue = !!extractValue);\n      typeof delimiter !== 'undefined' &&\n        (self.delimiter = (delimiter as string) || ',');\n      typeof valueField !== 'undefined' &&\n        (self.valueField = (valueField as string) || 'value');\n      typeof labelField !== 'undefined' &&\n        (self.labelField = (labelField as string) || 'label');\n      typeof clearValueOnHidden !== 'undefined' &&\n        (self.clearValueOnHidden = !!clearValueOnHidden);\n      typeof validateApi !== 'undefined' && (self.validateApi = validateApi);\n      typeof validateOnChange !== 'undefined' &&\n        (self.validateOnChange = !!validateOnChange);\n      typeof label === 'string' && (self.label = label);\n\n      rules = {\n        ...rules,\n        isRequired: self.required\n      };\n\n      // todo 这个弄个配置由渲染器自己来决定\n      // 暂时先这样\n      if (~['input-text', 'textarea'].indexOf(self.type)) {\n        if (typeof minLength === 'number') {\n          rules.minLength = minLength;\n        }\n\n        if (typeof maxLength === 'number') {\n          rules.maxLength = maxLength;\n        }\n      }\n\n      if (isObjectShallowModified(rules, self.rules)) {\n        self.rules = rules;\n        clearError('builtin');\n        self.validated = false;\n      }\n    }\n\n    function focus() {\n      self.isFocused = true;\n    }\n\n    function blur() {\n      self.isFocused = false;\n    }\n\n    let validateCancel: Function | null = null;\n    const validate: (data: Object, hook?: any) => Promise<boolean> = flow(\n      function* validate(data: Object, hook?: any) {\n        if (self.validating && !isEffectiveApi(self.validateApi, data)) {\n          return self.valid;\n        }\n\n        self.validating = true;\n        clearError();\n        if (hook) {\n          yield hook();\n        }\n\n        addError(\n          doValidate(self.tmpValue, data, self.rules, self.messages, self.__)\n        );\n\n        if (!self.errors.length && isEffectiveApi(self.validateApi, data)) {\n          if (validateCancel) {\n            validateCancel();\n            validateCancel = null;\n          }\n\n          const json: Payload = yield getEnv(self).fetcher(\n            self.validateApi,\n            /** 如果配置validateApi，需要将用户最新输入同步到数据域内 */\n            createObject(data, {[self.name]: self.tmpValue}),\n            {\n              cancelExecutor: (executor: Function) =>\n                (validateCancel = executor)\n            }\n          );\n          validateCancel = null;\n\n          if (!json.ok && json.status === 422 && json.errors) {\n            addError(\n              String(\n                json.errors || json.msg || `表单项「${self.name}」校验失败`\n              )\n            );\n          }\n        }\n\n        self.validated = true;\n\n        if (self.unique && self.form?.parentStore?.storeType === 'ComboStore') {\n          const combo = self.form.parentStore as IComboStore;\n          const group = combo.uniques.get(self.name) as IUniqueGroup;\n\n          if (\n            group.items.some(\n              item =>\n                item !== self &&\n                self.tmpValue !== undefined &&\n                item.value === self.tmpValue\n            )\n          ) {\n            addError(self.__('Form.unique'));\n          }\n        }\n\n        self.validating = false;\n        return self.valid;\n      }\n    );\n\n    function setError(msg: string | Array<string>, tag: string = 'builtin') {\n      clearError();\n      addError(msg, tag);\n    }\n\n    function addError(\n      msg:\n        | string\n        | Array<\n            | string\n            | {\n                msg: string;\n                rule: string;\n              }\n          >,\n      tag: string = 'builtin'\n    ) {\n      const msgs: Array<\n        | string\n        | {\n            msg: string;\n            rule: string;\n          }\n      > = Array.isArray(msg) ? msg : [msg];\n      msgs.forEach(item =>\n        self.errorData.push({\n          msg: typeof item === 'string' ? item : item.msg,\n          rule: typeof item !== 'string' ? item.rule : undefined,\n          tag: tag\n        })\n      );\n    }\n\n    function clearError(tag?: string) {\n      if (tag) {\n        const filtered = self.errorData.filter(item => item.tag !== tag);\n        self.errorData.replace(filtered);\n      } else {\n        self.errorData.clear();\n      }\n    }\n\n    function getFirstAvaibleOption(options: Array<any>): any {\n      if (!Array.isArray(options)) {\n        return;\n      }\n\n      for (let option of options) {\n        if (Array.isArray(option.children)) {\n          const childFirst = getFirstAvaibleOption(option.children);\n          if (childFirst !== undefined) {\n            return childFirst;\n          }\n        } else if (option[self.valueField || 'value'] && !option.disabled) {\n          return option;\n        }\n      }\n    }\n\n    function setOptions(\n      options: Array<object>,\n      onChange?: (value: any) => void,\n      data?: Object\n    ) {\n      if (!Array.isArray(options)) {\n        return;\n      }\n      options = filterTree(options, item => item);\n      const originOptions = self.options.concat();\n      self.options = options;\n      syncOptions(originOptions, data);\n      let selectedOptions;\n\n      if (\n        onChange &&\n        self.selectFirst &&\n        self.filteredOptions.length &&\n        (selectedOptions = self.getSelectedOptions(self.value)) &&\n        !selectedOptions.filter(item => !item.__unmatched).length\n      ) {\n        const fistOption = getFirstAvaibleOption(self.filteredOptions);\n        if (!fistOption) {\n          return;\n        }\n\n        const list = [fistOption].map((item: any) => {\n          if (self.extractValue || self.joinValues) {\n            return item[self.valueField || 'value'];\n          }\n\n          return item;\n        });\n\n        const value =\n          self.joinValues && self.multiple\n            ? list.join(self.delimiter)\n            : self.multiple\n            ? list\n            : list[0];\n\n        onChange(value);\n      }\n    }\n\n    let loadCancel: Function | null = null;\n    const fetchOptions: (\n      api: Api,\n      data?: object,\n      config?: fetchOptions,\n      setErrorFlag?: boolean\n    ) => Promise<Payload | null> = flow(function* getInitData(\n      api: string,\n      data: object,\n      config?: fetchOptions,\n      setErrorFlag?: boolean\n    ) {\n      try {\n        if (loadCancel) {\n          loadCancel();\n          loadCancel = null;\n          self.loading = false;\n        }\n\n        if (!config?.silent) {\n          self.loading = true;\n        }\n\n        const json: Payload = yield getEnv(self).fetcher(api, data, {\n          autoAppend: false,\n          cancelExecutor: (executor: Function) => (loadCancel = executor),\n          ...config\n        });\n        loadCancel = null;\n        let result: any = null;\n\n        if (!json.ok) {\n          setErrorFlag !== false &&\n            setError(\n              self.__('Form.loadOptionsFailed', {\n                reason: json.msg ?? (config && config.errorMessage)\n              })\n            );\n          getEnv(self).notify(\n            'error',\n            self.errors.join('') || `${api}：${json.msg}`,\n            json.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: json.msgTimeout\n                }\n              : undefined\n          );\n        } else {\n          result = json;\n        }\n\n        self.loading = false;\n        return result;\n      } catch (e) {\n        const env = getEnv(self);\n\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n\n        self.loading = false;\n        if (env.isCancel(e)) {\n          return;\n        }\n\n        console.error(e.stack);\n        env.notify('error', e.message);\n        return;\n      }\n    } as any);\n\n    const loadOptions: (\n      api: Api,\n      data?: object,\n      config?: fetchOptions & {\n        extendsOptions?: boolean;\n      },\n      clearValue?: boolean,\n      onChange?: (value: any) => void,\n      setErrorFlag?: boolean\n    ) => Promise<Payload | null> = flow(function* getInitData(\n      api: string,\n      data: object,\n      config?: fetchOptions,\n      clearValue?: any,\n      onChange?: (\n        value: any,\n        submitOnChange?: boolean,\n        changeImmediately?: boolean\n      ) => void,\n      setErrorFlag?: boolean\n    ) {\n      let json = yield fetchOptions(api, data, config, setErrorFlag);\n      if (!json) {\n        return;\n      }\n\n      clearError();\n      self.validated = false; // 拉完数据应该需要再校验一下\n\n      let options: Array<IOption> =\n        json.data?.options ||\n        json.data?.items ||\n        json.data?.rows ||\n        json.data ||\n        [];\n\n      options = normalizeOptions(options as any, undefined, self.valueField);\n\n      if (config?.extendsOptions && self.selectedOptions.length > 0) {\n        self.selectedOptions.forEach((item: any) => {\n          const exited = findTree(\n            options as any,\n            optionValueCompare(item, self.valueField || 'value')\n          );\n\n          if (!exited) {\n            options.push(item);\n          }\n        });\n      }\n\n      setOptions(options, onChange, data);\n\n      if (json.data && typeof (json.data as any).value !== 'undefined') {\n        onChange && onChange((json.data as any).value, false, true);\n      } else if (clearValue && !self.selectFirst) {\n        self.selectedOptions.some((item: any) => item.__unmatched) &&\n          onChange &&\n          onChange('', false, true);\n      }\n\n      return json;\n    });\n\n    const loadAutoUpdateData: (\n      api: Api,\n      data?: object,\n      silent?: boolean\n    ) => Promise<Payload> = flow(function* getAutoUpdateData(\n      api: string,\n      data: object,\n      silent: boolean = true\n    ) {\n      if (loadAutoUpdateCancel) {\n        loadAutoUpdateCancel();\n        loadAutoUpdateCancel = null;\n      }\n\n      const json: Payload = yield getEnv(self).fetcher(api, data, {\n        cancelExecutor: (executor: Function) =>\n          (loadAutoUpdateCancel = executor)\n      });\n      loadAutoUpdateCancel = null;\n\n      if (!json) {\n        return;\n      }\n\n      const result = json.data?.items || json.data?.rows;\n      // 只处理仅有一个结果的数据\n      if (result?.length === 1) {\n        return result[0];\n      } else if (isPlainObject(json.data)) {\n        return json.data;\n      }\n\n      !silent && toast.info(self.__('FormItem.autoUpdateloadFaild'));\n\n      return;\n    });\n\n    const tryDeferLoadLeftOptions: (\n      option: any,\n      leftOptions: any,\n      api: Api,\n      data?: object,\n      config?: fetchOptions\n    ) => Promise<Payload | null> = flow(function* (\n      option: any,\n      leftOptions: any,\n      api: string,\n      data: object,\n      config?: fetchOptions\n    ) {\n      if (!Array.isArray(leftOptions)) {\n        return;\n      }\n\n      const indexes = findTreeIndex(\n        self.options,\n        item => item.leftOptions === leftOptions\n      );\n      const leftIndexes = findTreeIndex(leftOptions, item => item === option);\n      const topOption = findTree(\n        self.options,\n        item => item.leftOptions === leftOptions\n      );\n\n      if (!indexes || !leftIndexes || !topOption) {\n        return;\n      }\n\n      setOptions(\n        spliceTree(self.options, indexes, 1, {\n          ...topOption,\n          loading: true,\n          leftOptions: spliceTree(topOption.leftOptions, leftIndexes, 1, {\n            ...option,\n            loading: true\n          })\n        }),\n        undefined,\n        data\n      );\n\n      let json = yield fetchOptions(\n        api,\n        data,\n        {\n          ...config,\n          silent: true\n        },\n        false\n      );\n\n      if (!json) {\n        setOptions(\n          spliceTree(self.options, indexes, 1, {\n            ...topOption,\n            loading: false,\n            error: true,\n            leftOptions: spliceTree(topOption.leftOptions, leftIndexes, 1, {\n              ...option,\n              loading: false,\n              error: true\n            })\n          }),\n          undefined,\n          data\n        );\n        return;\n      }\n\n      const options: Array<IOption> =\n        json.data?.options ||\n        json.data.items ||\n        json.data.rows ||\n        json.data ||\n        [];\n      const newLeftOptions = spliceTree(topOption.leftOptions, leftIndexes, 1, {\n        ...option,\n        loading: false,\n        loaded: true,\n        children: options\n      });\n\n      setOptions(\n        spliceTree(self.options, indexes, 1, {\n          ...topOption,\n          loading: false,\n          loaded: true,\n          children: options,\n          leftOptions: newLeftOptions\n        }),\n        undefined,\n        data\n      );\n\n      // 插入新的子节点，用于之后BaseSelection.resolveSelected查找\n      if (Array.isArray(topOption.children)) {\n        const children = topOption.children.concat();\n        flattenTree(newLeftOptions).forEach(item => {\n          if (!findTree(topOption.children, node => node.ref === item.value)) {\n            children.push({ref: item.value, defer: true});\n          }\n        });\n\n        setOptions(\n          spliceTree(self.options, indexes, 1, {\n            ...topOption,\n            leftOptions: newLeftOptions,\n            children\n          }),\n          undefined,\n          data\n        );\n      }\n\n      return json;\n    });\n\n    const deferLoadLeftOptions: (\n      option: any,\n      leftOptions: any,\n      api: Api,\n      data?: object,\n      config?: fetchOptions\n    ) => Promise<Payload | null> = flow(function* (\n      option: any,\n      leftOptions: any,\n      api: string,\n      data: object,\n      config?: fetchOptions\n    ) {\n      return yield tryDeferLoadLeftOptions(\n        option,\n        leftOptions,\n        api,\n        data,\n        config\n      );\n    });\n\n    const deferLoadOptions: (\n      option: any,\n      api: Api,\n      data?: object,\n      config?: fetchOptions\n    ) => Promise<Payload | null> = flow(function* (\n      option: any,\n      api: string,\n      data: object,\n      config?: fetchOptions\n    ) {\n      const labelField = self.labelField || 'label';\n      const valueField = self.valueField || 'value';\n      const indexes = findTreeIndex(\n        self.options,\n        item =>\n          item === option ||\n          /** tree-select中会对option添加collapsed, visible属性，导致item === option不通过 */\n          isEqualWith(\n            item,\n            option,\n            (source, target) =>\n              source?.[labelField] === target?.[labelField] &&\n              source?.[valueField] === target?.[valueField]\n          )\n      );\n      if (!indexes) {\n        const leftOptions = self.options[0]?.leftOptions;\n        return yield tryDeferLoadLeftOptions(\n          option,\n          leftOptions,\n          api,\n          data,\n          config\n        );\n      }\n\n      setOptions(\n        spliceTree(self.options, indexes, 1, {\n          ...option,\n          loading: true\n        }),\n        undefined,\n        data\n      );\n\n      let json = yield fetchOptions(\n        api,\n        data,\n        {\n          ...config,\n          silent: true\n        },\n        false\n      );\n      if (!json) {\n        setOptions(\n          spliceTree(self.options, indexes, 1, {\n            ...option,\n            loading: false,\n            error: true\n          }),\n          undefined,\n          data\n        );\n        return;\n      }\n\n      let options: Array<IOption> =\n        json.data?.options ||\n        json.data.items ||\n        json.data.rows ||\n        json.data ||\n        [];\n\n      setOptions(\n        spliceTree(self.options, indexes, 1, {\n          ...option,\n          loading: false,\n          loaded: true,\n          children: options\n        }),\n        undefined,\n        data\n      );\n\n      return json;\n    });\n\n    /**\n     * 根据当前节点路径展开树形组件父节点\n     */\n    const expandTreeOptions: (\n      nodePathArr: any[],\n      api: Api,\n      data?: object,\n      config?: fetchOptions\n    ) => Promise<Payload | null | void> = flow(function* getInitData(\n      nodePathArr: any[],\n      api: string,\n      data: object,\n      config?: fetchOptions\n    ) {\n      // 多选模式下需要记录遍历过的Node，避免发送相同的请求\n      const traversedNode = new Map();\n\n      for (let nodePath of nodePathArr) {\n        // 根节点已经展开了，不需要加载\n        if (nodePath.length <= 1) {\n          continue;\n        }\n\n        // 叶节点不需要展开\n        for (let level = 0; level < nodePath.length - 1; level++) {\n          let tree = self.options.concat();\n          let nodeValue = nodePath[level];\n\n          if (traversedNode.has(nodeValue)) {\n            continue;\n          }\n          // 节点value认为是唯一的\n          let node = findTree(tree, (item, key, treeLevel: number) => {\n            return (\n              treeLevel === level + 1 &&\n              optionValueCompare(nodeValue, self.valueField || 'value')(item)\n            );\n          });\n\n          // 只处理懒加载节点\n          if (!node || !node.defer) {\n            continue;\n          }\n          const indexes = findTreeIndex(\n            tree,\n            item => item === node\n          ) as number[];\n\n          setOptions(\n            spliceTree(tree, indexes, 1, {\n              ...node,\n              loading: true\n            }),\n            undefined,\n            node\n          );\n\n          let json = yield fetchOptions(\n            api,\n            node,\n            {...config, silent: true},\n            false\n          );\n\n          if (!json) {\n            setOptions(\n              spliceTree(tree, indexes, 1, {\n                ...node,\n                loading: false,\n                error: true\n              }),\n              undefined,\n              node\n            );\n          }\n\n          traversedNode.set(nodeValue, true);\n\n          let childrenOptions: Array<IOption> =\n            json.data?.options ||\n            json.data.items ||\n            json.data.rows ||\n            json.data ||\n            [];\n\n          setOptions(\n            spliceTree(tree, indexes, 1, {\n              ...node,\n              loading: false,\n              loaded: true,\n              children: childrenOptions\n            }),\n            undefined,\n            node\n          );\n        }\n      }\n    });\n\n    // @issue 强依赖form，需要改造暂且放过。\n    function syncOptions(originOptions?: Array<any>, data?: Object) {\n      if (!self.options.length && typeof self.value === 'undefined') {\n        self.selectedOptions = [];\n        self.filteredOptions = [];\n        return;\n      }\n\n      const value = self.tmpValue;\n\n      const selected = Array.isArray(value)\n        ? value.map(item =>\n            item && item.hasOwnProperty(self.valueField || 'value')\n              ? item[self.valueField || 'value']\n              : item\n          )\n        : typeof value === 'string'\n        ? value.split(self.delimiter || ',')\n        : value === void 0\n        ? []\n        : [\n            value && value.hasOwnProperty(self.valueField || 'value')\n              ? value[self.valueField || 'value']\n              : value\n          ];\n\n      if (value && value.hasOwnProperty(self.labelField || 'label')) {\n        selected[0] = {\n          [self.labelField || 'label']: value[self.labelField || 'label'],\n          [self.valueField || 'value']: value[self.valueField || 'value']\n        };\n      }\n\n      let expressionsInOptions = false;\n      let filteredOptions = self.options\n        .filter((item: any) => {\n          if (\n            !expressionsInOptions &&\n            (item.visibleOn || item.hiddenOn || item.disabledOn)\n          ) {\n            expressionsInOptions = true;\n          }\n\n          return item.visibleOn\n            ? evalExpression(item.visibleOn, data) !== false\n            : item.hiddenOn\n            ? evalExpression(item.hiddenOn, data) !== true\n            : item.visible !== false || item.hidden !== true;\n        })\n        .map((item: any, index) => {\n          const disabled = evalExpression(item.disabledOn, data);\n          const newItem = item.disabledOn\n            ? self.filteredOptions.length > index &&\n              self.filteredOptions[index].disabled === disabled\n              ? self.filteredOptions[index]\n              : {\n                  ...item,\n                  disabled: disabled\n                }\n            : item;\n\n          return newItem;\n        });\n\n      self.expressionsInOptions = expressionsInOptions;\n      const flattened: Array<any> = flattenTree(filteredOptions);\n      const selectedOptions: Array<any> = [];\n\n      selected.forEach((item, index) => {\n        let idx = findIndex(\n          flattened,\n          optionValueCompare(item, self.valueField || 'value')\n        );\n\n        if (~idx) {\n          selectedOptions.push(flattened[idx]);\n        } else {\n          let unMatched = (value && value[index]) || item;\n\n          if (\n            unMatched &&\n            (typeof unMatched === 'string' || typeof unMatched === 'number')\n          ) {\n            unMatched = {\n              [self.valueField || 'value']: item,\n              [self.labelField || 'label']: item,\n              __unmatched: true\n            };\n\n            const orgin: any =\n              originOptions &&\n              find(\n                originOptions,\n                optionValueCompare(item, self.valueField || 'value')\n              );\n\n            if (orgin) {\n              unMatched[self.labelField || 'label'] =\n                orgin[self.labelField || 'label'];\n            }\n          } else if (unMatched && self.extractValue) {\n            unMatched = {\n              [self.valueField || 'value']: item,\n              [self.labelField || 'label']: 'UnKnown',\n              __unmatched: true\n            };\n          }\n\n          unMatched && selectedOptions.push(unMatched);\n        }\n      });\n\n      const form = self.form;\n\n      let parentStore = form?.parentStore;\n      if (parentStore?.storeType === ComboStore.name) {\n        let combo = parentStore as IComboStore;\n        let group = combo.uniques.get(self.name) as IUniqueGroup;\n        let options: Array<any> = [];\n        group &&\n          group.items.forEach(item => {\n            if (self !== item) {\n              options.push(\n                ...item.selectedOptions.map((item: any) => item && item.value)\n              );\n            }\n          });\n\n        if (filteredOptions.length) {\n          filteredOptions = filteredOptions.filter(\n            option => !~options.indexOf(option.value)\n          );\n        }\n      }\n      isArrayChildrenModified(self.selectedOptions, selectedOptions) &&\n        (self.selectedOptions = selectedOptions);\n      isArrayChildrenModified(self.filteredOptions, filteredOptions) &&\n        (self.filteredOptions = filteredOptions);\n    }\n\n    function setLoading(value: boolean) {\n      self.loading = value;\n    }\n\n    let subStore: any;\n    function getSubStore() {\n      return subStore;\n    }\n\n    function setSubStore(store: any) {\n      subStore = store;\n    }\n\n    function reset(keepErrors: boolean = false) {\n      self.validated = false;\n\n      if (subStore && subStore.storeType === 'ComboStore') {\n        const combo = subStore as IComboStore;\n        combo.forms.forEach(form => form.reset());\n      }\n\n      !keepErrors && clearError();\n    }\n\n    function openDialog(\n      schema: any,\n      data: any,\n      callback?: (ret?: any) => void\n    ) {\n      self.dialogSchema = schema;\n      self.dialogData = data;\n      self.dialogOpen = true;\n      callback && dialogCallbacks.set(self.dialogData, callback);\n    }\n\n    function closeDialog(result?: any) {\n      const callback = dialogCallbacks.get(self.dialogData);\n      self.dialogOpen = false;\n\n      if (callback) {\n        dialogCallbacks.delete(self.dialogData);\n        setTimeout(() => callback(result), 200);\n      }\n    }\n\n    function changeTmpValue(value: any) {\n      self.tmpValue = value;\n    }\n\n    function changeEmitedValue(value: any) {\n      self.emitedValue = value;\n    }\n\n    function addSubFormItem(item: IFormItemStore) {\n      self.itemsRef.push(item.id);\n    }\n\n    function removeSubFormItem(item: IFormItemStore) {\n      const idx = self.itemsRef.findIndex(a => a === item.id);\n      if (~idx) {\n        self.itemsRef.splice(idx, 1);\n      }\n    }\n\n    return {\n      focus,\n      blur,\n      config,\n      validate,\n      setError,\n      addError,\n      clearError,\n      setOptions,\n      loadOptions,\n      deferLoadOptions,\n      deferLoadLeftOptions,\n      expandTreeOptions,\n      syncOptions,\n      setLoading,\n      setSubStore,\n      getSubStore,\n      reset,\n      openDialog,\n      closeDialog,\n      changeTmpValue,\n      changeEmitedValue,\n      addSubFormItem,\n      removeSubFormItem,\n      loadAutoUpdateData\n    };\n  });\n\nexport type IFormItemStore = Instance<typeof FormItemStore>;\nexport type SFormItemStore = SnapshotIn<typeof FormItemStore>;\n"
    ]
}