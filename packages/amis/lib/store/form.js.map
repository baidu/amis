{
    "version": 3,
    "file": "form.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/form.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getEnv,\n  flow,\n  getRoot,\n  detach,\n  destroy,\n  isAlive,\n  Instance\n} from 'mobx-state-tree';\nimport debounce from 'lodash/debounce';\nimport {ServiceStore} from './service';\nimport {FormItemStore, IFormItemStore, SFormItemStore} from './formItem';\nimport {Api, ApiObject, fetchOptions, Payload} from '../types';\nimport {ServerError} from '../utils/errors';\nimport {\n  getVariable,\n  setVariable,\n  deleteVariable,\n  cloneObject,\n  createObject,\n  difference,\n  guid,\n  isEmpty,\n  mapObject,\n  keyToPath\n} from '../utils/helper';\nimport isEqual from 'lodash/isEqual';\nimport flatten from 'lodash/flatten';\nimport {getStoreById, removeStore} from './manager';\nimport {filter} from '../utils/tpl';\nimport {normalizeApiResponseData} from '../utils/api';\n\nexport const FormStore = ServiceStore.named('FormStore')\n  .props({\n    inited: false,\n    validated: false,\n    submited: false,\n    submiting: false,\n    savedData: types.frozen(),\n    // items: types.optional(types.array(types.late(() => FormItemStore)), []),\n    canAccessSuperData: true,\n    persistData: types.optional(types.union(types.string, types.boolean), ''),\n    restError: types.optional(types.array(types.string), []) // 没有映射到表达项上的 errors\n  })\n  .views(self => {\n    function getItems() {\n      const formItems: Array<IFormItemStore> = [];\n\n      // 查找孩子节点中是 formItem 的表单项\n      const pool = self.children.concat();\n      while (pool.length) {\n        const current = pool.shift()!;\n\n        if (current.storeType === FormItemStore.name) {\n          formItems.push(current);\n        } else {\n          pool.push(...current.children);\n        }\n      }\n\n      return formItems;\n    }\n\n    return {\n      get loading() {\n        return self.saving || self.fetching;\n      },\n\n      get items() {\n        return getItems();\n      },\n\n      get errors() {\n        let errors: {\n          [propName: string]: Array<string>;\n        } = {};\n\n        getItems().forEach(item => {\n          if (!item.valid) {\n            errors[item.name] = Array.isArray(errors[item.name])\n              ? errors[item.name].concat(item.errors)\n              : item.errors.concat();\n          }\n        });\n\n        return errors;\n      },\n\n      getValueByName(\n        name: string,\n        canAccessSuperData = self.canAccessSuperData\n      ) {\n        return getVariable(self.data, name, canAccessSuperData);\n      },\n\n      getPristineValueByName(name: string) {\n        return getVariable(self.pristine, name);\n      },\n\n      getItemById(id: string) {\n        return getItems().find(item => item.itemId === id);\n      },\n\n      getItemByName(name: string) {\n        return getItems().find(item => item.name === name);\n      },\n\n      getItemsByName(name: string) {\n        return getItems().filter(item => item.name === name);\n      },\n\n      get valid() {\n        return (\n          getItems().every(item => item.valid) &&\n          (!self.restError || !self.restError.length)\n        );\n      },\n\n      get validating() {\n        return getItems().some(item => item.validating);\n      },\n\n      get isPristine() {\n        return isEqual(self.pristine, self.data);\n      },\n\n      get modified() {\n        if (self.savedData) {\n          return self.savedData !== self.data;\n        }\n\n        return !this.isPristine;\n      },\n\n      get persistKey() {\n        return `${location.pathname}/${self.path}/${\n          typeof self.persistData === 'string'\n            ? filter(self.persistData, self.data)\n            : self.persistData\n        }`;\n      }\n    };\n  })\n  .actions(self => {\n    function setValues(values: object, tag?: object, replace?: boolean) {\n      self.updateData(values, tag, replace);\n\n      // 如果数据域中有数据变化，就都reset一下，去掉之前残留的验证消息\n      self.items.forEach(item => item.reset());\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function setValueByName(\n      name: string,\n      value: any,\n      isPristine: boolean = false,\n      force: boolean = false\n    ) {\n      // 没有变化就不跑了。\n      const origin = getVariable(self.data, name, false);\n\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (value !== origin) {\n        if (prev.__prev) {\n          // 基于之前的 __prev 改\n          const prevData = cloneObject(prev.__prev);\n          setVariable(prevData, name, origin);\n          Object.defineProperty(data, '__prev', {\n            value: prevData,\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        } else {\n          Object.defineProperty(data, '__prev', {\n            value: {...prev},\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        }\n      } else if (!force) {\n        return;\n      }\n\n      setVariable(data, name, value);\n\n      if (isPristine) {\n        const pristine = cloneObject(self.pristine);\n        setVariable(pristine, name, value);\n        self.pristine = pristine;\n      }\n\n      if (!data.__pristine) {\n        Object.defineProperty(data, '__pristine', {\n          value: self.pristine,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      self.data = data;\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function deleteValueByName(name: string) {\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (prev.__prev) {\n        // 基于之前的 __prev 改\n        const prevData = cloneObject(prev.__prev);\n        setVariable(prevData, name, getVariable(prev, name));\n        Object.defineProperty(data, '__prev', {\n          value: prevData,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      } else {\n        Object.defineProperty(data, '__prev', {\n          value: {...prev},\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      deleteVariable(data, name);\n      self.data = data;\n    }\n\n    function trimValues() {\n      let data = mapObject(self.data, (item: any) =>\n        typeof item === 'string' ? item.trim() : item\n      );\n      self.updateData(data);\n    }\n\n    const syncOptions = debounce(\n      () => self.items.forEach(item => item.syncOptions(undefined, self.data)),\n      250,\n      {\n        trailing: true,\n        leading: false\n      }\n    );\n\n    function setRestError(errors: string[]) {\n      self.restError.replace(errors);\n    }\n\n    function addRestError(msg: string, name?: string | Array<string>) {\n      const names = name\n        ? Array.isArray(name)\n          ? name.concat()\n          : [name]\n        : null;\n\n      if (Array.isArray(names)) {\n        const errors: any = {};\n        names.forEach(name => (errors[name] = msg));\n        setFormItemErrors(errors, 'rules');\n      } else {\n        self.restError.push(msg);\n      }\n    }\n\n    function clearRestError() {\n      setRestError([]);\n    }\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: Api,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      clearRestError();\n\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        if (options && options.beforeSend) {\n          let ret = options.beforeSend(data);\n\n          if (ret && ret.then) {\n            ret = yield ret;\n          }\n\n          if (ret === false) {\n            return;\n          }\n        }\n\n        self.markSaving(true);\n        const json: Payload = yield getEnv(self).fetcher(api, data, options);\n\n        // 失败也同样修改数据，如果有数据的话。\n        if (!isEmpty(json.data) || json.ok) {\n          self.updatedAt = Date.now();\n\n          setValues(\n            normalizeApiResponseData(json.data),\n            json.ok\n              ? {\n                  __saved: Date.now()\n                }\n              : undefined,\n            !!(api as ApiObject).replaceData\n          );\n        }\n\n        if (!json.ok) {\n\n          if (json.status === 422 && json.errors) {\n            setFormItemErrors(json.errors);\n\n            self.updateMessage(\n              json.msg ??\n                self.__(options && options.errorMessage) ??\n                self.__('Form.validateFailed'),\n              true\n            );\n          } else {\n            self.updateMessage(\n              json.msg ?? self.__(options && options.errorMessage),\n              true\n            );\n          }\n\n          throw new ServerError(self.msg, json);\n        } else {\n          updateSavedData();\n          let ret = options && options.onSuccess && options.onSuccess(json);\n          if (ret?.then) {\n            ret = yield ret;\n          }\n          if (ret?.cbResult?.then) {\n            yield ret.cbResult;\n          }\n          self.markSaving(false);\n          self.updateMessage(\n            json.msg ?? self.__(options && options.successMessage)\n          );\n          if (!ret?.dispatcher?.prevented) {\n            self.msg &&\n            getEnv(self).notify(\n              'success',\n              self.msg,\n              json.msgTimeout !== undefined\n                ? {\n                    closeButton: true,\n                    timeout: json.msgTimeout\n                  }\n                : undefined\n            );\n          }\n          return json.data;\n        }\n      } catch (e) {\n        self.markSaving(false);\n        let ret = options && options.onFailed && options.onFailed(e.response || {});\n        if (ret?.then) {\n          ret = yield ret;\n        }\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n        if (ret?.dispatcher?.prevented) {\n          return;\n        }\n        if (e.type === 'ServerError') {\n          const result = (e as ServerError).response;\n          getEnv(self).notify(\n            'error',\n            e.message,\n            result.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: result.msgTimeout\n                }\n              : undefined\n          );\n        } else {\n          getEnv(self).notify('error', e.message);\n        }\n        throw e;\n      }\n    });\n\n    function setFormItemErrors(\n      errors: {[propName: string]: string},\n      tag = 'remote'\n    ) {\n      Object.keys(errors).forEach((key: string) => {\n        const item = self.getItemById(key);\n        const items = self.getItemsByName(key);\n\n        if (item) {\n          item.setError(errors[key], tag);\n          delete errors[key];\n        } else if (items.length) {\n          // 通过 name 直接找到的\n          items.forEach(item => item.setError(errors[key], tag));\n          delete errors[key];\n        } else {\n          // 尝试通过path寻找\n          const items = getItemsByPath(key);\n\n          if (Array.isArray(items) && items.length) {\n            items.forEach(item => item.setError(`${errors[key]}`, tag));\n            delete errors[key];\n          }\n        }\n      });\n\n      // 没有映射上的error信息加在msg后显示出来\n      !isEmpty(errors) &&\n        setRestError(Object.keys(errors).map(key => String(errors[key])));\n    }\n\n    const getItemsByPath = (key: string) => {\n      const paths = keyToPath(key);\n      const len = paths.length;\n\n      return paths.reduce(\n        (stores: any[], path, idx) => {\n          if (Array.isArray(stores) && stores.every(s => s.getItemsByName)) {\n            const items = flatten(\n              stores.map(s => s.getItemsByName(path))\n            ).filter(i => i);\n            const subStores = items\n              .map(item => item?.getSubStore?.())\n              .filter(i => i);\n            return subStores.length && idx < len - 1 ? subStores : items;\n          }\n          return null;\n        },\n        [self]\n      );\n    };\n\n    const submit: (\n      fn?: (values: object) => Promise<any>,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string,\n      validateErrCb?: () => void\n    ) => Promise<any> = flow(function* submit(\n      fn: any,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string,\n      validateErrCb?: () => void\n    ) {\n      self.submited = true;\n      self.submiting = true;\n\n      try {\n        let valid = yield validate(hooks);\n\n        // 如果不是valid，而且有包含不是remote的报错的表单项时，不可提交\n        if (\n          (!valid &&\n            self.items.some(item =>\n              item.errorData.some(e => e.tag !== 'remote')\n            )) ||\n          self.restError.length\n        ) {\n          let msg = failedMessage ?? self.__('Form.validateFailed');\n          const env = getEnv(self);\n          let dispatcher: any = validateErrCb && validateErrCb();\n          if (dispatcher?.then) {\n            dispatcher = yield dispatcher;\n          }\n          if (!dispatcher?.prevented){\n            msg && env.notify('error', msg);\n          }\n          throw new Error(msg);\n        }\n\n        if (fn) {\n          const diff = difference(self.data, self.pristine);\n          const result = yield fn(\n            createObject(\n              createObject(self.data.__super, {\n                diff: diff,\n                __diff: diff,\n                pristine: self.pristine\n              }),\n              self.data\n            )\n          );\n          return result ?? self.data;\n        }\n\n        return self.data;\n      } finally {\n        self.submiting = false;\n      }\n    });\n\n    const validate: (\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) => Promise<boolean> = flow(function* validate(\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) {\n      self.validated = true;\n      const items = self.items.concat();\n      for (let i = 0, len = items.length; i < len; i++) {\n        let item = items[i] as IFormItemStore;\n\n        // 先清除组合校验的错误\n        item.clearError('rules');\n\n        // 验证过，或者是 unique 的表单项，或者强制验证，或者有远端校验api\n        if (\n          !item.validated ||\n          item.unique ||\n          forceValidate ||\n          !!item.validateApi\n        ) {\n          yield item.validate(self.data);\n        }\n      }\n\n      if (hooks && hooks.length) {\n        for (let i = 0, len = hooks.length; i < len; i++) {\n          yield hooks[i]();\n        }\n      }\n\n      return self.valid;\n    });\n\n    const validateFields: (fields: Array<string>) => Promise<boolean> = flow(\n      function* validateFields(fields: Array<string>) {\n        const items = self.items.concat();\n        let result: Array<boolean> = [];\n        for (let i = 0, len = items.length; i < len; i++) {\n          let item = items[i] as IFormItemStore;\n\n          if (~fields.indexOf(item.name)) {\n            result.push(yield item.validate(self.data));\n          }\n        }\n        return result.every(item => item);\n      }\n    );\n\n    function clearErrors() {\n      const items = self.items.concat();\n      items.forEach(item => item.reset());\n    }\n\n    function reset(cb?: (data: any) => void, resetData: boolean = true) {\n      if (resetData) {\n        self.data = self.pristine;\n      }\n\n      // 值可能变了，重新验证一次。\n      self.validated = false;\n      self.submited = false;\n      self.items.forEach(item => item.reset());\n      cb && cb(self.data);\n    }\n\n    function clear(cb?: (data: any) => void) {\n      const toClear: any = {};\n      self.items.forEach(item => {\n        if (item.name && item.type !== 'hidden') {\n          setVariable(toClear, item.name, item.resetValue);\n        }\n      });\n      setValues(toClear);\n      self.validated = false;\n      self.submited = false;\n      self.items.forEach(item => item.reset());\n      cb && cb(self.data);\n    }\n\n    function setCanAccessSuperData(value: boolean = true) {\n      self.canAccessSuperData = value;\n    }\n\n    function setInited(value: boolean) {\n      self.inited = value;\n    }\n\n    function setPersistData(value = '') {\n      self.persistData = value;\n    }\n\n    const setLocalPersistData = () => {\n      localStorage.setItem(self.persistKey, JSON.stringify(self.data));\n    };\n\n    function getLocalPersistData() {\n      let data = localStorage.getItem(self.persistKey);\n      if (data) {\n        self.updateData(JSON.parse(data));\n      }\n    }\n\n    function clearLocalPersistData() {\n      localStorage.removeItem(self.persistKey);\n    }\n\n    function updateSavedData() {\n      self.savedData = self.data;\n    }\n\n    return {\n      setInited,\n      setValues,\n      setValueByName,\n      trimValues,\n      submit,\n      validate,\n      validateFields,\n      clearErrors,\n      saveRemote,\n      reset,\n      syncOptions,\n      setCanAccessSuperData,\n      deleteValueByName,\n      getLocalPersistData,\n      setLocalPersistData,\n      clearLocalPersistData,\n      setPersistData,\n      clear,\n      updateSavedData,\n      setFormItemErrors,\n      getItemsByPath,\n      setRestError,\n      addRestError,\n      clearRestError,\n      beforeDestroy() {\n        syncOptions.cancel();\n      }\n    };\n  });\n\nexport type IFormStore = Instance<typeof FormStore>;\nexport {IFormItemStore};\n"
    ]
}