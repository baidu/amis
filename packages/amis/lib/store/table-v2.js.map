{
    "version": 3,
    "file": "table-v2.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/table-v2.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getParent,\n  Instance,\n  SnapshotIn,\n  isAlive,\n  IAnyModelType,\n  flow,\n  getEnv\n} from 'mobx-state-tree';\nimport find from 'lodash/find';\nimport isEqual from 'lodash/isEqual';\n\nimport {\n  isVisible,\n  hasVisibleExpression,\n  isObjectShallowModified,\n  qsstringify,\n  guid,\n  eachTree,\n  createObject,\n  flattenTree,\n  isObject,\n  immutableExtends,\n  isEmpty,\n  extendObject\n} from '../utils/helper';\nimport {normalizeApiResponseData} from '../utils/api';\nimport {Api, Payload, fetchOptions, ApiObject} from '../types';\nimport {ServiceStore} from './service';\n\nclass ServerError extends Error {\n  type = 'ServerError';\n}\n\nexport const Column = types\n  .model('Column', {\n    title: types.optional(types.frozen(), undefined),\n    key: '',\n    toggled: false,\n    breakpoint: types.optional(types.frozen(), undefined),\n    pristine: types.optional(types.frozen(), undefined),\n    toggable: true,\n    index: 0,\n    type: '',\n    children: types.optional(\n      types.array(types.late((): IAnyModelType => Column)),\n      []\n    )\n  })\n  .actions(self => ({\n    toggleToggle() {\n      self.toggled = !self.toggled;\n      const table = getParent(self, 2) as ITableStore;\n\n      if (!table.activeToggaleColumns.length) {\n        self.toggled = true;\n      }\n\n      table.persistSaveToggledColumns();\n    },\n    setToggled(value: boolean) {\n      self.toggled = value;\n    }\n  }));\n\nexport type IColumn = Instance<typeof Column>;\nexport type SColumn = SnapshotIn<typeof Column>;\n\nexport const Row = types\n  .model('Row', {\n    storeType: 'Row',\n    id: types.identifier,\n    key: types.string,\n    pristine: types.frozen({} as any), // 原始数据\n    data: types.frozen({} as any),\n    index: types.number,\n    newIndex: types.number,\n    depth: types.number, // 当前children位于第几层，便于使用getParent获取最顶层TableStore\n    children: types.optional(\n      types.array(types.late((): IAnyModelType => Row)),\n      []\n    ),\n    path: '' // 行数据的位置\n  })\n  .views(self => ({\n    get checked(): boolean {\n      return (getParent(self, self.depth * 2) as ITableStore).isSelected(\n        self as IRow\n      );\n    },\n\n    get modified() {\n      if (!self.data) {\n        return false;\n      }\n\n      return Object.keys(self.data).some(\n        key => !isEqual(self.data[key], self.pristine[key])\n      );\n    },\n\n    get locals(): any {\n      let children: Array<any> | null = null;\n      if (self.children.length) {\n        children = self.children.map(item => item.locals);\n      }\n\n      const parent = getParent(self, 2) as ITableStore;\n      return createObject(\n        extendObject((getParent(self, self.depth * 2) as ITableStore).data, {\n          index: self.index,\n          // todo 以后再支持多层，目前先一层\n          parent: parent.storeType === Row.name ? parent.data : undefined\n        }),\n        children\n          ? {\n              ...self.data,\n              children\n            }\n          : self.data\n      );\n    }\n  }))\n  .actions(self => ({\n    replaceWith(data: any) {\n      Object.keys(data).forEach(key => {\n        if (key !== 'id') {\n          (self as any)[key] = data[key];\n        }\n      });\n\n      if (Array.isArray(data.children)) {\n        const arr = data.children;\n        const pool = arr.concat();\n\n        // 把多的删了先\n        if (self.children.length > arr.length) {\n          self.children.splice(arr.length, self.children.length - arr.length);\n        }\n\n        let index = 0;\n        const len = self.children.length;\n        while (pool.length) {\n          // 因为父级id未更新，所以需要将子级的parentId正确指向父级id\n          const item = {\n            ...pool.shift(),\n            parentId: self.id\n          }!;\n\n          if (index < len) {\n            self.children[index].replaceWith(item);\n          } else {\n            const row = Row.create(item);\n            self.children.push(row);\n          }\n          index++;\n        }\n      }\n    },\n    change(values: object, savePristine?: boolean) {\n      self.data = immutableExtends(self.data, values);\n      savePristine && (self.pristine = self.data);\n    }\n  }));\n\nexport type IRow = Instance<typeof Row>;\nexport type SRow = SnapshotIn<typeof Row>;\n\nexport const TableStoreV2 = ServiceStore.named('TableStoreV2')\n  .props({\n    columns: types.array(Column),\n    rows: types.array(Row),\n    selectedRowKeys: types.array(types.frozen()),\n    selectedRows: types.array(types.reference(Row)),\n    expandedRowKeys: types.array(types.frozen()),\n    columnsTogglable: types.optional(\n      types.union(types.boolean, types.literal('auto')),\n      'auto'\n    ),\n    orderBy: '',\n    order: types.optional(\n      types.union(types.literal('asc'), types.literal('desc')),\n      'asc'\n    ),\n    query: types.optional(types.frozen(), {}),\n    pageNo: 1,\n    pageSize: 10,\n    dragging: false\n  })\n  .views(self => {\n    function getToggable() {\n      if (self.columnsTogglable === 'auto') {\n        return self.columns.filter.length > 10;\n      }\n\n      return self.columnsTogglable;\n    }\n\n    function hasColumnHidden() {\n      return self.columns.findIndex(column => !column.toggled) !== -1;\n    }\n\n    function getToggableColumns() {\n      return self.columns.filter(\n        item => isVisible(item.pristine, self.data) && item.toggable !== false\n      );\n    }\n\n    function getActiveToggableColumns() {\n      return getToggableColumns().filter(item => item.toggled);\n    }\n\n    function getAllFilteredColumns(columns?: Array<SColumn>): Array<any> {\n      if (columns) {\n        return columns\n          .filter(\n            item =>\n              item &&\n              isVisible(\n                item.pristine,\n                hasVisibleExpression(item.pristine) ? self.data : {}\n              ) &&\n              (item.toggled || !item.toggable)\n          )\n          .map(item => ({\n            ...item.pristine,\n            type: item.type,\n            children: item.children\n              ? getAllFilteredColumns(item.children)\n              : undefined\n          }));\n      }\n      return [];\n    }\n\n    function getFilteredColumns() {\n      return getAllFilteredColumns(self.columns);\n    }\n\n    function getUnSelectedRows() {\n      return flattenTree<IRow>(self.rows).filter((item: IRow) => !item.checked);\n    }\n\n    function getData(superData: any): any {\n      return createObject(superData, {\n        items: self.rows.map(item => item.data),\n        selectedItems: self.selectedRows.map(item => item.data),\n        unSelectedItems: getUnSelectedRows().map(item => item.data)\n      });\n    }\n\n    function isSelected(row: IRow): boolean {\n      return !!~self.selectedRows.indexOf(row);\n    }\n\n    return {\n      get toggable() {\n        return getToggable();\n      },\n\n      get columnsData() {\n        return self.columns;\n      },\n\n      get toggableColumns() {\n        return getToggableColumns();\n      },\n\n      get filteredColumns() {\n        return getFilteredColumns();\n      },\n\n      get activeToggaleColumns() {\n        return getActiveToggableColumns();\n      },\n\n      get dataSource() {\n        return self.rows.map(item => item.data);\n      },\n\n      get currentSelectedRowKeys() {\n        return self.selectedRowKeys.map(item => item);\n      },\n\n      get currentExpandedKeys() {\n        return self.expandedRowKeys.map(item => item);\n      },\n\n      // 是否隐藏了某列\n      hasColumnHidden() {\n        return hasColumnHidden();\n      },\n\n      getData,\n\n      isSelected\n    };\n  })\n  .actions(self => {\n    function updateColumns(columns: Array<SColumn>) {\n      if (columns && Array.isArray(columns)) {\n        let cols: Array<SColumn> = columns.filter(column => column).concat();\n\n        cols = cols.map((item, index) => ({\n          ...item,\n          index,\n          type: item.type || 'plain',\n          pristine: item,\n          toggled: item.toggled !== false,\n          breakpoint: item.breakpoint,\n          children: item.children ? updateColumns(item.children) : []\n        }));\n\n        return cols;\n      }\n      return;\n    }\n\n    function update(config: Partial<STableStore>) {\n      config.columnsTogglable !== void 0 &&\n        (self.columnsTogglable = config.columnsTogglable);\n\n      if (typeof config.orderBy === 'string') {\n        setOrderByInfo(\n          config.orderBy,\n          config.order === 'desc' ? 'desc' : 'asc'\n        );\n      }\n\n      if (config.columns && Array.isArray(config.columns)) {\n        self.columns.replace(updateColumns(config.columns) as any);\n      }\n    }\n\n    function persistSaveToggledColumns() {\n      const key =\n        location.pathname +\n        self.path +\n        self.toggableColumns.map(item => item.key || item.index).join('-');\n      localStorage.setItem(\n        key,\n        JSON.stringify(self.activeToggaleColumns.map(item => item.index))\n      );\n    }\n\n    function setOrderByInfo(key: string, direction: 'asc' | 'desc') {\n      self.orderBy = key;\n      self.order = direction;\n    }\n\n    function updateQuery(\n      values: object,\n      updater?: Function,\n      pageNoField: string = 'pageNo',\n      pageSizeField: string = 'pageSize',\n      replace: boolean = false\n    ) {\n      const originQuery = self.query;\n      self.query = replace\n        ? {\n            ...values\n          }\n        : {\n            ...self.query,\n            ...values\n          };\n\n      if (self.query[pageNoField || 'pageNo']) {\n        self.pageNo = parseInt(self.query[pageNoField || 'pageNo'], 10);\n      }\n\n      if (self.query[pageSizeField || 'pageSize']) {\n        self.pageSize = parseInt(self.query[pageSizeField || 'pageSize'], 10);\n      }\n\n      updater &&\n        isObjectShallowModified(originQuery, self.query, false) &&\n        setTimeout(updater.bind(null, `?${qsstringify(self.query)}`), 4);\n    }\n\n    function updateSelectedRows(\n      rows: Array<any>,\n      selectedKeys: Array<any>,\n      keyField?: string\n    ) {\n      eachTree(rows, item => {\n        if (~selectedKeys.indexOf(item.pristine[keyField || 'key'])) {\n          self.selectedRows.push(item.id);\n          self.selectedRowKeys.push(item.pristine[keyField || 'key']);\n        } else if (\n          find(selectedKeys, a => a && a == item.pristine[keyField || 'key'])\n        ) {\n          self.selectedRows.push(item.id);\n          self.selectedRowKeys.push(item.pristine[keyField || 'key']);\n        } else if (item.children) {\n          updateSelectedRows(item.children, selectedKeys, keyField);\n        }\n      });\n    }\n\n    function updateSelected(selectedKeys: Array<any>, keyField?: string) {\n      self.selectedRows.clear();\n      self.selectedRowKeys.clear();\n\n      updateSelectedRows(self.rows, selectedKeys, keyField);\n    }\n\n    function updateSelectedAll(keyField?: string) {\n      const selectedKeys: Array<any> = [];\n      eachTree(self.rows, item =>\n        selectedKeys.push(item.pristine[keyField || 'key'])\n      );\n      updateSelectedRows(self.rows, selectedKeys, keyField);\n    }\n\n    function updateExpanded(expandedRowKeys: Array<any>, keyField?: string) {\n      self.expandedRowKeys.clear();\n\n      eachTree(self.rows, item => {\n        if (~expandedRowKeys.indexOf(item.pristine[keyField || 'key'])) {\n          self.expandedRowKeys.push(item.pristine[keyField || 'key']);\n        } else if (\n          find(expandedRowKeys, a => a && a == item.pristine[keyField || 'key'])\n        ) {\n          self.expandedRowKeys.push(item.pristine[keyField || 'key']);\n        }\n      });\n    }\n\n    // 尽可能的复用 row\n    function replaceRow(arr: Array<SRow>, reUseRow?: boolean) {\n      if (reUseRow === false) {\n        self.rows.replace(arr.map(item => Row.create(item)));\n        return;\n      }\n\n      const pool = arr.concat();\n\n      // 把多的删了先\n      if (self.rows.length > arr.length) {\n        self.rows.splice(arr.length, self.rows.length - arr.length);\n      }\n\n      let index = 0;\n      const len = self.rows.length;\n      while (pool.length) {\n        const item = pool.shift()!;\n\n        if (index < len) {\n          self.rows[index].replaceWith(item);\n        } else {\n          const row = Row.create(item);\n          self.rows.push(row);\n        }\n        index++;\n      }\n    }\n\n    function initChildren(\n      children: Array<any>,\n      depth: number,\n      pindex: number,\n      parentId: string,\n      path: string = '',\n      keyField?: string\n    ): any {\n      const key = keyField || 'children';\n\n      depth += 1;\n      return children.map((item, index) => {\n        item = isObject(item)\n          ? item\n          : {\n              item\n            };\n        const id = guid();\n\n        return {\n          id: id,\n          parentId,\n          key: String(`${pindex}-${depth}-${index}`),\n          path: `${path}${index}`,\n          depth: depth,\n          index: index,\n          newIndex: index,\n          pristine: item,\n          data: item,\n          rowSpans: {},\n          children:\n            item && Array.isArray(item[key])\n              ? initChildren(item[key], depth, index, id, `${path}${index}.`)\n              : []\n        };\n      });\n    }\n\n    function initRows(\n      rows: Array<any>,\n      getEntryId?: (entry: any, index: number) => string,\n      reUseRow?: boolean,\n      keyField?: string\n    ) {\n      self.selectedRows.clear();\n\n      const key = keyField || 'children';\n\n      let arr: Array<SRow> = rows.map((item, index) => {\n        let id = getEntryId ? getEntryId(item, index) : guid();\n\n        return {\n          id: id,\n          key: String(`${index}-1-${index}`),\n          index: index,\n          newIndex: index,\n          pristine: item,\n          path: `${index}`,\n          data: item,\n          depth: 1, // 最大父节点默认为第一层，逐层叠加\n          children:\n            item && Array.isArray(item[key])\n              ? initChildren(item[key], 1, index, id, `${index}.`, key)\n              : []\n        };\n      });\n\n      replaceRow(arr, reUseRow);\n    }\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: Api,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        self.markSaving(true);\n        const json: Payload = yield getEnv(self).fetcher(api, data, options);\n        self.markSaving(false);\n\n        if (!isEmpty(json.data) || json.ok) {\n          self.updateData(\n            normalizeApiResponseData(json.data),\n            {\n              __saved: Date.now()\n            },\n            !!api && (api as ApiObject).replaceData\n          );\n          self.updatedAt = Date.now();\n        }\n\n        if (!json.ok) {\n          self.updateMessage(\n            json.msg ?? options.errorMessage ?? self.__('saveFailed'),\n            true\n          );\n          getEnv(self).notify(\n            'error',\n            self.msg,\n            json.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: json.msgTimeout\n                }\n              : undefined\n          );\n          throw new ServerError(self.msg);\n        } else {\n          self.updateMessage(json.msg ?? options.successMessage);\n          self.msg &&\n            getEnv(self).notify(\n              'success',\n              self.msg,\n              json.msgTimeout !== undefined\n                ? {\n                    closeButton: true,\n                    timeout: json.msgTimeout\n                  }\n                : undefined\n            );\n        }\n        return json.data;\n      } catch (e) {\n        self.markSaving(false);\n\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n\n        e.type !== 'ServerError' && getEnv(self).notify('error', e.message);\n        throw e;\n      }\n    });\n\n    return {\n      update,\n      persistSaveToggledColumns,\n      setOrderByInfo,\n      updateQuery,\n      initRows,\n      updateSelected,\n      updateSelectedAll,\n      updateExpanded,\n\n      // events\n      afterCreate() {\n        setTimeout(() => {\n          if (!isAlive(self)) {\n            return;\n          }\n          const key =\n            location.pathname +\n            self.path +\n            self.toggableColumns.map(item => item.key || item.index).join('-');\n\n          const data = localStorage.getItem(key);\n\n          if (data) {\n            const selectedColumns = JSON.parse(data);\n            self.toggableColumns.forEach(item =>\n              item.setToggled(!!~selectedColumns.indexOf(item.index))\n            );\n          }\n        }, 200);\n      },\n      saveRemote,\n\n      getRowByIndex(rowIndex: number) {\n        return self.rows[rowIndex];\n      }\n    };\n  });\n\nexport type ITableStore = Instance<typeof TableStoreV2>;\nexport type STableStore = SnapshotIn<typeof TableStoreV2>;\n"
    ]
}