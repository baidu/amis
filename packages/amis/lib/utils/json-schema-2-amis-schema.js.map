{
    "version": 3,
    "file": "json-schema-2-amis-schema.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/json-schema-2-amis-schema.ts"
    ],
    "names": [],
    "mappings": ";;;;AAAA,SAAS,gBAAgB,CAAC,QAAa,EAAE,GAAQ,EAAE,MAAW;IAC5D,IAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;IAC3C,IAAM,IAAI,GAAQ,EAAE,CAAC;IACrB,IAAM,WAAW,GAAQ,EAAE,CAAC;IAC5B,IAAI,IAAI,GAAG,MAAM,CAAC;IAElB,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;QAC/B,IAAI,GAAG,QAAQ,CAAC;QAEhB,OAAO,QAAQ,CAAC,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QACtE,eAAe;KAChB;SAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;QACpC,IAAI,GAAG,OAAO,CAAC;QACf,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAE7B,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM;YACL,IAAI,GAAG,OAAO,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;SACxD;KACF;SAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACrE,IAAI,GAAG,QAAQ,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;KAC9B;IAED,IAAI,OAAO,QAAQ,CAAC,OAAO,KAAK,QAAQ,EAAE;QACxC,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;KACxC;IAED,+BACE,IAAI,EAAE,GAAG,EACT,IAAI,MAAA,EACJ,QAAQ,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EACtC,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,WAAW,EAC7C,IAAI,EAAE,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,WAAW,EAC5C,KAAK,EAAE,QAAQ,CAAC,OAAO,EACvB,WAAW,aAAA,IACR,IAAI,EACP;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,UAAe,EAAE,MAAW;IAChD,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAA9C,CAA8C,CAAC,CAAC;AACzE,CAAC;AAED,SAAgB,oBAAoB,CAAC,MAAW;IAC9C,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACvD;IAED,OAAO;QACL,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC;KAClD,CAAC;AACJ,CAAC;AAXD,oDAWC",
    "sourcesContent": [
        "function property2control(property: any, key: any, schema: any) {\n  const requiredList = schema.required || [];\n  const rest: any = {};\n  const validations: any = {};\n  let type = 'text';\n\n  if (property.type === 'integer') {\n    type = 'number';\n\n    typeof property.minimum === 'number' && (rest.min = property.minimum);\n    // property.max\n  } else if (property.type === 'array') {\n    type = 'combo';\n    const items = property.items;\n\n    if (items.type === 'object') {\n      rest.controls = makeControls(items.properties, items);\n      rest.multiLine = true;\n    } else {\n      type = 'array';\n      rest.inline = true;\n      rest.items = property2control(items, 'item', property);\n    }\n  } else if (property.type === 'string' && Array.isArray(property.enum)) {\n    type = 'select';\n    rest.options = property.enum;\n  }\n\n  if (typeof property.minimum === 'number') {\n    validations.minimum = property.minimum;\n  }\n\n  return {\n    name: key,\n    type,\n    required: !!~requiredList.indexOf(key),\n    label: property.title || property.description,\n    desc: property.title && property.description,\n    value: property.default,\n    validations,\n    ...rest\n  };\n}\n\nfunction makeControls(properties: any, schema: any) {\n  const keys = Object.keys(properties);\n  return keys.map(key => property2control(properties[key], key, schema));\n}\n\nexport function JSONSchme2AMisSchema(schema: any) {\n  if (schema.type !== 'object') {\n    throw new Error('JSONSchme2AMisSchema 只支持 object 转换');\n  }\n\n  return {\n    title: schema.title,\n    type: 'form',\n    mode: 'horizontal',\n    controls: makeControls(schema.properties, schema)\n  };\n}\n"
    ]
}