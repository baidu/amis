{
    "version": 3,
    "file": "renderer-event.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/renderer-event.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {ListenerAction, ListenerContext, runActions} from '../actions/Action';\nimport {RendererProps} from '../factory';\nimport {IScopedContext} from '../Scoped';\n\n// 事件监听器\nexport interface EventListeners {\n  [propName: string]: {\n    weight?: number; // 权重\n    actions: ListenerAction[]; // 执行的动作集\n  };\n}\n\n// 事件动作属性\nexport interface OnEventProps {\n  onEvent?: {\n    [propName: string]: {\n      weight?: number; // 权重\n      actions: ListenerAction[]; // 执行的动作集\n    };\n  };\n}\n\n// 渲染器事件监听器\nexport interface RendererEventListener {\n  renderer: React.Component<RendererProps>;\n  type: string;\n  weight: number;\n  actions: ListenerAction[];\n}\n\n// 将事件上下文转成事件对象\nexport type RendererEvent<T, P = any> = {\n  context: T;\n  type: string;\n  prevented?: boolean; // 阻止原有动作执行\n  stoped?: boolean; // 阻止后续动作执行\n  data?: P;\n  preventDefault: () => void;\n  stopPropagation: () => void;\n  setData: (data: P) => void;\n};\n\nexport interface RendererEventContext {\n  data?: any;\n  [propName: string]: any;\n}\n\nlet rendererEventListeners: RendererEventListener[] = [];\n\n// 创建渲染器事件对象\nexport function createRendererEvent<T extends RendererEventContext>(\n  type: string,\n  context: T\n): RendererEvent<T> {\n  const rendererEvent = {\n    context,\n    type,\n    prevented: false,\n    stoped: false,\n    preventDefault() {\n      rendererEvent.prevented = true;\n    },\n\n    stopPropagation() {\n      rendererEvent.stoped = true;\n    },\n\n    get data() {\n      return rendererEvent.context.data;\n    },\n\n    setData(data: any) {\n      rendererEvent.context.data = data;\n    }\n  };\n  return rendererEvent;\n}\n\n// 绑定事件\nexport const bindEvent = (renderer: any) => {\n  if (!renderer) {\n    return undefined;\n  }\n  const listeners: EventListeners = renderer.props.$schema.onEvent;\n  if (listeners) {\n    // 暂存\n    for (let key of Object.keys(listeners)) {\n      const listener = rendererEventListeners.some(\n        (item: RendererEventListener) =>\n          item.renderer === renderer && item.type === key\n      );\n      if (!listener) {\n        rendererEventListeners.push({\n          renderer,\n          type: key,\n          weight: listeners[key].weight || 0,\n          actions: listeners[key].actions\n        });\n      }\n    }\n\n    return () => {\n      rendererEventListeners = rendererEventListeners.filter(\n        (item: RendererEventListener) => item.renderer !== renderer\n      );\n    };\n  }\n\n  return undefined;\n};\n\n// 触发事件\nexport async function dispatchEvent(\n  e: string | React.MouseEvent<any>,\n  renderer: React.Component<RendererProps>,\n  scoped: IScopedContext,\n  data: any,\n  broadcast?: RendererEvent<any>\n): Promise<RendererEvent<any> | void> {\n  let unbindEvent = null;\n  const eventName = typeof e === 'string' ? e : e.type;\n\n  renderer?.props?.env?.beforeDispatchEvent?.(\n    e,\n    renderer,\n    scoped,\n    data,\n    broadcast\n  );\n\n  if (!broadcast) {\n    const eventConfig = renderer?.props?.onEvent?.[eventName];\n\n    if (!eventConfig) {\n      // 没命中也没关系\n      return Promise.resolve();\n    }\n\n    unbindEvent = bindEvent(renderer);\n  }\n  // 没有可处理的监听\n  if (!rendererEventListeners.length) {\n    return Promise.resolve();\n  }\n  // 如果是广播动作，就直接复用\n  const rendererEvent =\n    broadcast ||\n    createRendererEvent(eventName, {\n      env: renderer?.props?.env,\n      nativeEvent: e,\n      data,\n      scoped\n    });\n  // 过滤&排序\n  const listeners = rendererEventListeners\n    .filter(\n      (item: RendererEventListener) =>\n        item.type === eventName &&\n        (broadcast ? true : item.renderer === renderer)\n    )\n    .sort(\n      (prev: RendererEventListener, next: RendererEventListener) =>\n        next.weight - prev.weight\n    );\n\n  for (let listener of listeners) {\n    await runActions(listener.actions, listener.renderer, rendererEvent);\n\n    // 停止后续监听器执行\n    if (rendererEvent.stoped) {\n      break;\n    }\n  }\n\n  unbindEvent?.();\n\n  return Promise.resolve(rendererEvent);\n}\n\nexport const getRendererEventListeners = () => {\n  return rendererEventListeners;\n};\n\nexport default {};\n"
    ]
}