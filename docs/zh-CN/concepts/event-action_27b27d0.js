amis.define('docs/zh-CN/concepts/event-action.md', function(require, exports, module, define) {

  module.exports = {
    "title": "事件动作",
    "description": "事件动作",
    "type": 0,
    "group": "💡 概念",
    "menuName": "事件动作",
    "icon": null,
    "order": 9,
    "html": "<div class=\"markdown-body\"><blockquote>\n<p>1.7.0 及以上版本</p>\n</blockquote>\n<p>上一节我们介绍了如何实现联动，是比较基础和局限的，而事件动作是更简单、更灵活、更高级的用法，可以解决复杂的 UI 交互场景，支持渲染器事件监听和响应设计，无需关心组件层级关系。例如：</p>\n<ul>\n<li>http 请求：发送 http 请求</li>\n<li>弹窗提示：执行弹窗、抽屉打开和 toast 提示</li>\n<li>页面跳转：页面链接跳转</li>\n<li>浏览器相关：回退、前进、后退、刷新</li>\n<li>刷新组件：联动刷新表单数据，即数据重新加载</li>\n<li>组件状态：控制指定组件的显示/隐藏、启用/禁用、展示态/编辑态</li>\n<li>组件特性动作：执行指定组件的专有动作，例如执行表单的提交动作</li>\n<li>组件数据：更新指定组件的数据域</li>\n<li>广播：多个组件监听同一个事件做出不同响应</li>\n<li>JS 脚本：通过编写 JS 代码片段实现所需逻辑，同时支持 JS 代码内执行动作</li>\n<li>逻辑编排：条件、循环、排他、并行</li>\n</ul>\n<h2><a class=\"anchor\" name=\"%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\" href=\"#%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本使用</h2><h3><a class=\"anchor\" name=\"onevent\" href=\"#onevent\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onEvent</h3><p>通过<code>onEvent</code>属性实现渲染器事件与响应动作的绑定。<code>onEvent</code>内配置事件和动作映射关系，<code>actions</code>是事件对应的响应动作的集合。</p>\n<pre><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"尝试点击、鼠标移入/移出\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"primary\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"onEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"click\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 监听点击事件</span>\n      <span class=\"token property\">\"actions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 执行的动作列表</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"actionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"toast\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 执行toast提示动作</span>\n          <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 动作参数</span>\n            <span class=\"token property\">\"msgType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"派发点击事件\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"mouseenter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 监听鼠标移入事件</span>\n      <span class=\"token property\">\"actions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"actionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"toast\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"msgType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"派发鼠标移入事件\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"mouseleave\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 监听鼠标移出事件</span>\n      <span class=\"token property\">\"actions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"actionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"toast\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"msgType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"派发鼠标移出事件\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"尝试点击、鼠标移入/移出\",\n      \"level\": \"primary\",\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"actionType\": \"toast\",\n              \"args\": {\n                \"msgType\": \"info\",\n                \"msg\": \"派发点击事件\"\n              }\n            }\n          ]\n        },\n        \"mouseenter\": {\n          \"actions\": [\n            {\n              \"actionType\": \"toast\",\n              \"args\": {\n                \"msgType\": \"info\",\n                \"msg\": \"派发鼠标移入事件\"\n              }\n            }\n          ]\n        },\n        \"mouseleave\": {\n          \"actions\": [\n            {\n              \"actionType\": \"toast\",\n              \"args\": {\n                \"msgType\": \"info\",\n                \"msg\": \"派发鼠标移出事件\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E4%B8%8A%E4%B8%8B%E6%96%87\" href=\"#%E4%B8%8A%E4%B8%8B%E6%96%87\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>上下文</h3><p>执行动作时，可以通过<code>${event.data}</code>获取事件对象的数据、通过<code>${__rendererData}</code>获取组件当前数据域，例如：</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  data: {\n    p1: 'p1'\n  },\n  \"body\": {\n    \"type\": \"form\",\n    debug: true,\n    \"api\": {\n      url: \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm\",\n      method: \"post\",\n      data: {\n        \"&\": '$$',\n        job: 'coder'\n      }\n    },\n    data: {\n      job: 'hr'\n    },\n    \"body\": [\n      {\n        type: 'alert',\n        \"body\": \"监听姓名值变化，执行动作时读取输入的内容；监听年龄值变化，执行动作时读取input-text组件当前数据域（表单数据）\",\n        \"level\": \"info\",\n        \"className\": \"mb-1\"\n      },\n      {\n        \"type\": \"input-text\",\n        \"name\": \"name\",\n        \"label\": \"姓名：\",\n        onEvent: {\n          change: {\n            actions: [\n              {\n                actionType: 'toast',\n                args: {\n                  msg: '${name}'\n                }\n              }\n            ]\n          }\n        }\n      },\n      {\n        \"type\": \"input-text\",\n        \"name\": \"age\",\n        \"label\": \"年龄：\",\n        onEvent: {\n          change: {\n            actions: [\n              {\n                actionType: 'toast',\n                args: {\n                  msg: '${__rendererData|json}'\n                }\n              }\n            ]\n          }\n        }\n      }\n    ],\n    onEvent: {\n      submitSucc: {\n        actions: [\n          {\n            actionType: 'toast',\n            args: {\n              msg: '${event.data|json}'\n            }\n          },\n          {\n            actionType: 'toast',\n            args: {\n              msg: '${__rendererData|json}'\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运行日志</h3><p>可以在浏览器控制台查看运行日志，类似如下</p>\n<pre><code>run action ajax\n  [ajax] action args, data {api: {…}, messages: {…}}\n  [ajax] action end event {context: {…}, type: &#39;click&#39;, prevented: false, stoped: false, preventDefault: ƒ, …}\n</code></pre>\n<p>代表运行了 ajax 动作，第二行是传递的参数和数据，第三行是执行完动作之后的 <code>event</code> 值，可以用做后续动作的参数。</p>\n<h2><a class=\"anchor\" name=\"%E5%88%86%E7%B1%BB\" href=\"#%E5%88%86%E7%B1%BB\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分类</h2><p>事件包含<code>渲染器事件</code>和<code>广播事件</code>。</p>\n<ul>\n<li>渲染器事件，由具体的渲染器组件提供，每个渲染器组件暴露的事件可以查看具体的<a href=\"../../components/page#事件表\">组件文档的事件表</a>；</li>\n<li>广播事件，即自定义事件，可以自定义派发的事件名称<code>eventName</code>，其他渲染器可以监听该自定义事件并配置响应动作。</li>\n</ul>\n<p>动作包含<code>通用动作</code>、<code>组件动作</code>、<code>广播动作</code>、<code>自定义动作</code>，可以通过配置<code>actionType</code>来指定具体执行什么动作。</p>\n<h2><a class=\"anchor\" name=\"%E5%8F%91%E9%80%81-http-%E8%AF%B7%E6%B1%82\" href=\"#%E5%8F%91%E9%80%81-http-%E8%AF%B7%E6%B1%82\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发送 http 请求</h2><p>通过配置<code>actionType: &#39;ajax&#39;</code>实现 http 请求发送，该动作需实现 <code>env.fetcher</code> 请求器。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    name: 'lll'\n  },\n  body: [\n    {\n      type: 'button',\n      id: 'b_001',\n      label: '发送 Ajax 请求',\n      level: 'primary',\n      \"confirmText\": \"确认要发出这个请求？\",\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'ajax',\n              api: {\n                url: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm?name=${name}',\n                method: 'post',\n                responseData: {\n                  \"resId\": \"${id}\",\n                },\n                messages: {\n                  success: '成功了！欧耶',\n                  failed: '失败了呢。。'\n                },\n              },\n              data: {\n                age: 18\n              }\n            },\n            {\n              actionType: 'toast',\n              expression: '${event.data.responseResult.responseStatus === 0}',\n              args: {\n                msg: '${event.data.responseResult|json}'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E9%9D%99%E9%BB%98%E6%A8%A1%E5%BC%8F\" href=\"#%E9%9D%99%E9%BB%98%E6%A8%A1%E5%BC%8F\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>静默模式</h3><p>当配置<code>silent: true</code>时，请求完成后不会弹出提示信息。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    name: 'lll'\n  },\n  body: [\n    {\n      type: 'button',\n      id: 'b_001',\n      label: '发送 Ajax 请求（静默模式）',\n      level: 'primary',\n      \"confirmText\": \"确认要发出这个请求？\",\n      className: 'm',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'ajax',\n              api: {\n                url: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/initData',\n                method: 'post',\n                messages: {\n                  success: '成功了！欧耶',\n                  failed: '失败了呢。。'\n                },\n                silent: true\n              },\n              data: {\n                age: 18\n              }\n            },\n            {\n              actionType: 'toast',\n              expression: '${event.data.responseResult.responseStatus === 0}',\n              args: {\n                msg: '${event.data.responseResult|json}'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E5%8F%AF%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE\" href=\"#%E5%8F%AF%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可读取的数据</h3><p>请求配置中可读取的数据包含事件源所在数据域和动作执行产生的数据。可以通过<code>api.data</code>配置数据映射来读取所需数据。例如：</p>\n<ul>\n<li>取所在数据域的数据：通过<code>&quot;name&quot;: &quot;${name}&quot;, &quot;email&quot;: &quot;${email}&quot;</code>来映射表单校验数据（只适用于事件源在表单内的情况）</li>\n<li>取动作产生的数据：通过<code>&quot;name&quot;: &quot;${event.data.validateResult.payload.name}&quot;, &quot;email&quot;: &quot;${event.data.validateResult.payload.email}&quot;</code>来映射表单校验数据，这种是获取前面表单校验动作的校验结果数据。通过<code>&quot;&amp;&quot;: &quot;${event.data.validateResult.payload}&quot;</code>展开表单校验数据，结果相同，这是一个数据映射小技巧</li>\n</ul>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"表单外的校验按钮\",\n      \"className\": \"mb-2\",\n      level: 'primary',\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"componentId\": \"form_validate\",\n              \"outputVar\": \"validateResult\",\n              \"actionType\": \"validate\"\n            },\n            {\n              \"outputVar\": \"responseResult\",\n              \"actionType\": \"ajax\",\n              \"api\": {\n                \"method\": \"post\",\n                \"url\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm\",\n                \"data\": {\n                  \"name\": \"${name}\",\n                  \"email\": \"${email}\"\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"id\": \"u:bd7adb583ec8\"\n    },\n    {\n      \"type\": \"form\",\n      \"id\": \"form_validate\",\n      \"body\": [\n        {\n          \"type\": \"input-text\",\n          \"name\": \"name\",\n          \"label\": \"姓名：\",\n          \"required\": true,\n          \"id\": \"u:fbbc02500df6\"\n        },\n        {\n          \"name\": \"email\",\n          \"type\": \"input-text\",\n          \"label\": \"邮箱：\",\n          \"required\": true,\n          \"validations\": {\n            \"isEmail\": true\n          },\n          \"id\": \"u:830d0bad3e6a\"\n        }\n      ],\n      \"actions\": [\n        {\n          \"type\": \"button\",\n          \"label\": \"表单内的校验按钮\",\n          level: 'primary',\n          \"onEvent\": {\n            \"click\": {\n              \"actions\": [\n                {\n                  \"componentId\": \"form_validate\",\n                  \"outputVar\": \"validateResult\",\n                  \"actionType\": \"validate\"\n                },\n                {\n                  \"outputVar\": \"responseResult\",\n                  \"actionType\": \"ajax\",\n                  \"api\": {\n                    \"method\": \"post\",\n                    \"url\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm\",\n                    \"data\": {\n                      \"name\": \"${name}\",\n                      \"email\": \"${email}\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          \"id\": \"u:bd7adb583ec8\"\n        }\n      ]\n    }\n  ],\n  \"id\": \"u:d79af3431de1\"\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>api</td>\n<td><a href=\"../../../docs/types/api\">API</a></td>\n<td>-</td>\n<td>接口配置</td>\n</tr>\n<tr>\n<td>options</td>\n<td><code>object</code></td>\n<td>-</td>\n<td>其他配置</td>\n</tr>\n<tr>\n<td>messages</td>\n<td><code>{success: string, failed: string}</code></td>\n<td>-</td>\n<td>请求成功/失败后的提示信息</td>\n</tr>\n</tbody></table>\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>outputVar</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>请求响应结果缓存在<code>${event.data.responseResult}</code>或<code>${event.data.{outputVar}}</code></td>\n</tr>\n</tbody></table>\n<p>请求响应结果的结构如下：</p>\n<pre><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 状态码</span>\n  <span class=\"token property\">\"responseStatus\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 响应数据</span>\n  <span class=\"token property\">\"responseData\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"xxx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxx\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 响应消息</span>\n  <span class=\"token property\">\"responseMsg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ok\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a class=\"anchor\" name=\"%E5%BC%B9%E7%AA%97\" href=\"#%E5%BC%B9%E7%AA%97\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>弹窗</h2><h3><a class=\"anchor\" name=\"%E6%89%93%E5%BC%80%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-\" href=\"#%E6%89%93%E5%BC%80%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打开弹窗（模态）</h3><p>通过配置<code>actionType: &#39;dialog&#39;</code>实现 Dialog 弹窗。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      className: 'ml-2',\n      label: '打开弹窗（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'dialog',\n              dialog: {\n                type: 'dialog',\n                title: '模态弹窗',\n                id: 'dialog_001',\n                data: {\n                  myage: '22'\n                },\n                body: [\n                  {\n                    type: 'tpl',\n                    tpl: '<p>对，你打开了模态弹窗</p>',\n                    inline: false\n                  },\n                  {\n                    type: 'input-text',\n                    name: 'myname',\n                    mode: 'horizontal',\n                    onEvent: {\n                      change: {\n                        actions: [\n                          {\n                            actionType: 'confirm',\n                            componentId: 'dialog_001'\n                          }\n                        ]\n                      }\n                    }\n                  }\n                ],\n                onEvent: {\n                  confirm: {\n                    actions: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: 'confirm'\n                        }\n                      }\n                    ]\n                  },\n                  cancel: {\n                    actions: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: 'cancel'\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dialog</td>\n<td><code>string</code>/<code>DialogObject</code></td>\n<td>-</td>\n<td>指定弹框内容，格式可参考<a href=\"../../components/dialog\">Dialog</a></td>\n</tr>\n<tr>\n<td>waitForAction</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>是否等待弹窗响应，开启后将等待弹窗操作</td>\n</tr>\n<tr>\n<td>outputVar</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>输出数据变量名, 输出数据格式为 <code>{confirmed: boolean; value: any[]}</code>，当 <code>waitForAction</code> 开启时才有用</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-\" href=\"#%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>关闭弹窗（模态）</h3><p>通过配置<code>actionType: &#39;closeDialog&#39;</code>实现关闭当前弹窗；附加配置<code>componentId</code>可以实现关闭指定弹窗。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      id: 'b_003',\n      label: '打开弹窗（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'dialog',\n              dialog: {\n                type: 'dialog',\n                id: 'dialog_002',\n                title: '模态弹窗',\n                body: [\n                  {\n                    type: 'button',\n                    label: '打开子弹窗，然后关闭它的父亲',\n                    onEvent: {\n                      click: {\n                        actions: [\n                          {\n                            actionType: 'dialog',\n                            dialog: {\n                              type: 'dialog',\n                              title: '模态子弹窗',\n                              body: [\n                                {\n                                  type: 'button',\n                                  label: '关闭指定弹窗（关闭父弹窗）',\n                                  onEvent: {\n                                    click: {\n                                      actions: [\n                                        {\n                                          actionType: 'closeDialog',\n                                          componentId: 'dialog_002'\n                                        }\n                                      ]\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  {\n                    type: 'button',\n                    label: '关闭当前弹窗',\n                    className: 'ml-2',\n                    onEvent: {\n                      click: {\n                        actions: [\n                          {\n                            actionType: 'closeDialog'\n                          }\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentId</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>指定弹框组件 id</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%89%93%E5%BC%80%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-\" href=\"#%E6%89%93%E5%BC%80%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打开抽屉（模态）</h3><p>通过配置<code>actionType: &#39;drawer&#39;</code>实现 Drawer 抽屉打开。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      id: 'b_004',\n      level: 'primary',\n      label: '打开抽屉（模态）',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'drawer',\n              drawer: {\n                type: 'drawer',\n                title: '模态抽屉',\n                body: [\n                  {\n                    type: 'tpl',\n                    tpl: '<p>对，你打开了模态抽屉</p>',\n                    inline: false\n                  }\n                ],\n                onEvent: {\n                  confirm: {\n                    actions: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: 'confirm'\n                        }\n                      }\n                    ]\n                  },\n                  cancel: {\n                    actions: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: 'cancel'\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>drawer</td>\n<td><code>string</code>/<code>DrawerObject</code></td>\n<td>-</td>\n<td>指定弹框内容，格式可参考<a href=\"../../components/drawer\">Drawer</a></td>\n</tr>\n<tr>\n<td>waitForAction</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>是否等待弹窗响应，开启后将等待弹窗操作</td>\n</tr>\n<tr>\n<td>outputVar</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>输出数据变量名, 输出数据格式为 <code>{confirmed: boolean; value: any[]}</code>，当 <code>waitForAction</code> 开启时才有用</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E5%85%B3%E9%97%AD%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-\" href=\"#%E5%85%B3%E9%97%AD%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>关闭抽屉（模态）</h3><p>通过配置<code>actionType: &#39;closeDrawer&#39;</code>实现关闭当前抽屉；附加配置<code>componentId</code>可以实现关闭指定抽屉。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '打开抽屉（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'drawer',\n              drawer: {\n                type: 'drawer',\n                id: 'drawer_1',\n                title: '模态抽屉',\n                body: [\n                  {\n                    type: 'button',\n                    label: '打开子抽屉，然后关闭它的父亲',\n                    onEvent: {\n                      click: {\n                        actions: [\n                          {\n                            actionType: 'drawer',\n                            drawer: {\n                              type: 'drawer',\n                              title: '模态子抽屉',\n                              body: [\n                                {\n                                  type: 'button',\n                                  label: '关闭指定抽屉(关闭父抽屉)',\n                                  onEvent: {\n                                    click: {\n                                      actions: [\n                                        {\n                                          actionType: 'closeDrawer',\n                                          componentId: 'drawer_1'\n                                        }\n                                      ]\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  {\n                    type: 'button',\n                    label: '关闭当前抽屉',\n                    className: 'ml-2',\n                    onEvent: {\n                      click: {\n                        actions: [\n                          {\n                            actionType: 'closeDrawer'\n                          }\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentId</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>指定抽屉组件 id</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%89%93%E5%BC%80%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97\" href=\"#%E6%89%93%E5%BC%80%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打开确认弹窗</h3><p>通过配置<code>actionType: &#39;confirmDialog&#39;</code>打开确认对话框。确认对话框弹出后，如果选择取消操作，将不会执行该动作后面的动作。如下面的例子，点击确认之后将弹出<code>toast</code>提示，点击取消则不会提示。</p>\n<p><strong>普通文本内容</strong></p>\n<p>动作需要实现 env.confirm: (msg: string, title?: string) =&gt; boolean | Promise&lt;boolean&gt;。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    title: '操作确认',\n    msg: '要删除它吗？'\n  },\n  body: [\n    {\n      type: 'button',\n      label: '确认对话框（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'confirmDialog',\n              dialog: {\n                title: '${title}',\n                msg: '<span style=\"color:red\">${msg}</span>'\n              }\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: '确认ok啦！'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>自定义弹窗内容</strong></p>\n<p>可以通过<code>body</code>像配置弹窗一样配置确认弹窗的内容。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    title: '操作确认',\n    msg: '确认提交吗？'\n  },\n  body: [\n    {\n      type: 'button',\n      label: '自定义确认对话框（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'confirmDialog',\n              dialog: {\n                type: 'dialog',\n                title: '${title}',\n                confirmText: '确认',\n                cancelText: '取消',\n                confirmBtnLevel: 'primary',\n                data: {\n                  '&': '$$',\n                  title: '确认'\n                },\n                body: [\n                  {\n                    \"type\": \"form\",\n                    \"initApi\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData\",\n                    \"title\": \"编辑用户信息\",\n                    \"body\": [\n                      {\n                        \"type\": \"input-text\",\n                        \"name\": \"name\",\n                        \"label\": \"姓名\"\n                      },\n                      {\n                        \"type\": \"input-text\",\n                        \"name\": \"email\",\n                        \"label\": \"邮箱\"\n                      },\n                      {\n                        type: 'tpl',\n                        tpl: '${msg}'\n                      }\n                    ]\n                  }\n                ]\n              }\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: '确认ok啦！'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dialog</td>\n<td>{msg:<code>string</code>}/<code>DialogObject</code></td>\n<td>-</td>\n<td>指定弹框内容。自定义弹窗内容可参考<a href=\"../../components/dialog\">Dialog</a></td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%8F%90%E7%A4%BA%E5%AF%B9%E8%AF%9D%E6%A1%86\" href=\"#%E6%8F%90%E7%A4%BA%E5%AF%B9%E8%AF%9D%E6%A1%86\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>提示对话框</h3><p>通过配置<code>actionType: &#39;alert&#39;</code>打开提示对话框，该对话框只有确认按钮。该动作需要实现 env.alert: (msg: string) =&gt; void。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    msg: '去吃饭了'\n  },\n  body: [\n    {\n      type: 'button',\n      label: '提示对话框（模态）',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'alert',\n              dialog: {\n                title: '提示',\n                msg: '<a href=\"http://www.baidu.com\" target=\"_blank\">${msg}~</a>'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dialog</td>\n<td>{title:<code>string</code><br>msg:<code>string</code>}</td>\n<td>{title: &#39;系统提示&#39;, msg: &#39;&#39;}</td>\n<td>对话框配置</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"toast-%E6%8F%90%E7%A4%BA\" href=\"#toast-%E6%8F%90%E7%A4%BA\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toast 提示</h3><p>通过配置<code>actionType: &#39;toast&#39;</code>实现弹出 toast 提示，该动作需实现 env.notify(type: ToastLevel, msg: string, conf?: ToastConf) =&gt; void 方法。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '警告',\n      level: 'warning',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'warning',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '成功',\n      level: 'success',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'success',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '错误',\n      level: 'danger',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'error',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '提示',\n      level: 'info',\n      className: 'mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'tpl',\n      tpl: '<br>',\n    },\n    {\n      type: 'button',\n      label: '左上',\n      className: 'mr-2 mt-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-left'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '中上',\n      className: 'mr-2 mt-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-center'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '右上',\n      className: 'mt-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'tpl',\n      tpl: '<br>',\n    },\n    {\n      type: 'button',\n      label: '屏幕的中央',\n      className: 'ml-10 mt-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'center'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'tpl',\n      tpl: '<br>',\n    },\n    {\n      type: 'button',\n      label: '左下',\n      className: 'mr-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'bottom-left'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '中下',\n      className: 'mr-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'bottom-center'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '右下',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msgType: 'info',\n                msg: '我是全局警告消息，可以配置不同类型和弹出位置~',\n                position: 'bottom-right'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>msgType</td>\n<td><code>string</code></td>\n<td><code>&quot;info&quot;</code></td>\n<td>消息类型 <code>info|success|error|warning</code></td>\n</tr>\n<tr>\n<td>msg</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>消息内容</td>\n</tr>\n<tr>\n<td>position</td>\n<td><code>string</code></td>\n<td><code>top-center（移动端为center）</code></td>\n<td>提示显示位置 <code>top-right|top-center|top-left|bottom-center|bottom-left|bottom-right|center</code></td>\n</tr>\n<tr>\n<td>closeButton</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>是否展示关闭按钮</td>\n</tr>\n<tr>\n<td>showIcon</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td>是否展示图标</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td><code>number</code></td>\n<td><code>5000（error类型为6000，移动端为3000）</code></td>\n<td>持续时间</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E8%B7%B3%E8%BD%AC%E9%93%BE%E6%8E%A5\" href=\"#%E8%B7%B3%E8%BD%AC%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>跳转链接</h2><p>通过配置<code>actionType: &#39;url&#39;</code>或<code>actionType: &#39;link&#39;</code>实现链接跳转，该动作需实现 env.jumpTo(to: string, action?: any) =&gt; void 方法。</p>\n<h3><a class=\"anchor\" name=\"%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2\" href=\"#%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打开页面</h3></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  data: {\n    myname: 'lvxj',\n    myjon: 'player'\n  },\n  body: [\n    {\n      type: 'button',\n      label: '百度一下',\n      level: 'primary',\n      className: 'ml-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'url',\n              args: {\n                url: 'http://www.baidu.com',\n                blank: true,\n                params: {\n                  name: 'jack',\n                  jon: '${myjon}'\n                },\n                name: '${myname}',\n                age: 18\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>按钮点击后，会打开指定页面。可用 <code>${xxx}</code> 取值</td>\n</tr>\n<tr>\n<td>blank</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>如果为 <code>true</code> 将在新 tab 页面打开</td>\n</tr>\n<tr>\n<td>params</td>\n<td><code>object</code></td>\n<td>-</td>\n<td>页面参数<code>{key:value}</code>，支持数据映射，<code>&gt; 1.10.0 及以上版本</code></td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%89%93%E5%BC%80%E5%8D%95%E9%A1%B5\" href=\"#%E6%89%93%E5%BC%80%E5%8D%95%E9%A1%B5\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打开单页</h3></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '跳转至「表达式」',\n      level: 'primary',\n      className: 'ml-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'link',\n              args: {\n                link: './expression'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>link</td>\n<td><code>string</code></td>\n<td><code>link</code></td>\n<td>用来指定跳转地址，跟 url 不同的是，这是单页跳转方式，不会渲染浏览器，请指定 amis 平台内的页面。可用 <code>${xxx}</code> 取值</td>\n</tr>\n<tr>\n<td>params</td>\n<td><code>object</code></td>\n<td>-</td>\n<td>页面参数<code>{key:value}</code>，支持数据映射，<code>&gt; 1.9.0 及以上版本</code></td>\n</tr>\n<tr>\n<td>targetType</td>\n<td><code>string</code></td>\n<td><code>page</code></td>\n<td>默认为内容区打开<code>page</code>，可设置为新窗口打开<code>blank</code>，当前页签打开<code>self</code>，<code>blank|self</code> 方式会重新渲染浏览器<code>&gt; 6.1.0 及以上版本</code></td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E6%B5%8F%E8%A7%88%E5%99%A8\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>浏览器</h2><h3><a class=\"anchor\" name=\"%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9B%9E%E9%80%80\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9B%9E%E9%80%80\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>浏览器回退</h3><blockquote>\n<p>1.8.0 及以上版本</p>\n</blockquote>\n<p>通过配置<code>actionType: &#39;goBack&#39;</code>实现页面回退。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '回退',\n      level: 'primary',\n      className: 'ml-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'goBack'\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E5%89%8D%E8%BF%9B-%E5%90%8E%E9%80%80%E5%88%B0%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2\" href=\"#%E5%89%8D%E8%BF%9B-%E5%90%8E%E9%80%80%E5%88%B0%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前进/后退到指定页面</h3><blockquote>\n<p>1.8.0 及以上版本</p>\n</blockquote>\n<p>通过配置<code>actionType: &#39;goPage&#39;</code>实现浏览器页面的前进/后退。只有当历史记录中存在目标页面时才会生效。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '后退到上上个页面',\n      level: 'primary',\n      className: 'ml-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'goPage',\n              args: {\n                delta: -2\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>delta</td>\n<td><code>string</code></td>\n<td><code>0</code></td>\n<td>位置</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%B7%E6%96%B0\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%B7%E6%96%B0\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>浏览器刷新</h3><blockquote>\n<p>1.8.0 及以上版本</p>\n</blockquote>\n<p>通过配置<code>actionType: &#39;refresh&#39;</code>实现浏览器刷新。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '刷新页面',\n      level: 'primary',\n      className: 'ml-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'refresh'\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E5%A4%8D%E5%88%B6\" href=\"#%E5%A4%8D%E5%88%B6\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>复制</h2><p>通过配置<code>actionType: &#39;copy&#39;</code>和复制属性实现文本的复制操作，该动作需实现 env.copy(contents: string, options?: any) =&gt; void 方法。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '复制一段文本',\n      level: 'primary',\n      className: 'mr-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'copy',\n              args: {\n                content: 'http://www.baidu.com'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '复制一段富文本',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'copy',\n              args: {\n                copyFormat: 'text/html',\n                content: \"<a href='http://www.baidu.com'>link</a> <b>bold</b>\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>copyFormat</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>复制格式</td>\n</tr>\n<tr>\n<td>content</td>\n<td><a href=\"../../docs/concepts/template\">模板</a></td>\n<td>-</td>\n<td>指定复制的内容。可用 <code>${xxx}</code> 取值</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E6%89%93%E5%8D%B0\" href=\"#%E6%89%93%E5%8D%B0\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打印</h2><blockquote>\n<p>6.2.0 及以后版本</p>\n</blockquote>\n<p>打印页面中的某个组件，对应的组件需要配置 <code>id</code>，如果要打印多个，可以使用 <code>&quot;ids&quot;: [&quot;x&quot;, &quot;y&quot;]</code> 来打印多个组件，只支持主要是容器类组件 <code>crud</code>、<code>crud2</code>、<code>form</code>、<code>table</code>、<code>wrapper</code>、<code>container</code>、<code>flex</code>、<code>grid</code>、<code>grid2d</code>、<code>tableview</code></p>\n<blockquote>\n<p>breaking：在 6.2.0 版本中配置是 testid，但这个配置会导致性能问题，所以新版使用 id 作为标识。</p>\n</blockquote>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '打印',\n      level: 'primary',\n      className: 'mr-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'print',\n              args: {\n                id: 'mycrud'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"crud\",\n      \"api\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/sample\",\n      \"id\": \"mycrud\",\n      \"syncLocation\": false,\n      \"columns\": [\n        {\n          \"name\": \"id\",\n          \"label\": \"ID\"\n        },\n        {\n          \"name\": \"engine\",\n          \"label\": \"Rendering engine\"\n        },\n        {\n          \"name\": \"browser\",\n          \"label\": \"Browser\"\n        },\n        {\n          \"name\": \"platform\",\n          \"label\": \"Platform(s)\"\n        },\n        {\n          \"name\": \"version\",\n          \"label\": \"Engine version\"\n        },\n        {\n          \"name\": \"grade\",\n          \"label\": \"CSS grade\"\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>testid</td>\n<td><code>string</code></td>\n<td></td>\n<td>组件的 testid</td>\n</tr>\n<tr>\n<td>testids</td>\n<td><code>string[]</code></td>\n<td>-</td>\n<td>多个组件的 testid</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6\" href=\"#%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发送邮件</h2><p>通过配置<code>actionType: &#39;email&#39;</code>和邮件属性实现发送邮件操作。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '发送邮件',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'email',\n              args: {\n                to: 'amis@baidu.com',\n                cc: 'baidu@baidu.com',\n                subject: '这是邮件主题',\n                body: '这是邮件正文'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>to</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>收件人邮箱，可用 ${xxx} 取值</td>\n</tr>\n<tr>\n<td>cc</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>抄送邮箱，可用 ${xxx} 取值</td>\n</tr>\n<tr>\n<td>bcc</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>匿名抄送邮箱，可用 ${xxx} 取值</td>\n</tr>\n<tr>\n<td>subject</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>邮件主题，可用 ${xxx} 取值</td>\n</tr>\n<tr>\n<td>body</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>邮件正文，可用 ${xxx} 取值</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%E4%B8%8A%E4%B8%8B%E6%96%87%E6%95%B0%E6%8D%AE\" href=\"#%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%E4%B8%8A%E4%B8%8B%E6%96%87%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新事件上下文数据</h2><blockquote>\n<p>6.3.0 及以上版本</p>\n</blockquote>\n<p>修改 <code>event.data</code> 对象中的数据，修改后后续的动作中可以引用，及时生效，不像更新组件上下文数据是个异步操作。可以用来临时存储数据。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  title: '获取页面标题并弹出',\n  body: [\n    {\n      type: 'button',\n      className: 'ml-2',\n      label: 'toast 页面标题',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'setEventData',\n              args: {\n                key: 'title',\n                value: '页面标题：${window:document[title]}'\n              }\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: '${title}'\n              }\n            },\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E7%AD%89%E5%BE%85\" href=\"#%E7%AD%89%E5%BE%85\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>等待</h2><blockquote>\n<p>6.3.0 及以上版本</p>\n</blockquote>\n<p>通过配置<code>actionType: &#39;wait&#39;</code>，等待指定时间（<code>args.time</code> 毫秒数）后执行后续动作。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  title: '3 秒后 toast 页面标题',\n  body: [\n    {\n      type: 'button',\n      className: 'ml-2',\n      label: 'toast 页面标题',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'wait',\n              args: {\n                time: 3000\n              }\n            },\n            {\n              actionType: 'setEventData',\n              args: {\n                key: 'title',\n                value: '页面标题：${window:document[title]}'\n              }\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: '${title}'\n              }\n            },\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>time</td>\n<td><code>number</code></td>\n<td>-</td>\n<td>等待时间，单位是毫秒</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E8%87%AA%E5%AE%9A%E4%B9%89-js\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89-js\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义 JS</h2><p>通过配置<code>actionType: &#39;custom&#39;</code>实现自定义 JS。JS 中可以访问以下对象和方法：</p>\n<ul>\n<li>context，渲染器上下文</li>\n<li>doAction() 动作执行方法，用于调用任何 actionType 指定的动作</li>\n<li>event，事件对象，可以调用 setData()、stopPropagation()、preventDefault()分别实现事件上下文设置、动作干预、事件干预，可以通过 event.data 获取事件上下文</li>\n</ul>\n<p>自定义函数签名： <code>script:(context,doAction,event)=&gt;{}</code></p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '发送一个 http 请求',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'custom',\n              script:\n                \"doAction({actionType: 'ajax', args: {api: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm'}});\\n //event.stopPropagation();\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>script</td>\n<td><code>string</code>/<code>function</code></td>\n<td>-</td>\n<td>自定义 JS 脚本代码，代码内可以通过调用<code>doAction</code>执行任何<a href=\"../../docs/concepts/event-action#动作\">动作</a> ，通过事件对象<code>event</code>可以实现事件动作干预</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%94%AF%E6%8C%81%E5%BC%82%E6%AD%A5\" href=\"#%E6%94%AF%E6%8C%81%E5%BC%82%E6%AD%A5\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>支持异步</h3><blockquote>\n<p>2.0.3 及以上版本</p>\n</blockquote>\n<ul>\n<li>方式一：通过返回 Promise 实例的方式</li>\n</ul>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      \"type\": \"form\",\n      \"title\": \"表单\",\n      \"body\": [\n        {\n          \"label\": \"编号\",\n          \"type\": \"input-text\",\n          \"name\": \"pId\",\n          \"id\": \"u:e47e2c8e6be8\",\n          \"mode\": \"horizontal\",\n          \"addOn\": {\n            \"label\": \"自动获取\",\n            \"type\": \"button\",\n            \"onEvent\": {\n              \"click\": {\n                \"actions\": [\n                  {\n                    \"componentId\": \"u:52cd013e120f\",\n                    \"actionType\": \"disabled\"\n                  },\n                  {\n                    \"script\": \"return new Promise((resolve, reject) => {setTimeout(() => {event.setData({...event.data, pId: '01027359'});resolve();}, 3000)})\",\n                    \"actionType\": \"custom\"\n                  },\n                  {\n                    \"componentId\": \"u:e47e2c8e6be8\",\n                    \"args\": {\n                      \"value\": \"${pId}\"\n                    },\n                    \"actionType\": \"setValue\"\n                  },\n                  {\n                    \"componentId\": \"u:52cd013e120f\",\n                    \"actionType\": \"enabled\"\n                  }\n                ],\n                \"weight\": 0\n              }\n            },\n            \"id\": \"u:52cd013e120f\"\n          }\n        }\n      ],\n      \"apiFromAPICenter\": false,\n      \"id\": \"u:76203156676b\"\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<ul>\n<li>方式二：通过返回 Thunk 的方式</li>\n</ul>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      \"type\": \"form\",\n      \"title\": \"表单\",\n      \"body\": [\n        {\n          \"label\": \"编号\",\n          \"type\": \"input-text\",\n          \"name\": \"pId\",\n          \"id\": \"u:e47e2c8e6be7\",\n          \"mode\": \"horizontal\",\n          \"addOn\": {\n            \"label\": \"自动获取\",\n            \"type\": \"button\",\n            \"onEvent\": {\n              \"click\": {\n                \"actions\": [\n                  {\n                    \"componentId\": \"u:52cd013e120e\",\n                    \"actionType\": \"disabled\"\n                  },\n                  {\n                    \"script\": \"return (callback) => { setTimeout(() => {event.setData({...event.data, pId: '01027359' });callback();}, 3000) };\",\n                    \"actionType\": \"custom\"\n                  },\n                  {\n                    \"componentId\": \"u:e47e2c8e6be7\",\n                    \"args\": {\n                      \"value\": \"${pId}\"\n                    },\n                    \"actionType\": \"setValue\"\n                  },\n                  {\n                    \"componentId\": \"u:52cd013e120e\",\n                    \"actionType\": \"enabled\"\n                  }\n                ],\n                \"weight\": 0\n              }\n            },\n            \"id\": \"u:52cd013e120e\"\n          }\n        }\n      ],\n      \"apiFromAPICenter\": false,\n      \"id\": \"u:76203156676a\"\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE\" href=\"#%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>存储数据</h3><p>有时在执行自定义 JS 的时候，希望该过程中产生的数据可以分享给后面的动作使用，此时可以通过<code>event.setData()</code>来实现事件上下文的设置，这样后面动作都可以通过事件上下文来获取共享的数据。</p>\n<blockquote>\n<p>注意：直接调用<code>event.setData()</code>将修改事件的原有上下文，如果不希望覆盖可以通过<code>event.setData({...event.data, ...{xxx: xxx}})</code>来进行数据的合并。</p>\n</blockquote>\n<h2><a class=\"anchor\" name=\"%E8%A7%A6%E5%8F%91%E6%8C%87%E5%AE%9A%E7%BB%84%E4%BB%B6%E5%8A%A8%E4%BD%9C\" href=\"#%E8%A7%A6%E5%8F%91%E6%8C%87%E5%AE%9A%E7%BB%84%E4%BB%B6%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>触发指定组件动作</h2><p>通过配置<code>componentId</code>或<code>componentName</code>来触发指定组件的动作（不配置将调用当前组件自己的动作），组件动作配置通过<code>args</code>传入<code>(&gt; 1.9.0 及以上版本)</code>，动作参数请查看对应的组件的<a href=\"../../components/form/index#动作表\">动作表</a>，更多示例请查看<a href=\"../../../examples/event/form\">组件事件动作示例</a>。</p>\n<h3><a class=\"anchor\" name=\"%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE\" href=\"#%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新组件数据</h3><blockquote>\n<p>1.8.0 及以上版本</p>\n</blockquote>\n<p>更新数据即更新指定组件数据域中的数据（data），通过配置<code>actionType: &#39;setValue&#39;</code>实现组件<code>数据域变量更新</code>，通过它可以实现<code>组件间联动更新</code>、<code>数据回填</code>，更多示例请查看<a href=\"../../../examples/action/setdata/form\">更新数据示例</a>。</p>\n<p><strong>注意事项</strong></p>\n<ul>\n<li>这个动作是异步的，所以不能直接通过<code>${xxx}</code>来获取更新后的数据，如果需要请更新事件上下文数据，然后通过<code>${event.data.xxx}</code>来获取。</li>\n<li>数据类型支持范围：<code>基础类型</code>、<code>对象类型</code>、<code>数组类型</code>，数据类型取决于目标组件所需数据值类型</li>\n<li>目标组件支持范围：<code>form</code>、<code>dialog</code>、<code>drawer</code>、<code>wizard</code>、<code>service</code>、<code>page</code>、<code>app</code>、<code>chart</code>，以及数据<code>输入类</code>组件</li>\n<li>&lt; 2.3.2 及以下版本，虽然更新数据可以实现对组件数据域的更新，但如果更新数据动作的数据值来自前面的异步动作（例如 发送 http 请求、自定义 JS（异步）），则后面的动作只能通过事件变量<code>${event.data.xxx}</code>来获取异步动作产生的数据，无法通过当前数据域<code>${xxx}</code>直接获取更新后的数据。</li>\n<li>它的值通常都是对象形式，比如 form 传递的值应该是类似 <code>{&quot;user&quot;: &quot;amis&quot;}</code>，这时就会更新表单里的 <code>user</code> 字段值为 <code>amis</code></li>\n</ul>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  title: '更新表单数据',\n  data: {\n    globalData: {\n      myrole: '法官',\n      mymsg: '该吃饭了!'\n    }\n  },\n  body: [\n    {\n      type: 'button',\n      label: '更新',\n      level: 'primary',\n      className: 'mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'setValue',\n              componentId: 'form_data',\n              args: {\n                value: '${globalData}'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      id: 'form_data',\n      title: '表单',\n      debug: true,\n      data: {\n        myrole: '预言家',\n        age: '18'\n      },\n      \"initApi\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData\",\n      body: [\n        {\n          type: 'input-text',\n          label: '角色',\n          name: 'myrole',\n          disabled: false,\n          mode: 'horizontal'\n        },\n        {\n          type: 'input-text',\n          label: '年龄',\n          name: 'age',\n          disabled: false,\n          mode: 'horizontal'\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E8%AF%B7%E6%B1%82\" href=\"#%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E8%AF%B7%E6%B1%82\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>刷新组件请求</h3><p>通过配置<code>actionType: &#39;reload&#39;</code>刷新指定组件的数据请求，支持数据容器类组件（<code>form</code>、<code>wizard</code>、<code>service</code>、<code>page</code>、<code>app</code>、<code>chart</code>、<code>crud</code>）以及支持动态数据的<code>输入类</code>组件，详见组件的<code>动作表</code>。更多示例请查看<a href=\"../../../examples/action/reload/form\">刷新示例</a>。</p>\n<h4><a class=\"anchor\" name=\"%E5%88%B7%E6%96%B0%E8%BE%93%E5%85%A5%E7%B1%BB%E7%BB%84%E4%BB%B6\" href=\"#%E5%88%B7%E6%96%B0%E8%BE%93%E5%85%A5%E7%B1%BB%E7%BB%84%E4%BB%B6\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>刷新输入类组件</h4><p>针对支持远程数据的输入类组件，支持刷新目标组件的数据请求。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '刷新下拉框',\n      className: 'mb-2',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'select-reload'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      title: '表单',\n      body: [\n        {\n          type: 'select',\n          id: 'select-reload',\n          name: 'select',\n          label: '选项',\n          \"source\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/getOptions?waitSeconds=1\"\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E5%88%B7%E6%96%B0-crud\" href=\"#%E5%88%B7%E6%96%B0-crud\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>刷新 CRUD</h4><p>刷新 CRUD 时，如果配置了<code>data</code>，将发送<code>data</code>给目标 CRUD 组件，并将该数据合并到目标 CRUD 组件的数据域中，然后触发目标组件的刷新操作，即 CRUD 数据拉取接口将自动追加<code>data</code>参数到请求中，更多示例可以查看<a href=\"../../components/crud#reload\">CRUD reload</a>。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"data\": {\n    \"name\": \"amis\",\n    \"age\": 18,\n    \"date\": \"2023-6-6\"\n  },\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"刷新CRUD数据加载请求，同时追加参数\",\n      level: 'primary',\n      \"className\": \"mb-2\",\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"componentId\": \"crud_reload\",\n              \"actionType\": \"reload\",\n              data: {\n                author: \"${author}\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"crud\",\n      \"api\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/sample\",\n      \"id\": \"crud_reload\",\n      \"syncLocation\": false,\n      \"columns\": [\n        {\n          \"name\": \"id\",\n          \"label\": \"ID\"\n        },\n        {\n          \"name\": \"engine\",\n          \"label\": \"Rendering engine\"\n        },\n        {\n          \"name\": \"browser\",\n          \"label\": \"Browser\"\n        },\n        {\n          \"name\": \"platform\",\n          \"label\": \"Platform(s)\"\n        },\n        {\n          \"name\": \"version\",\n          \"label\": \"Engine version\"\n        },\n        {\n          \"name\": \"grade\",\n          \"label\": \"CSS grade\"\n        },\n        {\n          \"type\": \"operation\",\n          \"label\": \"操作\",\n          \"buttons\": [\n            {\n              \"label\": \"详情\",\n              \"type\": \"button\",\n              \"level\": \"link\",\n              \"actionType\": \"dialog\",\n              \"dialog\": {\n                \"title\": \"查看详情\",\n                \"body\": {\n                  \"type\": \"form\",\n                  \"body\": [\n                    {\n                      \"type\": \"input-text\",\n                      \"name\": \"engine\",\n                      \"label\": \"Engine\"\n                    },\n                    {\n                      \"type\": \"input-text\",\n                      \"name\": \"browser\",\n                      \"label\": \"Browser\"\n                    },\n                    {\n                      \"type\": \"input-text\",\n                      \"name\": \"platform\",\n                      \"label\": \"platform\"\n                    },\n                    {\n                      \"type\": \"input-text\",\n                      \"name\": \"version\",\n                      \"label\": \"version\"\n                    },\n                    {\n                      \"type\": \"control\",\n                      \"label\": \"grade\",\n                      \"body\": {\n                        \"type\": \"tag\",\n                        \"label\": \"${grade}\",\n                        \"displayMode\": \"normal\",\n                        \"color\": \"active\"\n                      }\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"label\": \"删除\",\n              \"type\": \"button\",\n              \"level\": \"link\",\n              \"className\": \"text-danger\",\n              \"disabledOn\": \"this.grade === 'A'\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E5%88%B7%E6%96%B0%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E7%B1%BB%E7%BB%84%E4%BB%B6\" href=\"#%E5%88%B7%E6%96%B0%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E7%B1%BB%E7%BB%84%E4%BB%B6\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>刷新其他数据容器类组件</h4><p>刷新容器类组件（<code>form</code>、<code>wizard</code>、<code>service</code>、<code>page</code>、<code>app</code>、<code>chart</code>）时，如果配置了<code>data</code>，将发送<code>data</code>给目标组件，并将该数据合并到目标组件的数据域中。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"刷新Service数据加载请求，同时把年龄更新为18\",\n      level: 'primary',\n      \"className\": \"mb-2\",\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"componentId\": \"service_reload\",\n              \"actionType\": \"reload\",\n              data: {\n                age: \"18\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"service\",\n      \"api\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData\",\n      \"body\": [\n        {\n          \"type\": \"tpl\",\n          \"tpl\": \"我的名字：${name}, 我的年龄：${age|default:'-'}\",\n          \"wrapperComponent\": \"\",\n          \"inline\": false\n        }\n      ],\n      \"id\": \"service_reload\"\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E8%8E%B7%E5%BE%97%E5%88%B7%E6%96%B0%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C\" href=\"#%E8%8E%B7%E5%BE%97%E5%88%B7%E6%96%B0%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获得刷新后的结果</h4><blockquote>\n<p>6.9.0 及以上版本</p>\n</blockquote>\n<p>通过配置 outputVar 可以拿到刷新后的结果，例如以下示例，点击按钮后，会串行按顺序刷新 service 1 和 service2， 同时 service2 可以拿到 service1 的返回值。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"刷新Service数据\",\n      \"level\": \"primary\",\n      \"className\": \"mb-2\",\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"componentId\": \"service_reload\",\n              \"actionType\": \"reload\",\n              \"outputVar\": \"service1\"\n            },\n            {\n              \"actionType\": \"toast\",\n              \"args\": {\n                \"msgType\": \"info\",\n                \"msg\": \"service 的数据返回为： ${service1|json}\"\n              }\n            },\n            {\n              \"componentId\": \"service_reload2\",\n              \"actionType\": \"reload\",\n              \"data\": {\n                \"date\": \"${service1.date}\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"service\",\n      \"api\": {\n        \"method\": \"get\",\n        \"url\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData\",\n        \"trackExpression\": \"none\"\n      },\n      \"body\": [],\n      \"initFetch\": false,\n      \"id\": \"service_reload\"\n    },\n    {\n      \"type\": \"service\",\n      \"api\": {\n        \"method\": \"get\",\n        \"url\": \"https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData?date=${date}\",\n        \"trackExpression\": \"none\"\n      },\n      \"body\": [],\n      \"initFetch\": false,\n      \"id\": \"service_reload2\"\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>resetPage</td>\n<td><code>boolean</code></td>\n<td>true</td>\n<td>当目标组件为 <code>crud</code> 时，可以控制是否重置页码，<code>&gt; 2.3.2 及以上版本</code></td>\n</tr>\n</tbody></table>\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentId</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>指定刷新的目标组件 id</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E4%BF%AE%E6%94%B9%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81\" href=\"#%E4%BF%AE%E6%94%B9%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>修改组件状态</h3><blockquote>\n<p>1.8.0 及以上版本</p>\n</blockquote>\n<p>通过配置<code>actionType: &#39;show&#39;</code>或<code>&#39;hidden&#39;</code>或<code>&#39;enabled&#39;</code>或<code>&#39;disabled&#39;</code>或<code>&#39;static&#39;</code>或<code>&#39;nonstatic&#39;</code>实现对指定组件的显示、隐藏、启用、禁用，仅支持实现了对应状态控制功能的数据<code>输入类</code>组件。</p>\n<h4><a class=\"anchor\" name=\"%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F\" href=\"#%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>显示与隐藏</h4></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '显示表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'show',\n              componentId: 'form_hidden'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '隐藏表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'hidden',\n              componentId: 'form_hidden'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      id: 'form_hidden',\n      title: '表单',\n      body: [\n        {\n          \"type\": \"input-text\",\n          \"name\": \"text\",\n          \"label\": \"输入框\",\n          \"mode\": \"horizontal\",\n          \"value\": \"text\"\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8\" href=\"#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>启用与禁用</h4></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      id: 'b_dis',\n      label: '禁用表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      disabled: true,\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'disabled',\n              componentId: 'form_disable'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '启用表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'enabled',\n              componentId: 'form_disable'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      id: 'form_disable',\n      title: '表单',\n      body: [\n        {\n          \"type\": \"input-text\",\n          \"name\": \"text\",\n          \"label\": \"输入框\",\n          \"mode\": \"horizontal\",\n          \"value\": \"text\"\n        },\n        {\n          type: 'group',\n          body: [\n            {\n              type: 'button',\n              className: 'ml-2',\n              label: '禁用【禁用】',\n              level: 'primary',\n              onEvent: {\n                click: {\n                  actions: [\n                    {\n                      actionType: 'disabled',\n                      componentId: 'b_dis'\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              type: 'button',\n              className: 'ml-2',\n              label: '启用【禁用】',\n              level: 'primary',\n              onEvent: {\n                click: {\n                  actions: [\n                    {\n                      actionType: 'enabled',\n                      componentId: 'b_dis'\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E9%9D%99%E6%80%81%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%BC%96%E8%BE%91%E6%80%81\" href=\"#%E9%9D%99%E6%80%81%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%BC%96%E8%BE%91%E6%80%81\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>静态展示与编辑态</h4></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '静态展示表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'static',\n              componentId: 'form_static'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '非静态展示表单',\n      level: 'primary',\n      className: 'mr-2 mb-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'nonstatic',\n              componentId: 'form_static'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      id: 'form_static',\n      title: '表单',\n      body: [\n        {\n          \"type\": \"input-text\",\n          \"name\": \"text\",\n          \"label\": \"输入框\",\n          \"mode\": \"horizontal\",\n          \"value\": \"text\"\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>componentId</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>指定启用/禁用/显示/隐藏的目标组件 id</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"%E6%89%A7%E8%A1%8C%E7%9B%AE%E6%A0%87%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8A%A8%E4%BD%9C\" href=\"#%E6%89%A7%E8%A1%8C%E7%9B%AE%E6%A0%87%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>执行目标组件的动作</h3><p>例如，点击按钮后，切换选项卡。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '选中选项卡2',\n      level: 'primary',\n      className: 'mr-3 mb-3',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'changeActiveKey',\n              componentId: 'tabs-change-receiver',\n              args: {\n                activeKey: 2\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      id: 'tabs-change-receiver',\n      type: 'tabs',\n      mode: 'line',\n      tabs: [\n        {\n          title: '选项卡1',\n          body: '选项卡内容1'\n        },\n        {\n          title: '选项卡2',\n          body: '选项卡内容2'\n        },\n        {\n          title: '选项卡3',\n          body: '选项卡内容3'\n        }\n      ]\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E8%A7%A6%E5%8F%91%E5%B9%BF%E6%92%AD\" href=\"#%E8%A7%A6%E5%8F%91%E5%B9%BF%E6%92%AD\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>触发广播</h2><p>通过配置<code>actionType: &#39;broadcast&#39;</code>实现触发一个广播。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      \"name\": \"role\",\n      \"type\": \"select\",\n      \"label\": \"广播一下\",\n      \"mode\": \"row\",\n      \"options\": [\n        {\n          \"label\": \"海贼王的男人\",\n          \"value\": \"路飞\"\n        },\n        {\n          \"label\": \"海上华佗\",\n          \"value\": \"乔巴\"\n        },\n        {\n          \"label\": \"海上食神\",\n          \"value\": \"山治\"\n        }\n      ],\n      \"onEvent\": {\n        \"change\": {\n          \"actions\": [\n            {\n              actionType: 'broadcast',\n              args: {\n                eventName: 'broadcast_1',\n              },\n              data: {\n                myrole: '${role}',\n                age: 18\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      id: 'form_001',\n      title: '表单1（优先级低）',\n      name: 'sub-form1',\n      body: [\n        {\n          type: 'input-text',\n          label: '昵称',\n          name: 'myname',\n          disabled: false,\n          mode: 'horizontal'\n        }\n      ],\n      onEvent: {\n        broadcast_1: {\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'form_001',\n              data: {\n                myname: '${myrole}', // 从事件数据中取\n              }\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": \"info\",\n                \"msg\": \"表单1刷新完成\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      name: 'form2',\n      id: 'form_002',\n      title: '表单2（优先级中）',\n      body: [\n        {\n          type: 'input-text',\n          label: '角色',\n          name: 'myrole',\n          disabled: false,\n          mode: 'horizontal'\n        },\n        {\n          type: 'input-text',\n          label: '年龄',\n          name: 'age',\n          disabled: false,\n          mode: 'horizontal'\n        }\n      ],\n      onEvent: {\n        broadcast_1: {\n          weight: 2,\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'form_002',\n              data: {\n                myrole: '${myrole}',\n                age: '${age}'\n              }\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": \"info\",\n                \"msg\": \"表单2刷新完成\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      name: 'form3',\n      id: 'form_003',\n      title: '表单3（优先级高）',\n      body: [\n        {\n          type: 'input-text',\n          id: 'form_003_text_01',\n          label: '职业',\n          name: 'job',\n          disabled: false,\n          mode: 'horizontal'\n        }\n      ],\n      api: 'https://api/form/form3',\n      onEvent: {\n        broadcast_1: {\n          weight: 3,\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'form_003',\n              data: {\n                job: '${myrole}'\n              }\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": \"info\",\n                \"msg\": \"表单3刷新完成\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 2.3.2 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>eventName</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>广播动作对应的自定义事件名称，用于广播事件的监听</td>\n</tr>\n</tbody></table>\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>weight</td>\n<td><code>number</code></td>\n<td>0</td>\n<td>可以通过配置动作执行优先级来控制所有监听者的动作执行顺序</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E4%BD%9C\" href=\"#%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注册自定义动作</h2><p>除了以上内置动作，你还可以注册自己的动作。通过对<code>RendererAction</code>的<code>run</code>方法的实现可以定制自己的动作逻辑，最后通过<code>registerAction</code>注册到 amis 事件动作中。</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ListenerAction<span class=\"token punctuation\">,</span>\n  ListenerContext<span class=\"token punctuation\">,</span>\n  registerAction<span class=\"token punctuation\">,</span>\n  RendererAction\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'amis-core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>RendererEvent<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'amis-core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 动作定义</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IMyAction</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ListenerAction</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">actionType</span><span class=\"token operator\">:</span> <span class=\"token string\">'my-action'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">param1</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 动作参数1</span>\n    <span class=\"token literal-property property\">param2</span><span class=\"token operator\">:</span> string <span class=\"token comment\">// 动作参数2</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 我的动作实现\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAction</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RendererAction</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> IMyAction<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">renderer</span><span class=\"token operator\">:</span> ListenerContext<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> RendererEvent<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> renderer<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 你的动作逻辑</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 注册自定义动作</span>\n<span class=\"token function\">registerAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-action'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a class=\"anchor\" name=\"%E7%BC%96%E6%8E%92%E5%8A%A8%E4%BD%9C\" href=\"#%E7%BC%96%E6%8E%92%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>编排动作</h1><p>通过配置不同的逻辑动作实现动作编排，支持嵌套。</p>\n<h2><a class=\"anchor\" name=\"%E6%9D%A1%E4%BB%B6\" href=\"#%E6%9D%A1%E4%BB%B6\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>条件</h2><p>通过配置<code>expression: 表达式或ConditionBuilder组合条件</code>来实现条件逻辑。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      expression: 'okk',\n      name: 'amis',\n      features: ['flexible', 'powerful'],\n      tool: 'amis-editor',\n      platform: 'aisuda',\n      detail: {\n        version: '2.8.0',\n        github: 'https://github.com/baidu/amis'\n      }\n    },\n    body: [\n      {\n        type: 'button',\n        label: '符合条件的执行',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'toast',\n                args: {\n                  msgType: 'success',\n                  msg: 'expression表达式 ok~'\n                },\n                expression: 'expression === \"okk\"'\n              },\n              {\n                actionType: 'toast',\n                args: {\n                  msg: '1'\n                },\n                expression: 'expression === \"nono\"'\n              },\n              {\n                actionType: 'toast',\n                args: {\n                  msgType: 'success',\n                  msg: 'conditin-builder条件组合 也ok~'\n                },\n                expression: {\n                  id: 'b6434ead40cc',\n                  conjunction: 'and',\n                  children: [\n                    {\n                      id: 'e92b93840f37',\n                      left: {\n                        type: 'field',\n                        field: 'name'\n                      },\n                      op: 'equal',\n                      right: 'amis'\n                    },\n                    {\n                      id: '3779845521db',\n                      left: {\n                        type: 'field',\n                        field: 'features'\n                      },\n                      op: 'select_any_in',\n                      right: '${[LAST(features)]}'\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>expression</td>\n<td><code>boolean</code>|<a href=\"../concepts/expression\">表达式</a></td>\n<td>-</td>\n<td>执行条件，不设置表示默认执行</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E5%BE%AA%E7%8E%AF\" href=\"#%E5%BE%AA%E7%8E%AF\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>循环</h2><p>通过配置<code>actionType: &#39;loop&#39;</code>实现循环逻辑。</p>\n<h3><a class=\"anchor\" name=\"%E5%8D%95%E5%B1%82%E5%BE%AA%E7%8E%AF\" href=\"#%E5%8D%95%E5%B1%82%E5%BE%AA%E7%8E%AF\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>单层循环</h3></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      loopName: 'loopData',\n      loopData: [\n        {\n          name: 'lv',\n          age: '19'\n        },\n        {\n          name: 'xj',\n          age: '21'\n        }\n      ]\n    },\n    body: [\n      {\n        type: 'button',\n        label: '循环发送两次请求，且每次携带了循环的数据',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'loop',\n                args: {\n                  loopName: '${loopName}'\n                },\n                children: [\n                  {\n                    actionType: 'ajax',\n                    args: {\n                      api: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm?name=${name}&age=${age}'\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF\" href=\"#%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>嵌套循环</h3></div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      loopName: 'loopData',\n      loopData: [\n        {\n          name: 'lv',\n          age: '19'\n        },\n        {\n          name: 'xj',\n          age: '21'\n        }\n      ]\n    },\n    body: [\n      {\n        type: 'button',\n        label: '循环',\n        className: 'm-2',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'loop',\n                preventDefault: false,\n                stopPropagation: false,\n                args: {\n                  loopName: '${loopName}'\n                },\n                children: [\n                  {\n                    actionType: 'toast',\n                    args: {\n                      msg: '第1层循环动作1${name}'\n                    },\n                    preventDefault: false,\n                    stopPropagation: false\n                  },\n                  {\n                    actionType: 'toast',\n                    args: {\n                      msg: '第1层循环动作2${name}'\n                    }\n                  },\n                  {\n                    actionType: 'loop',\n                    args: {\n                      loopName: '${loopName}'\n                    },\n                    children: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: '第2层循环动作1${name}'\n                        }\n                      },\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: '第2层循环动作2${name}'\n                        },\n                        preventDefault: false,\n                        stopPropagation: false\n                      },\n                      {\n                        actionType: 'continue'\n                      },\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: '第2层循环动作3${name}'\n                        }\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>动作属性（args）</strong></p>\n<blockquote>\n<p><code>&lt; 1.8.0 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>loopName</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>循环变量名称</td>\n</tr>\n</tbody></table>\n<p><strong>其他属性</strong></p>\n<blockquote>\n<p><code>&lt; 2.3.2 及以下版本</code>，以下属性与 args 同级。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>children</td>\n<td>Array&lt;<a href=\"../../docs/concepts/event-action#动作\">动作</a>&gt;</td>\n<td>-</td>\n<td>子动作，可以通过<code>break动作</code>来跳出循环</td>\n</tr>\n</tbody></table>\n<h3><a class=\"anchor\" name=\"break-%E5%8A%A8%E4%BD%9C\" href=\"#break-%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Break 动作</h3><p>通过配置<code>actionType: &#39;loop&#39;</code>和<code>actionType: &#39;break&#39;</code>实现循环跳出。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      loopName: 'loopData',\n      loopData: [\n        {\n          name: 'lv',\n          age: '19'\n        },\n        {\n          name: 'xj',\n          age: '21'\n        }\n      ]\n    },\n    body: [\n      {\n        type: 'button',\n        label: '只执行了第一个动作就跳出了循环',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'loop',\n                args: {\n                  loopName: '${loopName}'\n                },\n                children: [\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'success',\n                      msg: '第 1 个动作',\n                      position: 'top-right'\n                    }\n                  },\n                  {\n                    actionType: 'break'\n                  },\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'success',\n                      msg: '第 2 个动作',\n                      position: 'top-right'\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<h3><a class=\"anchor\" name=\"continue-%E5%8A%A8%E4%BD%9C\" href=\"#continue-%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Continue 动作</h3><p>通过配置<code>actionType: &#39;loop&#39;</code>和<code>actionType: &#39;continue&#39;</code>实现循环跳过。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      loopName: 'loopData',\n      loopData: [\n        {\n          name: 'lv',\n          age: '19'\n        },\n        {\n          name: 'xj',\n          age: '21'\n        }\n      ]\n    },\n    body: [\n      {\n        type: 'button',\n        label: '只循环执行第一个动作',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'loop',\n                args: {\n                  loopName: '${loopName}',\n                  level: 3\n                },\n                children: [\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'success',\n                      msg: '第 1 个动作',\n                      position: 'top-right'\n                    }\n                  },\n                  {\n                    actionType: 'continue'\n                  },\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'success',\n                      msg: '最后的动作',\n                      position: 'top-right'\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E6%8E%92%E4%BB%96-switch-\" href=\"#%E6%8E%92%E4%BB%96-switch-\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>排他（switch）</h2><p>通过配置<code>actionType: &#39;switch&#39;</code>实现排他逻辑。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      branchCont: 18\n    },\n    body: [\n      {\n        type: 'button',\n        label: '只执行动作2',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'switch',\n                children: [\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'info',\n                      msg: '动作1',\n                      position: 'top-right'\n                    },\n                    expression: 'this.branchCont > 19',\n                    stopPropagation: true // 这里无效，因为条件不成立\n                  },\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'info',\n                      msg: '动作2',\n                      position: 'top-right'\n                    },\n                    expression: 'this.branchCont > 17'\n                  },\n                  {\n                    actionType: \"toast\",\n                    args: {\n                      msgType: 'info',\n                      msg: '动作3',\n                      position: 'top-right'\n                    },\n                    expression: 'this.branchCont > 16'\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>children</td>\n<td>Array&lt;<a href=\"../../docs/concepts/event-action#动作\">动作</a>&gt;</td>\n<td>-</td>\n<td>子动作，每个子动作可以通过配置<code>expression</code>来匹配的条件</td>\n</tr>\n</tbody></table>\n<h2><a class=\"anchor\" name=\"%E5%B9%B6%E8%A1%8C\" href=\"#%E5%B9%B6%E8%A1%8C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>并行</h2><p>通过配置<code>actionType: &#39;parallel&#39;</code>实现并行执逻辑。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: {\n    type: 'form',\n    wrapWithPanel: false,\n    data: {\n      name: 'lvxj',\n      age: 'kkkk'\n    },\n    body: [\n      {\n        type: 'button',\n        label: '同时发送两个ajax请求，并显示请求返回',\n        level: 'primary',\n        onEvent: {\n          click: {\n            actions: [\n              {\n                actionType: 'parallel',\n                children: [\n                  {\n                    actionType: 'ajax',\n                    args: {\n                      api: {\n                        url: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/initData?name=${name}',\n                        method: 'get'\n                      },\n                      messages: {\n                        success: '请求1成功了！欧耶',\n                        failed: '失败了呢。。'\n                      }\n                    },\n                    outputVar: 'var1'\n                  },\n                  {\n                    actionType: 'ajax',\n                    args: {\n                      api: {\n                        url: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm?name=${name}',\n                        method: 'get'\n                      },\n                      messages: {\n                        success: '请求2成功了！欧耶',\n                        failed: '失败了呢。。'\n                      }\n                    },\n                    outputVar: 'var2'\n                  },\n                  {\n                    actionType: 'ajax',\n                    args: {\n                      api: {\n                        url: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm?name=${name}',\n                        method: 'get'\n                      },\n                      messages: {\n                        success: '请求3成功了！欧耶',\n                        failed: '失败了呢。。'\n                      }\n                    },\n                    outputVar: 'var3'\n                  }\n                ]\n              },\n              {\n                actionType: 'toast',\n                args: {\n                  msg: 'var1:${event.data.var1|json}, var2:${event.data.var2|json}, var3:${event.data.var3|json}'\n                }\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n</script></div><div class=\"markdown-body\">\n<p><strong>其他属性</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>children</td>\n<td>Array&lt;<a href=\"../../docs/concepts/event-action#动作\">动作</a>&gt;</td>\n<td>-</td>\n<td>子动作</td>\n</tr>\n</tbody></table>\n<h1><a class=\"anchor\" name=\"%E5%8A%A8%E4%BD%9C%E9%97%B4%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92\" href=\"#%E5%8A%A8%E4%BD%9C%E9%97%B4%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>动作间数据传递</h1><p>从事件触发开始，整个数据流包含事件本身产生的事件数据和动作产生的动作数据，事件源头产生的数据在 AMIS 事件动作机制底层已经自动加入渲染器数据域，可以通过<code>xxx</code>直接获取（<code>&lt; 2.3.2 及以下版本 为 event.data.xxx</code>），而部分动作产生的数据如何流动需要交互设计者进行介入，对于数据流动可以通过数据映射，将上一个动作产生的数据作为动作参数写入下一个动作。</p>\n<h4><a class=\"anchor\" name=\"%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE\" href=\"#%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>传递数据</h4><p>通过 <code>data</code> 指定输入的参数数据（<code>&lt; 2.3.2 及以下版本</code>通过<code>args</code>传递数据），它是一个键值对。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      id: 'b_001',\n      label: '发一个广播，携带动作参数',\n      className: 'mb-2',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'broadcast',\n              args: {\n                eventName: 'broadcast_1',\n              },\n              data: {\n                name: 'lvxj',\n                age: 18\n              },\n              description: '一个按钮的点击事件'\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'form',\n      name: 'form1',\n      id: 'form_001',\n      title: '接收广播事件的参数',\n      debug: true,\n      body: [\n        {\n          type: 'input-text',\n          id: 'form_001_text_01',\n          label: '年龄',\n          name: 'age',\n          disabled: false,\n          mode: 'horizontal'\n        }\n      ],\n      data: {\n        name: 'amis'\n      },\n      onEvent: {\n        broadcast_1: {\n          actions: [\n            {\n              actionType: 'reload',\n              data: {\n                age: '${age}',\n                name: '${name}'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E5%BC%95%E7%94%A8-http-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE\" href=\"#%E5%BC%95%E7%94%A8-http-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引用 http 请求返回的数据</h4><p>http 请求动作执行结束后，后面的动作可以通过 <code>${responseResult}</code>或<code>${{outputVar}}</code>来获取请求响应结果，响应结果的结构定义参考<a href=\"../../docs/concepts/event-action#发送-http-请求\">发送 http 请求</a>。</p>\n<blockquote>\n<p><code>&lt; 2.3.2 及以下版本 需要通过 ${event.data.{xxx}}</code>来获取以上信息，例如：${event.data.responseResult}</p>\n</blockquote>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'button',\n      label: '发送Ajax请求，并把返回数据传给弹窗',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'ajax',\n              args: {\n                api: 'https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/form/saveForm'\n              }\n            },\n            {\n              actionType: 'dialog',\n              data: {\n                id: '${event.data.responseResult.responseData.id}'\n              },\n              dialog: {\n                type: 'dialog',\n                id: 'dialog_005',\n                title: '弹框标题1',\n                data: {\n                  id: '${id}'\n                },\n                body: [\n                  {\n                    type: 'form',\n                    body: [\n                      {\n                        type: 'tpl',\n                        tpl: '<p>请求返回的数据：id=${id}</p>',\n                        inline: false\n                      }\n                    ]\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h4><a class=\"anchor\" name=\"%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE\" href=\"#%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获取组件相关数据</h4><p>可以通过表达式函数<code>GETRENDERERDATA(id, path)</code>和<code>GETRENDERERPROP(id, path)</code>分别获取指定组件的数据和属性。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  body: [\n    {\n      type: 'form',\n      id: 'form_get_render',\n      wrapWithPanel: false,\n      data: {\n        name: 'amis',\n        age: '18'\n      },\n      body: [\n        {\n          type: 'input-text',\n          name: 'name',\n          label: 'name'\n        },\n        {\n          type: 'input-text',\n          name: 'age',\n          label: 'age'\n        }\n      ],\n      className: 'mb-2',\n    },\n    {\n      type: 'button',\n      className: 'mt-2',\n      label: '获取表单相关数据',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'toast',\n              args: {\n                msg: 'name:${GETRENDERERDATA(\"form_get_render\", \"name\")},type:${GETRENDERERPROP(\"form_get_render\", \"type\")}'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<p>该函数参数说明如下：</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>组件 ID，即组件的 id 属性的值</td>\n</tr>\n<tr>\n<td>path</td>\n<td>数据路径，即数据变量的路径</td>\n</tr>\n</tbody></table>\n<h1><a class=\"anchor\" name=\"%E5%B9%B2%E9%A2%84%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C\" href=\"#%E5%B9%B2%E9%A2%84%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>干预动作执行</h1><p>事件动作干预是指执行完当前动作后，干预所监听事件默认处理逻辑和后续其他动作的执行。通过<code>preventDefault</code>、<code>stopPropagation</code>分别阻止监听事件默认行为和停止下一个动作执行。</p>\n<h2><a class=\"anchor\" name=\"%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA\" href=\"#%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>阻止事件默认行为</h2><p>有些组件内置了一些逻辑来帮助用户降低配置成本，但可能这些逻辑并不符合设计者的业务需求，这时可以通过<code>onEvent</code>来监听对应的事件，并通过<code>preventDefault</code>来阻止那些默认处理逻辑来达到想要的最终效果。更多示例请查看<a href=\"../../../examples/action/prevent/form\">阻止组件默认行为示例</a>。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  title: '弹窗确认后执行其他动作并阻止默认关闭',\n  body: [\n    {\n      type: 'button',\n      className: 'ml-2',\n      label: '打开弹窗',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'dialog',\n              dialog: {\n                type: 'dialog',\n                title: '提示',\n                id: 'dialog_001',\n                data: {\n                   myage: '22'\n                },\n                body: [\n                  {\n                    type: 'alert',\n                    body: '输入Do not close，确认后将不关闭弹窗',\n                    level: 'warning'\n                  },\n                  {\n                    type: 'input-text',\n                    name: 'command'\n                  }\n                ],\n                onEvent: {\n                  confirm: {\n                    actions: [\n                      {\n                        actionType: 'toast',\n                        args: {\n                          msg: '不关闭'\n                        },\n                        preventDefault: 'command === \"Do not close\"'\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<blockquote>\n<p>6.3.0 版本开始支持</p>\n</blockquote>\n<p>或者直接通过动作来阻止</p>\n<pre><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"actionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preventDefault\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"expression\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${command === 'Do not close'}\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  type: 'page',\n  title: '弹窗确认后执行其他动作并阻止默认关闭',\n  body: [\n    {\n      type: 'button',\n      className: 'ml-2',\n      label: '打开弹窗',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'dialog',\n              dialog: {\n                type: 'dialog',\n                title: '提示',\n                id: 'dialog_001',\n                data: {\n                   myage: '22'\n                },\n                body: [\n                  {\n                    type: 'alert',\n                    body: '输入Do not close，确认后将不关闭弹窗',\n                    level: 'warning'\n                  },\n                  {\n                    type: 'input-text',\n                    name: 'command'\n                  }\n                ],\n                onEvent: {\n                  confirm: {\n                    actions: [\n                      {\n                        \"actionType\": \"preventDefault\",\n                        \"expression\" : \"${command === 'Do not close'}\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E5%81%9C%E6%AD%A2%E5%90%8E%E7%BB%AD%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C\" href=\"#%E5%81%9C%E6%AD%A2%E5%90%8E%E7%BB%AD%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>停止后续动作执行</h2><p>通过<code>onEvent</code>可以对监听的事件配置一组动作，这些动作是顺序执行的，有时间设计者希望执行某个/些动作后就停止继续执行后面的动作，这时候可以通过<code>stopPropagation</code>来停止执行后面配置的所有动作。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"title\": \"只执行3个动作中的前两个动作\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"弹出2个提示\",\n      level: 'primary',\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '动作1'\n              }\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '动作2'\n              },\n              \"stopPropagation\": true\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '动作3',\n                \"position\": 'top-right'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<blockquote>\n<p>6.3.0 版本开始支持</p>\n</blockquote>\n<p>或者直接通过动作来跳过后续逻辑</p>\n<pre><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"actionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stopPropagation\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"expression\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${command === 'Do not close'}\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"title\": \"只执行第一个动作\",\n  \"body\": [\n    {\n      \"type\": \"button\",\n      \"label\": \"弹出一个提示\",\n      level: 'primary',\n      \"onEvent\": {\n        \"click\": {\n          \"actions\": [\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '后续的动作将不会执行'\n              }\n            },\n            {\n              \"actionType\": \"stopPropagation\",\n              \"expression\": \"${true}\"\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '动作2'\n              },\n            },\n            {\n              \"actionType\": \"toast\",\n              args: {\n                \"msgType\": 'info',\n                \"msg\": '动作3'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h2><a class=\"anchor\" name=\"%E5%BF%BD%E7%95%A5%E5%8A%A8%E4%BD%9C%E6%8A%A5%E9%94%99%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C\" href=\"#%E5%BF%BD%E7%95%A5%E5%8A%A8%E4%BD%9C%E6%8A%A5%E9%94%99%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>忽略动作报错继续执行</h2><blockquote>\n<p><code>3.3.1</code> 及以上版本</p>\n</blockquote>\n<p>默认情况下，尝试执行一个不存在的目标组件动作、JS 脚本执行错误等程序错误都会导致动作执行终止，可以通过<code>ignoreError: true</code>来忽略动作报错继续执行后面的动作。</p>\n</div><div class=\"amis-preview\" style=\"min-height: undefinedpx\"><script type=\"text/schema\" undefined>{\n  \"type\": \"page\",\n  \"title\": \"第一个按钮发生错误直接阻塞执行，第二个按钮发生错误后仍然执行\",\n  \"body\": [\n    {\n      type: 'button',\n      label: '无法弹出提示',\n      level: 'primary',\n      className: 'mr-2',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'notfound'\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: 'okk'\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      type: 'button',\n      label: '可以弹出提示',\n      level: 'primary',\n      onEvent: {\n        click: {\n          actions: [\n            {\n              actionType: 'reload',\n              componentId: 'notfound',\n              ignoreError: true\n            },\n            {\n              actionType: 'toast',\n              args: {\n                msg: 'okk'\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n</script></div><div class=\"markdown-body\">\n<h1><a class=\"anchor\" name=\"%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%85%A5%E4%BA%8B%E4%BB%B6%E5%8A%A8%E4%BD%9C\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%85%A5%E4%BA%8B%E4%BB%B6%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义组件接入事件动作</h1><p>需求场景主要是想要自定义组件的内部事件暴露出去，能够通过对事件的监听来执行所需动作，并希望自定义组件自身的动作能够被其他组件调用。接入方法是通过<code>props.dispatchEvent</code>派发自身的各种事件，使其具备更灵活的交互设计能力；通过实现<code>doAction</code>方法实现其他组件对其专属动作的调用，需要注意的是，此处依赖内部的 <code>Scoped Context</code>来实现自身的注册，可以参考 <a href=\"../../docs/extend/custom-react#组件间通信\">组件间通信</a>。</p>\n<h1><a class=\"anchor\" name=\"%E5%B1%9E%E6%80%A7%E8%A1%A8\" href=\"#%E5%B1%9E%E6%80%A7%E8%A1%A8\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>属性表</h1><table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>actionType</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>动作名称</td>\n</tr>\n<tr>\n<td>args</td>\n<td><code>object</code></td>\n<td>-</td>\n<td>动作属性<code>{key:value}</code>，支持数据映射</td>\n</tr>\n<tr>\n<td>data</td>\n<td><code>object</code></td>\n<td>-</td>\n<td>追加数据<code>{key:value}</code>，支持数据映射，如果是触发其他组件的动作，则该数据会传递给目标组件，<code>&gt; 2.3.2 及以上版本</code></td>\n</tr>\n<tr>\n<td>dataMergeMode</td>\n<td><code>string</code></td>\n<td>&#39;merge&#39;</td>\n<td>当配置了 data 的时候，可以控制数据追加方式，支持合并(<code>merge</code>)和覆盖(<code>override</code>)两种模式，<code>&gt; 2.3.2 及以上版本</code></td>\n</tr>\n<tr>\n<td>preventDefault</td>\n<td><code>boolean</code>|<a href=\"../concepts/expression\">表达式</a>|<a href=\"../../components/form/condition-builder\">ConditionBuilder</a></td>\n<td>false</td>\n<td>阻止事件默认行为，<code>&gt; 1.10.0 及以上版本支持表达式，&gt; 2.9.0 及以上版本支持ConditionBuilder</code></td>\n</tr>\n<tr>\n<td>stopPropagation</td>\n<td><code>boolean</code>|<a href=\"../concepts/expression\">表达式</a>|<a href=\"../../components/form/condition-builder\">ConditionBuilder</a></td>\n<td>false</td>\n<td>停止后续动作执行，<code>&gt; 1.10.0 及以上版本支持表达式，&gt; 2.9.0 及以上版本支持ConditionBuilder</code></td>\n</tr>\n<tr>\n<td>expression</td>\n<td><code>boolean</code>|<a href=\"../concepts/expression\">表达式</a>|<a href=\"../../components/form/condition-builder\">ConditionBuilder</a></td>\n<td>-</td>\n<td>执行条件，不设置表示默认执行，<code>&gt; 1.10.0 及以上版本支持表达式，&gt; 2.9.0 及以上版本支持ConditionBuilder</code></td>\n</tr>\n<tr>\n<td>outputVar</td>\n<td><code>string</code></td>\n<td>-</td>\n<td>输出数据变量名</td>\n</tr>\n<tr>\n<td>ignoreError</td>\n<td><code>boolean</code></td>\n<td>false</td>\n<td>当动作执行出错后，是否忽略错误继续执行。<code>3.3.1 及以上版本支持</code></td>\n</tr>\n</tbody></table>\n</div>",
    "toc": {
      "label": "目录",
      "type": "toc",
      "children": [
        {
          "label": "基本使用",
          "fragment": "%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8",
          "fullPath": "#%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8",
          "level": 2,
          "children": [
            {
              "label": "onEvent",
              "fragment": "onevent",
              "fullPath": "#onevent",
              "level": 3
            },
            {
              "label": "上下文",
              "fragment": "%E4%B8%8A%E4%B8%8B%E6%96%87",
              "fullPath": "#%E4%B8%8A%E4%B8%8B%E6%96%87",
              "level": 3
            },
            {
              "label": "运行日志",
              "fragment": "%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97",
              "fullPath": "#%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97",
              "level": 3
            }
          ]
        },
        {
          "label": "分类",
          "fragment": "%E5%88%86%E7%B1%BB",
          "fullPath": "#%E5%88%86%E7%B1%BB",
          "level": 2
        },
        {
          "label": "发送 http 请求",
          "fragment": "%E5%8F%91%E9%80%81-http-%E8%AF%B7%E6%B1%82",
          "fullPath": "#%E5%8F%91%E9%80%81-http-%E8%AF%B7%E6%B1%82",
          "level": 2,
          "children": [
            {
              "label": "静默模式",
              "fragment": "%E9%9D%99%E9%BB%98%E6%A8%A1%E5%BC%8F",
              "fullPath": "#%E9%9D%99%E9%BB%98%E6%A8%A1%E5%BC%8F",
              "level": 3
            },
            {
              "label": "可读取的数据",
              "fragment": "%E5%8F%AF%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E5%8F%AF%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE",
              "level": 3
            }
          ]
        },
        {
          "label": "弹窗",
          "fragment": "%E5%BC%B9%E7%AA%97",
          "fullPath": "#%E5%BC%B9%E7%AA%97",
          "level": 2,
          "children": [
            {
              "label": "打开弹窗（模态）",
              "fragment": "%E6%89%93%E5%BC%80%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-",
              "fullPath": "#%E6%89%93%E5%BC%80%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-",
              "level": 3
            },
            {
              "label": "关闭弹窗（模态）",
              "fragment": "%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-",
              "fullPath": "#%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97-%E6%A8%A1%E6%80%81-",
              "level": 3
            },
            {
              "label": "打开抽屉（模态）",
              "fragment": "%E6%89%93%E5%BC%80%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-",
              "fullPath": "#%E6%89%93%E5%BC%80%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-",
              "level": 3
            },
            {
              "label": "关闭抽屉（模态）",
              "fragment": "%E5%85%B3%E9%97%AD%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-",
              "fullPath": "#%E5%85%B3%E9%97%AD%E6%8A%BD%E5%B1%89-%E6%A8%A1%E6%80%81-",
              "level": 3
            },
            {
              "label": "打开确认弹窗",
              "fragment": "%E6%89%93%E5%BC%80%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97",
              "fullPath": "#%E6%89%93%E5%BC%80%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97",
              "level": 3
            },
            {
              "label": "提示对话框",
              "fragment": "%E6%8F%90%E7%A4%BA%E5%AF%B9%E8%AF%9D%E6%A1%86",
              "fullPath": "#%E6%8F%90%E7%A4%BA%E5%AF%B9%E8%AF%9D%E6%A1%86",
              "level": 3
            },
            {
              "label": "toast 提示",
              "fragment": "toast-%E6%8F%90%E7%A4%BA",
              "fullPath": "#toast-%E6%8F%90%E7%A4%BA",
              "level": 3
            }
          ]
        },
        {
          "label": "跳转链接",
          "fragment": "%E8%B7%B3%E8%BD%AC%E9%93%BE%E6%8E%A5",
          "fullPath": "#%E8%B7%B3%E8%BD%AC%E9%93%BE%E6%8E%A5",
          "level": 2,
          "children": [
            {
              "label": "打开页面",
              "fragment": "%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2",
              "fullPath": "#%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2",
              "level": 3
            },
            {
              "label": "打开单页",
              "fragment": "%E6%89%93%E5%BC%80%E5%8D%95%E9%A1%B5",
              "fullPath": "#%E6%89%93%E5%BC%80%E5%8D%95%E9%A1%B5",
              "level": 3
            }
          ]
        },
        {
          "label": "浏览器",
          "fragment": "%E6%B5%8F%E8%A7%88%E5%99%A8",
          "fullPath": "#%E6%B5%8F%E8%A7%88%E5%99%A8",
          "level": 2,
          "children": [
            {
              "label": "浏览器回退",
              "fragment": "%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9B%9E%E9%80%80",
              "fullPath": "#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9B%9E%E9%80%80",
              "level": 3
            },
            {
              "label": "前进/后退到指定页面",
              "fragment": "%E5%89%8D%E8%BF%9B-%E5%90%8E%E9%80%80%E5%88%B0%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2",
              "fullPath": "#%E5%89%8D%E8%BF%9B-%E5%90%8E%E9%80%80%E5%88%B0%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2",
              "level": 3
            },
            {
              "label": "浏览器刷新",
              "fragment": "%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%B7%E6%96%B0",
              "fullPath": "#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%B7%E6%96%B0",
              "level": 3
            }
          ]
        },
        {
          "label": "复制",
          "fragment": "%E5%A4%8D%E5%88%B6",
          "fullPath": "#%E5%A4%8D%E5%88%B6",
          "level": 2
        },
        {
          "label": "打印",
          "fragment": "%E6%89%93%E5%8D%B0",
          "fullPath": "#%E6%89%93%E5%8D%B0",
          "level": 2
        },
        {
          "label": "发送邮件",
          "fragment": "%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6",
          "fullPath": "#%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6",
          "level": 2
        },
        {
          "label": "更新事件上下文数据",
          "fragment": "%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%E4%B8%8A%E4%B8%8B%E6%96%87%E6%95%B0%E6%8D%AE",
          "fullPath": "#%E6%9B%B4%E6%96%B0%E4%BA%8B%E4%BB%B6%E4%B8%8A%E4%B8%8B%E6%96%87%E6%95%B0%E6%8D%AE",
          "level": 2
        },
        {
          "label": "等待",
          "fragment": "%E7%AD%89%E5%BE%85",
          "fullPath": "#%E7%AD%89%E5%BE%85",
          "level": 2
        },
        {
          "label": "自定义 JS",
          "fragment": "%E8%87%AA%E5%AE%9A%E4%B9%89-js",
          "fullPath": "#%E8%87%AA%E5%AE%9A%E4%B9%89-js",
          "level": 2,
          "children": [
            {
              "label": "支持异步",
              "fragment": "%E6%94%AF%E6%8C%81%E5%BC%82%E6%AD%A5",
              "fullPath": "#%E6%94%AF%E6%8C%81%E5%BC%82%E6%AD%A5",
              "level": 3
            },
            {
              "label": "存储数据",
              "fragment": "%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE",
              "level": 3
            }
          ]
        },
        {
          "label": "触发指定组件动作",
          "fragment": "%E8%A7%A6%E5%8F%91%E6%8C%87%E5%AE%9A%E7%BB%84%E4%BB%B6%E5%8A%A8%E4%BD%9C",
          "fullPath": "#%E8%A7%A6%E5%8F%91%E6%8C%87%E5%AE%9A%E7%BB%84%E4%BB%B6%E5%8A%A8%E4%BD%9C",
          "level": 2,
          "children": [
            {
              "label": "更新组件数据",
              "fragment": "%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E6%9B%B4%E6%96%B0%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE",
              "level": 3
            },
            {
              "label": "刷新组件请求",
              "fragment": "%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E8%AF%B7%E6%B1%82",
              "fullPath": "#%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E8%AF%B7%E6%B1%82",
              "level": 3,
              "children": [
                {
                  "label": "刷新输入类组件",
                  "fragment": "%E5%88%B7%E6%96%B0%E8%BE%93%E5%85%A5%E7%B1%BB%E7%BB%84%E4%BB%B6",
                  "fullPath": "#%E5%88%B7%E6%96%B0%E8%BE%93%E5%85%A5%E7%B1%BB%E7%BB%84%E4%BB%B6",
                  "level": 4
                },
                {
                  "label": "刷新 CRUD",
                  "fragment": "%E5%88%B7%E6%96%B0-crud",
                  "fullPath": "#%E5%88%B7%E6%96%B0-crud",
                  "level": 4
                },
                {
                  "label": "刷新其他数据容器类组件",
                  "fragment": "%E5%88%B7%E6%96%B0%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E7%B1%BB%E7%BB%84%E4%BB%B6",
                  "fullPath": "#%E5%88%B7%E6%96%B0%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E7%B1%BB%E7%BB%84%E4%BB%B6",
                  "level": 4
                },
                {
                  "label": "获得刷新后的结果",
                  "fragment": "%E8%8E%B7%E5%BE%97%E5%88%B7%E6%96%B0%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C",
                  "fullPath": "#%E8%8E%B7%E5%BE%97%E5%88%B7%E6%96%B0%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C",
                  "level": 4
                }
              ]
            },
            {
              "label": "修改组件状态",
              "fragment": "%E4%BF%AE%E6%94%B9%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81",
              "fullPath": "#%E4%BF%AE%E6%94%B9%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81",
              "level": 3,
              "children": [
                {
                  "label": "显示与隐藏",
                  "fragment": "%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F",
                  "fullPath": "#%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F",
                  "level": 4
                },
                {
                  "label": "启用与禁用",
                  "fragment": "%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8",
                  "fullPath": "#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8",
                  "level": 4
                },
                {
                  "label": "静态展示与编辑态",
                  "fragment": "%E9%9D%99%E6%80%81%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%BC%96%E8%BE%91%E6%80%81",
                  "fullPath": "#%E9%9D%99%E6%80%81%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%BC%96%E8%BE%91%E6%80%81",
                  "level": 4
                }
              ]
            },
            {
              "label": "执行目标组件的动作",
              "fragment": "%E6%89%A7%E8%A1%8C%E7%9B%AE%E6%A0%87%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8A%A8%E4%BD%9C",
              "fullPath": "#%E6%89%A7%E8%A1%8C%E7%9B%AE%E6%A0%87%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8A%A8%E4%BD%9C",
              "level": 3
            }
          ]
        },
        {
          "label": "触发广播",
          "fragment": "%E8%A7%A6%E5%8F%91%E5%B9%BF%E6%92%AD",
          "fullPath": "#%E8%A7%A6%E5%8F%91%E5%B9%BF%E6%92%AD",
          "level": 2
        },
        {
          "label": "注册自定义动作",
          "fragment": "%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E4%BD%9C",
          "fullPath": "#%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E4%BD%9C",
          "level": 2
        },
        {
          "label": "编排动作",
          "fragment": "%E7%BC%96%E6%8E%92%E5%8A%A8%E4%BD%9C",
          "fullPath": "#%E7%BC%96%E6%8E%92%E5%8A%A8%E4%BD%9C",
          "level": 1,
          "children": [
            {
              "label": "条件",
              "fragment": "%E6%9D%A1%E4%BB%B6",
              "fullPath": "#%E6%9D%A1%E4%BB%B6",
              "level": 2
            },
            {
              "label": "循环",
              "fragment": "%E5%BE%AA%E7%8E%AF",
              "fullPath": "#%E5%BE%AA%E7%8E%AF",
              "level": 2,
              "children": [
                {
                  "label": "单层循环",
                  "fragment": "%E5%8D%95%E5%B1%82%E5%BE%AA%E7%8E%AF",
                  "fullPath": "#%E5%8D%95%E5%B1%82%E5%BE%AA%E7%8E%AF",
                  "level": 3
                },
                {
                  "label": "嵌套循环",
                  "fragment": "%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF",
                  "fullPath": "#%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF",
                  "level": 3
                },
                {
                  "label": "Break 动作",
                  "fragment": "break-%E5%8A%A8%E4%BD%9C",
                  "fullPath": "#break-%E5%8A%A8%E4%BD%9C",
                  "level": 3
                },
                {
                  "label": "Continue 动作",
                  "fragment": "continue-%E5%8A%A8%E4%BD%9C",
                  "fullPath": "#continue-%E5%8A%A8%E4%BD%9C",
                  "level": 3
                }
              ]
            },
            {
              "label": "排他（switch）",
              "fragment": "%E6%8E%92%E4%BB%96-switch-",
              "fullPath": "#%E6%8E%92%E4%BB%96-switch-",
              "level": 2
            },
            {
              "label": "并行",
              "fragment": "%E5%B9%B6%E8%A1%8C",
              "fullPath": "#%E5%B9%B6%E8%A1%8C",
              "level": 2
            }
          ]
        },
        {
          "label": "动作间数据传递",
          "fragment": "%E5%8A%A8%E4%BD%9C%E9%97%B4%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92",
          "fullPath": "#%E5%8A%A8%E4%BD%9C%E9%97%B4%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92",
          "level": 1,
          "children": [
            {
              "label": "传递数据",
              "fragment": "%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE",
              "level": 4
            },
            {
              "label": "引用 http 请求返回的数据",
              "fragment": "%E5%BC%95%E7%94%A8-http-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E5%BC%95%E7%94%A8-http-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE",
              "level": 4
            },
            {
              "label": "获取组件相关数据",
              "fragment": "%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE",
              "fullPath": "#%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE",
              "level": 4
            }
          ]
        },
        {
          "label": "干预动作执行",
          "fragment": "%E5%B9%B2%E9%A2%84%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C",
          "fullPath": "#%E5%B9%B2%E9%A2%84%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C",
          "level": 1,
          "children": [
            {
              "label": "阻止事件默认行为",
              "fragment": "%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA",
              "fullPath": "#%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA",
              "level": 2
            },
            {
              "label": "停止后续动作执行",
              "fragment": "%E5%81%9C%E6%AD%A2%E5%90%8E%E7%BB%AD%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C",
              "fullPath": "#%E5%81%9C%E6%AD%A2%E5%90%8E%E7%BB%AD%E5%8A%A8%E4%BD%9C%E6%89%A7%E8%A1%8C",
              "level": 2
            },
            {
              "label": "忽略动作报错继续执行",
              "fragment": "%E5%BF%BD%E7%95%A5%E5%8A%A8%E4%BD%9C%E6%8A%A5%E9%94%99%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C",
              "fullPath": "#%E5%BF%BD%E7%95%A5%E5%8A%A8%E4%BD%9C%E6%8A%A5%E9%94%99%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C",
              "level": 2
            }
          ]
        },
        {
          "label": "自定义组件接入事件动作",
          "fragment": "%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%85%A5%E4%BA%8B%E4%BB%B6%E5%8A%A8%E4%BD%9C",
          "fullPath": "#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%85%A5%E4%BA%8B%E4%BB%B6%E5%8A%A8%E4%BD%9C",
          "level": 1
        },
        {
          "label": "属性表",
          "fragment": "%E5%B1%9E%E6%80%A7%E8%A1%A8",
          "fullPath": "#%E5%B1%9E%E6%80%A7%E8%A1%A8",
          "level": 1
        }
      ],
      "level": 0
    }
  };

});
